{"context": "Read the following table regarding \"Coin collections\" and then answer a question.\n\nName | Number of coins\nBraden | 76\nCamilla | 94\nRick | 86\nMary | 84\nHector | 80\nDevin | 83\nEmily | 82\nAvery | 87", "question": "Some friends discussed the sizes of their coin collections. What is the mean of the numbers?", "answer": "84", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of coins collected by each friend\ncoin_counts = [76, 94, 86, 84, 80, 83, 82, 87]\n# Calculate the mean\nmean_coins = sum(coin_counts) / len(coin_counts)\nanswer = mean_coins\n", "prediction": "84.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$155 | 22,600 | 5,800\n$275 | 20,500 | 9,400\n$395 | 18,400 | 13,000\n$515 | 16,300 | 16,600\n$635 | 14,200 | 20,200", "question": "Look at the table. Then answer the question. At a price of $155, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "shortage", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \nquantity_demanded = 22600\nquantity_supplied = 5800\n\n# Determine if there is a shortage or surplus\nif quantity_demanded > quantity_supplied:\n    answer = 'shortage'\nelse:\n    answer = 'surplus'\n", "prediction": "shortage\n"}
{"context": "Read the following table regarding \"Average food preparation time\" and then answer a question.\n\nDay | Food preparation time (minutes)\nMonday | 25\nTuesday | 27\nWednesday | 18\nThursday | 21\nFriday | 27", "question": "A restaurant's average food preparation time was tracked from day to day as part of an efficiency improvement program. According to the table, what was the rate of change between Wednesday and Thursday?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nwednesday_time = 18\nthursday_time = 21\n# Calculate the rate of change from Wednesday to Thursday\nrate_of_change = thursday_time - wednesday_time\nanswer = rate_of_change\n", "prediction": "3\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nalpaca | $1,605.00\nkinkajou | $1,837.00\npython | $8,343.00\nparrot | $1,123.00\nmacaw | $1,629.00", "question": "Erik has $7,616.00. How much money will Erik have left if he buys a parrot and a kinkajou?", "answer": "4,656", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the animals\nprice_parrot = 1123.00\nprice_kinkajou = 1837.00\n# Total cost for buying a parrot and a kinkajou\ntotal_cost = price_parrot + price_kinkajou\n# Erik's initial amount of money\ninitial_amount = 7616.00\n# Calculate the remaining amount of money after the purchase\nremaining_amount = initial_amount - total_cost\nanswer = remaining_amount\n", "prediction": "4656.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nblender | $14.02\nCD | $18.35\ncomputer mouse | $10.65\nCD player | $21.84\nDVD player | $53.57\nradio | $15.42", "question": "Roxanne has $32.50. Does she have enough to buy a CD and a blender? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# Prices of items\nprice_cd = 18.35\nprice_blender = 14.02\n# Total cost for CD and blender\ntotal_cost = price_cd + price_blender\n# Roxanne's budget\nroxanne_budget = 32.50\n# Check if Roxanne has enough money\nif total_cost <= roxanne_budget:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"Games won by the Kingwood baseball team\" and then answer a question.\n\nYear | Games won\n2009 | 39\n2010 | 46\n2011 | 36\n2012 | 44\n2013 | 44", "question": "Fans of the Kingwood baseball team compared the number of games won by their team each year. According to the table, what was the rate of change between 2009 and 2010?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of games won in 2009 and 2010\ngames_won_2009 = 39\ngames_won_2010 = 46\n\n# Calculate the rate of change\nrate_of_change = games_won_2010 - games_won_2009\nanswer = rate_of_change\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"Tractors made\" and then answer a question.\n\nMonth | Number of tractors\nFebruary | 97\nMarch | 93\nApril | 90\nMay | 90\nJune | 98\nJuly | 96\nAugust | 90\nSeptember | 98", "question": "A farm equipment company kept a record of the number of tractors made each month. What is the mean of the numbers?", "answer": "94", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of tractors made each month\ntractors_made = [97, 93, 90, 90, 98, 96, 90, 98]\n# Calculate the mean\nmean_tractors = sum(tractors_made) / len(tractors_made)\nanswer = mean_tractors\n", "prediction": "94.0\n"}
{"context": "Read the following table regarding \"Donations\" and then answer a question.\n\nPerson | Animal rights | Clean water\nEve | $4 | $15\nEli | $12 | $5\nBridgette | $9 | $11\nKamal | $18 | $11\nJanelle | $13 | $13", "question": "A philanthropic organization compared the amounts of money that its members donated to certain causes. How much more money did Eve donate to clean water than Eli?", "answer": "10", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Donations for Eve and Eli\neve_clean_water_donation = 15\neli_clean_water_donation = 5\n# Calculate the difference in donations\ndifference_donation = eve_clean_water_donation - eli_clean_water_donation\nanswer = difference_donation\n", "prediction": "10\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbook about hiking | $9.00\nbook about outer space | $2.00\nbook about animals | $5.00\nbook about music | $2.00", "question": "Vijay has $9.00. Does he have enough to buy a book about music and a book about hiking? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \ncost_book_hiking = 9.00\ncost_book_music = 2.00\ntotal_cost = cost_book_hiking + cost_book_music\nvijay_money = 9.00\n\n# Check if Vijay has enough money\nif vijay_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"Stock prices\" and then answer a question.\n\nCompany | Wednesday | Thursday\nHouston Sporting Goods | $1 | $17\nComputer Data Company | $17 | $9\nWatson and Partners | $20 | $19", "question": "A stock broker followed the stock prices of a certain set of companies. How much more did Computer Data Company's stock cost on Wednesday than on Thursday?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_wednesday_computer_data = 17  # Price on Wednesday\nprice_thursday_computer_data = 9     # Price on Thursday\n\n# Calculate the difference in price\ndifference = price_wednesday_computer_data - price_thursday_computer_data\nanswer = difference\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nfine gravel | $2 per lb\npebbles | $3 per lb\nblack sand | $3 per lb\nrocks | $3 per lb\ncoarse gravel | $3 per lb\nwhite sand | $5 per lb", "question": "Brenda purchased 1.1 pounds of coarse gravel. What was the total cost?", "answer": "3.30", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_coarse_gravel = 3 \npounds_purchased = 1.1 \n# Calculate total cost\ntotal_cost = price_per_pound_coarse_gravel * pounds_purchased\nanswer = total_cost\n", "prediction": "3.3000000000000003\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nDog | Weight change (oz.)\nSprinkles | 5\nChamp | -6", "question": "Jordan has two dogs, Sprinkles and Champ. He is concerned because Sprinkles keeps eating Champ's food. Jordan asks their vet how much each dog's weight has changed since their last visit. Which dog's weight has changed the most? Choose from the the options: ['Sprinkles', 'Champ']", "answer": "Champ", "ques_type": "multi_choice", "choices": ["Sprinkles", "Champ"], "code": "# Python code, return answer \nweight_change_sprinkles = 5 \nweight_change_champ = -6 \n# Determine which dog's weight has changed the most\nif abs(weight_change_sprinkles) > abs(weight_change_champ):\n    answer = 'Sprinkles'\nelse:\n    answer = 'Champ'\n", "prediction": "Champ\n"}
{"context": "Read the following table regarding \"Daily snowfall\" and then answer a question.\n\nDay | Snowfall (inches)\nFriday | 1\nSaturday | 7\nSunday | 8\nMonday | 4\nTuesday | 7\nWednesday | 3\nThursday | 1", "question": "Rafi graphed the amount of snow that fell in the last 7 days. What is the median of the numbers?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of snowfall amounts\nsnowfall_amounts = [1, 7, 8, 4, 7, 3, 1]\n# Sort the snowfall amounts\nsorted_snowfall = sorted(snowfall_amounts)\n# Calculate the median\nn = len(sorted_snowfall)\nif n % 2 == 0:\n    median = (sorted_snowfall[n // 2 - 1] + sorted_snowfall[n // 2]) / 2\nelse:\n    median = sorted_snowfall[n // 2]\nanswer = median\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"Straight-A students\" and then answer a question.\n\nYear | Students\n2007 | 41\n2008 | 45\n2009 | 43\n2010 | 44\n2011 | 49", "question": "A school administrator who was concerned about grade inflation looked over the number of straight-A students from year to year. According to the table, what was the rate of change between 2007 and 2008?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nstudents_2007 = 41\nstudents_2008 = 45\n# Calculate the rate of change\nrate_of_change = students_2008 - students_2007\nanswer = rate_of_change\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nteapot | $38\ncookbook | $19\napron | $20\nbaking dish | $14\ncasserole dish | $20", "question": "How much money does Philip need to buy 6 teapots and 2 casserole dishes?", "answer": "268", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_teapot = 38 \nprice_casserole_dish = 20 \n# Calculate the total cost\ntotal_cost = (6 * price_teapot) + (2 * price_casserole_dish)\nanswer = total_cost\n", "prediction": "268\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbar of soap | $0.98\ncomb | $0.75\nnail file | $0.51\nhair tie | $0.94\nbottle of hand lotion | $0.93", "question": "Emma has $1.72. Does she have enough to buy a hair tie and a comb? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# Prices of the items\nprice_hair_tie = 0.94\nprice_comb = 0.75\n# Total cost for hair tie and comb\ntotal_cost = price_hair_tie + price_comb\n# Amount Emma has\nemma_money = 1.72\n# Determine if she has enough money\nif emma_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"Cars per parking lot\" and then answer a question.\n\nStem | Leaf \n1 | 0\n2 | \n3 | 0\n4 | 2, 4, 4, 4, 4\n5 | \n6 | \n7 | \n8 | 0", "question": "In a study on public parking, the director of transportation counted the number of cars in each of the city's parking lots. How many parking lots had exactly 44 cars?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Analyzing the stem-and-leaf display for the number of cars\n# The stem '4' indicates 40, and the leaf '4, 4, 4, 4' indicates there are four 44's.\nnumber_of_parking_lots_with_44_cars = 4  # There are four instances of 44 cars.\nanswer = number_of_parking_lots_with_44_cars\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npin with a picture of the beach | $0.83\npicture of a shark | $0.87\nsouvenir cup | $0.79\nshell necklace | $0.43\ndolphin bookmark | $0.90", "question": "How much money does Madelyn need to buy 9 shell necklaces?", "answer": "3.87", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_shell_necklace = 0.43 \nquantity_shell_necklaces = 9 \n# Calculate total cost\ntotal_cost = price_per_shell_necklace * quantity_shell_necklaces\nanswer = total_cost\n", "prediction": "3.87\n"}
{"context": "Read the following table regarding \"Swimming team sizes (number of swimmers)\" and then answer a question.\n\nStem | Leaf \n2 | 2, 3, 7, 7\n3 | 2\n4 | 0, 3, 4\n5 | 1, 4, 8\n6 | 2, 2, 4, 5, 9", "question": "At a swim meet, Ernesto noted the size of various swim teams. How many teams have at least 30 swimmers?", "answer": "12", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Each stem represents the tens place, and the leaves represent the units place.\n# Teams with at least 30 swimmers can be read from the stem \"3\", \"4\", \"5\", and \"6\".\n\n# Teams sizes based on the stem and leaves:\nteams_sizes = [\n    22, 23, 27, 27,  # Stem 2\n    32,              # Stem 3\n    40, 43, 44,     # Stem 4\n    51, 54, 58,     # Stem 5\n    62, 62, 64, 65, 69  # Stem 6\n]\n\n# Count teams with at least 30 swimmers\nteams_with_at_least_30 = sum(1 for size in teams_sizes if size >= 30)\nanswer = teams_with_at_least_30\n", "prediction": "12\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of bags | Number of silver buttons\n1 | 5\n2 | 10\n3 | 15\n4 | ?", "question": "Each bag has 5 silver buttons. How many silver buttons are in 4 bags?", "answer": "20", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of bags\nnumber_of_bags = 4\n# Number of silver buttons per bag\nbuttons_per_bag = 5\n# Total silver buttons in 4 bags\ntotal_buttons = number_of_bags * buttons_per_bag\nanswer = total_buttons\n", "prediction": "20\n"}
{"context": "Read the following table regarding \"Planting seeds in the garden\" and then answer a question.\n\nSeeds planted | Frequency\n0 | 2\n1 | 3\n2 | 14\n3 | 13\n4 | 5\n5 | 19\n6 | 11", "question": "For Earth Day, Fairfax High's environmental club tracked the number of seeds planted by its members. How many members planted fewer than 3 seeds?", "answer": "19", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency data for seeds planted\nfrequency_data = {\n    0: 2,\n    1: 3,\n    2: 14,\n    3: 13,\n    4: 5,\n    5: 19,\n    6: 11\n}\n# Calculate the total number of members who planted fewer than 3 seeds\nmembers_fewer_than_3 = frequency_data[0] + frequency_data[1] + frequency_data[2]\nanswer = members_fewer_than_3\n", "prediction": "19\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbottle of sunscreen | $7.77\ntube of toothpaste | $1.41\npackage of dental floss | $1.55\ntoothbrush | $2.11", "question": "How much money does Annie need to buy a bottle of sunscreen, a package of dental floss, and a toothbrush?", "answer": "11.43", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_sunscreen = 7.77\nprice_dental_floss = 1.55\nprice_toothbrush = 2.11\n\n# Total cost\ntotal_cost = price_sunscreen + price_dental_floss + price_toothbrush\nanswer = total_cost\n", "prediction": "11.43\n"}
{"context": "Read the following table regarding \"Pieces of pepperoni per pizza\" and then answer a question.\n\nStem | Leaf \n1 | 2, 5, 6\n2 | 2, 5, 6, 8, 9\n3 | 1, 7, 9\n4 | 0, 3, 3", "question": "Jayla counted the number of pieces of pepperoni on each pizza she made. How many pizzas had fewer than 46 pieces of pepperoni?", "answer": "14", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Extracting the values from the stem-and-leaf display\npieces_of_pepperoni = [\n    12, 15, 16,  # Stem 1\n    22, 25, 26, 28, 29,  # Stem 2\n    31, 37, 39,  # Stem 3\n    40, 43, 43  # Stem 4\n]\n\n# Count how many pizzas had fewer than 46 pieces of pepperoni\ncount_fewer_than_46 = sum(1 for pieces in pieces_of_pepperoni if pieces < 46)\nanswer = count_fewer_than_46\n", "prediction": "14\n"}
{"context": "Read the following table regarding \"Computer lab schedule\" and then answer a question.\n\nClass | Begin | End\nIntroduction to Typing | 8:05 A.M. | 9:10 A.M.\nAdvanced Typing | 9:15 A.M. | 10:25 A.M.\nComputer Finance | 10:30 A.M. | 11:00 A.M.\nWord Processing | 11:10 A.M. | 11:50 A.M.\nComputer Science | 11:55 A.M. | 12:25 P.M.\nComputer Graphics | 12:40 P.M. | 1:45 P.M.\nBeginning Programming | 1:55 P.M. | 3:15 P.M.\nWeb Page Design | 3:20 P.M. | 4:25 P.M.", "question": "Look at the following schedule. Which class begins at 3.20 P.M.? Choose from the the options: ['Word Processing class', 'Computer Finance class', 'Web Page Design class', 'Computer Graphics class']", "answer": "Web Page Design class", "ques_type": "multi_choice", "choices": ["Word Processing class", "Computer Finance class", "Web Page Design class", "Computer Graphics class"], "code": "# Python code, return answer \nclass_begin_time = {\n    'Word Processing class': '11:10 A.M.',\n    'Computer Finance class': '10:30 A.M.',\n    'Web Page Design class': '3:20 P.M.',\n    'Computer Graphics class': '12:40 P.M.'\n}\n# Find the class that begins at 3:20 P.M.\nanswer = [class_name for class_name, start_time in class_begin_time.items() if start_time == '3:20 P.M.'][0]\n", "prediction": "Web Page Design class\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npainting signed by a famous artist | $9,254.00\njersey signed by a famous basketball player | $6,047.00\nphotograph signed by a famous movie star | $8,658.00\nball signed by a famous football player | $1,788.00\nphotograph signed by a famous race car driver | $2,896.00", "question": "How much more does a jersey signed by a famous basketball player cost than a photograph signed by a famous race car driver?", "answer": "3,151", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_jersey = 6047.00\ncost_photograph_race_car_driver = 2896.00\n# Calculate the difference in cost\ndifference_in_cost = cost_jersey - cost_photograph_race_car_driver\nanswer = difference_in_cost\n", "prediction": "3151.0\n"}
{"context": "Read the following table regarding \"Sixth grade classes\" and then answer a question.\n\nTeacher | Boys | Girls\nMiss West | 5 | 16\nMs. North | 6 | 8\nMrs. South | 5 | 18", "question": "Sixth graders at Belleville Middle School are taught in classes of various sizes. How many more girls are in Miss West's class than Ms. North's class?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of girls in each class\ngirls_miss_west = 16\ngirls_ms_north = 8\n# Calculate the difference\ndifference = girls_miss_west - girls_ms_north\nanswer = difference\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"Miles hiked\" and then answer a question.\n\nDay | Number of miles\nSaturday | 10\nSunday | 9\nMonday | 6\nTuesday | 10\nWednesday | 10", "question": "Eli went on a camping trip and logged the number of miles he hiked each day. What is the mean of the numbers?", "answer": "9", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Miles hiked each day\nmiles_hiked = [10, 9, 6, 10, 10]\n# Calculate the mean\nmean_miles = sum(miles_hiked) / len(miles_hiked)\nanswer = mean_miles\n", "prediction": "9.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of bushes | Number of flowers\n1 | 2\n2 | 4\n3 | 6\n4 | ?", "question": "Each bush has 2 flowers. How many flowers are on 4 bushes?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Each bush has 2 flowers\nflowers_per_bush = 2\nnumber_of_bushes = 4\n# Calculate the total number of flowers\ntotal_flowers = flowers_per_bush * number_of_bushes\nanswer = total_flowers\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"Apples picked\" and then answer a question.\n\nDay | Number of apples\nTuesday | 50\nWednesday | 44\nThursday | 41\nFriday | 45\nSaturday | 44\nSunday | 40", "question": "The owner of an orchard kept records about how many apples were picked in the past 6 days. What is the mean of the numbers?", "answer": "44", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of apples picked each day\napples_picked = [50, 44, 41, 45, 44, 40]\n# Calculate the mean\nmean_apples = sum(apples_picked) / len(apples_picked)\nanswer = mean_apples\n", "prediction": "44.0\n"}
{"context": "Read the following table regarding \"Lemon-flavored candies per bag\" and then answer a question.\n\nStem | Leaf \n0 | 2, 5\n1 | 3, 5\n2 | 5\n3 | 3\n4 | 7\n5 | \n6 | 7\n7 | 4, 6\n8 | 4, 5\n9 | 0", "question": "A machine at the candy factory dispensed different numbers of lemon-flavored candies into various bags. What is the largest number of lemon-flavored candies?", "answer": "90", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest number of lemon-flavored candies corresponds to the largest value in the stem-and-leaf display.\nlargest_candies = 90  # From the stem \"9 | 0\", the value is 90 candies.\nanswer = largest_candies\n", "prediction": "90\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nboat show ticket | $10.39\nbasketball ticket | $46.99\norchestra ticket | $58.16\ncar show ticket | $29.89", "question": "How much more does an orchestra ticket cost than a basketball ticket?", "answer": "11.17", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \norchestra_ticket_cost = 58.16 \nbasketball_ticket_cost = 46.99 \n# Calculate the difference\ndifference = orchestra_ticket_cost - basketball_ticket_cost\nanswer = difference\n", "prediction": "11.169999999999995\n"}
{"context": "Read the following table regarding \"Club membership\" and then answer a question.\n\nClub | Number of members\nFrench club | 186\nmath club | 181\nJapanese club | 168\nSpanish club | 116", "question": "The local high school found out how many members each club had. Which club has the fewest members? Choose from the the options: ['French club', 'math club', 'Japanese club', 'Spanish club']", "answer": "Spanish club", "ques_type": "multi_choice", "choices": ["French club", "math club", "Japanese club", "Spanish club"], "code": "# Python code, return answer \nclubs = {\n    'French club': 186,\n    'math club': 181,\n    'Japanese club': 168,\n    'Spanish club': 116\n}\n# Find the club with the fewest members\nfewest_members_club = min(clubs, key=clubs.get)\nanswer = fewest_members_club\n", "prediction": "Spanish club\n"}
{"context": "Read the following table regarding \"Trivia game scores\" and then answer a question.\n\nName | Score\nTamir | 81\nDillon | 82\nLuna | 87\nWayne | 86", "question": "Some friends played a trivia game and recorded their scores. Who had the highest score? Choose from the the options: ['Tamir', 'Dillon', 'Luna', 'Wayne']", "answer": "Luna", "ques_type": "multi_choice", "choices": ["Tamir", "Dillon", "Luna", "Wayne"], "code": "# Python code, return answer \nscores = {\n    'Tamir': 81,\n    'Dillon': 82,\n    'Luna': 87,\n    'Wayne': 86\n}\n# Find the friend with the highest score\nhighest_score_friend = max(scores, key=scores.get)\nanswer = highest_score_friend\n", "prediction": "Luna\n"}
{"context": "Read the following table regarding \"Pets\" and then answer a question.\n\nName | Number of pets\nDustin | 1\nMatt | 7\nAubrey | 4\nBrittany | 4\nLeon | 9", "question": "Some students compared how many pets they have. What is the mean of the numbers?", "answer": "5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of pets\npets_count = [1, 7, 4, 4, 9]\n# Calculate the mean\nmean_pets = sum(pets_count) / len(pets_count)\nanswer = mean_pets\n", "prediction": "5.0\n"}
{"context": "Read the following table regarding \"Tractors made\" and then answer a question.\n\nMonth | Number of tractors\nDecember | 885\nJanuary | 859\nFebruary | 895\nMarch | 898", "question": "A farm equipment company kept a record of the number of tractors made each month. In which month did the company make the most tractors? Choose from the the options: ['December', 'January', 'February', 'March']", "answer": "March", "ques_type": "multi_choice", "choices": ["December", "January", "February", "March"], "code": "# Python code, return answer \ntractors_made = {\n    'December': 885,\n    'January': 859,\n    'February': 895,\n    'March': 898\n}\n# Find the month with the most tractors made\nmost_tractors_month = max(tractors_made, key=tractors_made.get)\nanswer = most_tractors_month\n", "prediction": "March\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nplay ticket | $24.00\ncomedy show ticket | $49.00\nboat show ticket | $23.00\nsoccer ticket | $50.00", "question": "Dominic has $72.00. Does he have enough to buy a play ticket and a soccer ticket? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \nplay_ticket_price = 24.00 \nsoccer_ticket_price = 50.00 \ntotal_cost = play_ticket_price + soccer_ticket_price \ndominic_money = 72.00 \n\n# Check if Dominic has enough money\nif dominic_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nblue sweater | $5.38\nstriped shirt | $7.32\npair of shorts | $5.02\npair of white socks | $2.02", "question": "How much money does Jamal need to buy 6 blue sweaters?", "answer": "32.28", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_sweater = 5.38 \nquantity_sweaters = 6 \ntotal_cost = price_per_sweater * quantity_sweaters\nanswer = total_cost\n", "prediction": "32.28\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n12 | 3\n13 | 5\n14 | 15", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "nonlinear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the differences in y-values for equal differences in x-values.\nx_values = [12, 13, 14]\ny_values = [3, 5, 15]\n\n# Calculate the differences\ndifferences = [y_values[i+1] - y_values[i] for i in range(len(y_values)-1)]\n# If the differences are not constant, the function is nonlinear\nis_linear = all(diff == differences[0] for diff in differences)\n\nanswer = 'linear' if is_linear else 'nonlinear'\n", "prediction": "NameError(\"name 'y_values' is not defined\")"}
{"context": "Read the following table regarding \"Newspapers sold\" and then answer a question.\n\nDay | Number of newspapers\nTuesday | 337\nWednesday | 375\nThursday | 357\nFriday | 353", "question": "The staff of a newspaper examined the number of copies sold over the past 4 days. On which day were the fewest copies sold? Choose from the the options: ['Tuesday', 'Wednesday', 'Thursday', 'Friday']", "answer": "Tuesday", "ques_type": "multi_choice", "choices": ["Tuesday", "Wednesday", "Thursday", "Friday"], "code": "# Python code, return answer \nnewspapers_sold = {\n    'Tuesday': 337,\n    'Wednesday': 375,\n    'Thursday': 357,\n    'Friday': 353\n}\n\n# Find the day with the fewest newspapers sold\nfewest_sold_day = min(newspapers_sold, key=newspapers_sold.get)\nanswer = fewest_sold_day\n", "prediction": "Tuesday\n"}
{"context": "Read the following table regarding \"Blocks from school\" and then answer a question.\n\nName | Number of blocks\nZach | 10\nFarid | 5\nColette | 10\nRussell | 7\nDalton | 7\nAndy | 6\nMichael | 8\nErnesto | 3", "question": "Some students compared how many blocks they live from school. What is the mean of the numbers?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of blocks each student lives from school\nblocks = [10, 5, 10, 7, 7, 6, 8, 3]\n# Calculate the mean\nmean_blocks = sum(blocks) / len(blocks)\nanswer = mean_blocks\n", "prediction": "7.0\n"}
{"context": "Read the following table regarding \"Fifth grade classes\" and then answer a question.\n\nTeacher | Boys | Girls\nMr. Burgundy | 8 | 11\nMs. Brown | 18 | 18\nMr. Orange | 6 | 4\nMiss Black | 14 | 6", "question": "How many more boys than girls are in Mr. Orange's class?", "answer": "2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nboys_orange = 6 \ngirls_orange = 4 \n# Calculate the difference\ndifference = boys_orange - girls_orange\nanswer = difference\n", "prediction": "2\n"}
{"context": "Read the following table regarding \"Chocolate consumption per capita (kg)\" and then answer a question.\n\nCountry | 2002 | 2005\nBelgium | 8 | 11\nSwitzerland | 11 | 10\nAustralia | 4 | 5\nGermany | 10 | 11\nAustria | 8 | 9", "question": "Lucia's Candies has been studying how much chocolate people have been eating in different countries. Which country consumed the least chocolate per capita in 2002? Choose from the the options: ['Switzerland', 'Belgium', 'Austria', 'Australia']", "answer": "Australia", "ques_type": "multi_choice", "choices": ["Switzerland", "Belgium", "Austria", "Australia"], "code": "# Python code, return answer \nchocolate_consumption_2002 = {\n    'Belgium': 8,\n    'Switzerland': 11,\n    'Australia': 4,\n    'Germany': 10,\n    'Austria': 8\n}\n\n# Find the country with the least chocolate consumption in 2002\nleast_consumption_country = min(chocolate_consumption_2002, key=chocolate_consumption_2002.get)\nanswer = least_consumption_country\n", "prediction": "Australia\n"}
{"context": "Read the following table regarding \"Office sizes (square meters)\" and then answer a question.\n\nStem | Leaf \n3 | 1, 1, 3, 7, 8, 8\n4 | 8\n5 | 3, 4\n6 | 9\n7 | 2, 3\n8 | 0, 9\n9 | 0", "question": "Michelle, who rents properties for a living, measures all the offices in a building she is renting. How many offices are exactly 38 square meters?", "answer": "2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The office sizes are represented in a stem-and-leaf format.\n# The size '38' square meters corresponds to the stem '3' and leaf '8'.\noffices_38_square_meters = 1  # There is one office that is exactly 38 square meters.\nanswer = offices_38_square_meters\n", "prediction": "1\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$545 | 19,000 | 3,200\n$625 | 14,500 | 7,500\n$705 | 10,000 | 11,800\n$785 | 5,500 | 16,100\n$865 | 1,000 | 20,400", "question": "Look at the table. Then answer the question. At a price of $625, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "shortage", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \nquantity_demanded_at_625 = 14500 \nquantity_supplied_at_625 = 7500 \n\n# Determine if there is a shortage or surplus\nif quantity_demanded_at_625 > quantity_supplied_at_625:\n    answer = 'shortage'\nelse:\n    answer = 'surplus'\n\n", "prediction": "shortage\n"}
{"context": "Read the following table regarding \"Minutes spent practicing\" and then answer a question.\n\nDay | Minutes\nMonday | 118\nTuesday | 142\nWednesday | 169\nThursday | 146", "question": "Rosa jotted down how many minutes she spent practicing volleyball in the past 4 days. On which day did Rosa practice the most? Choose from the the options: ['Monday', 'Tuesday', 'Wednesday', 'Thursday']", "answer": "Wednesday", "ques_type": "multi_choice", "choices": ["Monday", "Tuesday", "Wednesday", "Thursday"], "code": "# Python code, return answer \npractice_minutes = {\n    'Monday': 118,\n    'Tuesday': 142,\n    'Wednesday': 169,\n    'Thursday': 146\n}\n# Find the day with the most minutes practiced\nmost_practice_day = max(practice_minutes, key=practice_minutes.get)\nanswer = most_practice_day\n", "prediction": "Wednesday\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$960 | 17,500 | 3,100\n$1,010 | 16,700 | 6,800\n$1,060 | 15,900 | 10,500\n$1,110 | 15,100 | 14,200\n$1,160 | 14,300 | 17,900", "question": "Look at the table. Then answer the question. At a price of $1,010, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "shortage", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \nquantity_demanded = 16700  # at price $1,010\nquantity_supplied = 6800    # at price $1,010\n\n# Determine if there is a shortage or surplus\nif quantity_demanded > quantity_supplied:\n    answer = 'shortage'\nelse:\n    answer = 'surplus'\n\n", "prediction": "shortage\n"}
{"context": "Read the following table regarding \"Hours of babysitting\" and then answer a question.\n\nMonth | Hours\nNovember | 50\nDecember | 57\nJanuary | 36\nFebruary | 68\nMarch | 61\nApril | 45\nMay | 55\nJune | 54", "question": "Carson looked at his calendar to figure out how much time he spent babysitting each month. What is the range of the numbers?", "answer": "32", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of hours spent babysitting each month\nhours = [50, 57, 36, 68, 61, 45, 55, 54]\n# Calculate the range\nrange_hours = max(hours) - min(hours)\nanswer = range_hours\n", "prediction": "32\n"}
{"context": "Read the following table regarding \"Stock prices\" and then answer a question.\n\nCompany | Monday | Tuesday\nWatson and Partners | $8 | $2\nComputer Data Company | $12 | $7\nJonas Incorporated | $10 | $9\nHouston Sporting Goods | $4 | $5", "question": "A stock broker followed the stock prices of a certain set of companies. On Tuesday, how much more did Jonas Incorporated's stock cost than Houston Sporting Goods's stock?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Stock prices on Tuesday\njonas_stock_tuesday = 9\nhouston_stock_tuesday = 5\n# Calculate the difference in stock prices\ndifference = jonas_stock_tuesday - houston_stock_tuesday\nanswer = difference\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"Menu items per restaurant\" and then answer a question.\n\nStem | Leaf \n1 | 2, 8\n2 | 1, 9\n3 | 0\n4 | \n5 | 0, 3, 4, 5, 5, 8, 9\n6 | 3, 7, 9\n7 | 1, 9, 9\n8 | 0, 9", "question": "A food critic counted the number of menu items at each restaurant in town. How many restaurants have fewer than 90 menu items?", "answer": "20", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Analyzing the stem-and-leaf display for counts of menu items in restaurants\nmenu_items_counts = [12, 18, 21, 29, 30, 40, 50, 53, 54, 55, 58, 59, 63, 67, 69, 71, 79, 79, 80, 89]\n# Counting how many restaurants have fewer than 90 menu items\nfewer_than_90_count = len([count for count in menu_items_counts if count < 90])\nanswer = fewer_than_90_count\n", "prediction": "20\n"}
{"context": "Read the following table regarding \"Students receiving scholarships\" and then answer a question.\n\nYear | Students\n2009 | 23\n2010 | 17\n2011 | 16\n2012 | 15\n2013 | 12", "question": "The financial aid office at McKinney University produced an internal report on the number of students receiving scholarships. According to the table, what was the rate of change between 2010 and 2011?", "answer": "-1", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of students receiving scholarships in 2010 and 2011\nstudents_2010 = 17\nstudents_2011 = 16\n# Calculate the rate of change\nrate_of_change = students_2011 - students_2010\nanswer = rate_of_change\n", "prediction": "-1\n"}
{"context": "Read the following table regarding \"Clubs\" and then answer a question.\n\nName | Number of clubs\nKirk | 1\nReggie | 1\nChloe | 4\nNorma | 5\nPedro | 3\nMaddie | 3\nHassan | 5\nAnna | 5", "question": "Some students compared how many clubs they belong to. What is the mode of the numbers?", "answer": "5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nfrom statistics import mode\n\n# List of the number of clubs for each student\nclubs_count = [1, 1, 4, 5, 3, 3, 5, 5]\n\n# Calculate the mode\nanswer = mode(clubs_count)\n", "prediction": "5\n"}
{"context": "Read the following table regarding \"Clubs\" and then answer a question.\n\nName | Number of clubs\nAiden | 3\nNolan | 1\nQuinn | 7\nElise | 3\nLarry | 3\nRose | 3\nZoe | 7\nGabriel | 7", "question": "Some students compared how many clubs they belong to. What is the mode of the numbers?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nfrom collections import Counter\n\n# List of the number of clubs each student belongs to\nclubs_count = [3, 1, 7, 3, 3, 3, 7, 7]\n\n# Calculate the mode\nmode_data = Counter(clubs_count)\nmode_value = mode_data.most_common(1)[0][0]  # Get the most common value\nanswer = mode_value\n", "prediction": "3\n"}
{"context": "Read the following table regarding \"Loaves of leftover bread\" and then answer a question.\n\nDay | Leftover loaves\nSunday | 24\nMonday | 9\nTuesday | 19\nWednesday | 15\nThursday | 38", "question": "A vendor who sold bread at farmers' markets counted the number of leftover loaves at the end of each day. According to the table, what was the rate of change between Wednesday and Thursday?", "answer": "23", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nleftover_loaves_wednesday = 15\nleftover_loaves_thursday = 38\n# Calculate the rate of change\nrate_of_change = leftover_loaves_thursday - leftover_loaves_wednesday\nanswer = rate_of_change\n", "prediction": "23\n"}
{"context": "Read the following table regarding \"Rounds in the spelling bee\" and then answer a question.\n\nYear | Rounds\n2009 | 15\n2010 | 13\n2011 | 15\n2012 | 15\n2013 | 12", "question": "Mrs. Newman told students how many rounds to expect in the spelling bee based on previous years. According to the table, what was the rate of change between 2010 and 2011?", "answer": "2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Rounds in the spelling bee for 2010 and 2011\nrounds_2010 = 13\nrounds_2011 = 15\n\n# Calculate the rate of change\nrate_of_change = rounds_2011 - rounds_2010\nanswer = rate_of_change\n", "prediction": "2\n"}
{"context": "Read the following table regarding \"Schools in each town\" and then answer a question.\n\nTown | Number of schools\nRichmond | 7\nSalem | 5\nColumbia | 7\nMayfield | 9\nChesterton | 5\nWatertown | 8\nMarion | 8\nSpringfield | 5", "question": "The county released data about how many schools there are in each town. What is the range of the numbers?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of schools in each town\nschools_in_towns = [7, 5, 7, 9, 5, 8, 8, 5]\n# Calculate the range\nrange_of_schools = max(schools_in_towns) - min(schools_in_towns)\nanswer = range_of_schools\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nsunflower seeds | $3 per pound\nflax seeds | $6 per pound\nsesame seeds | $5 per pound\nsoybeans | $3 per pound\nlentils | $2 per pound\npumpkin seeds | $2 per pound", "question": "Camille wants to buy 1 pound of sesame seeds and 1 pound of pumpkin seeds. How much will she spend?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_sesame = 5 \nprice_per_pound_pumpkin = 2 \n# Total cost for 1 pound of each\ntotal_cost = price_per_pound_sesame + price_per_pound_pumpkin\nanswer = total_cost\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"Computers in classrooms\" and then answer a question.\n\nTeacher | Number of computers\nMrs. Tan | 18\nMrs. Rossi | 18\nMs. Rojas | 11\nMr. Watson | 6\nMr. Morales | 6\nMr. Lim | 18", "question": "The teachers at a middle school counted how many computers they had in their classrooms. What is the mode of the numbers?", "answer": "18", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nfrom statistics import mode\n\n# Number of computers per teacher\ncomputers = [18, 18, 11, 6, 6, 18]\n\n# Calculate the mode of the numbers\nanswer = mode(computers)\n", "prediction": "18\n"}
{"context": "Read the following table regarding \"Stock prices\" and then answer a question.\n\nCompany | Wednesday | Thursday\nJonas Incorporated | $7 | $6\nWhite and Company | $18 | $1\nHouston Sporting Goods | $10 | $16", "question": "A stock broker followed the stock prices of a certain set of companies. How much did White and Company's stock cost on Thursday?", "answer": "1", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Price of White and Company on Thursday\nwhite_company_thursday_price = 1\nanswer = white_company_thursday_price\n", "prediction": "1\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\njar of salsa | $0.99\nbottle of ketchup | $0.98\nbottle of vinegar | $0.57\nbottle of hot sauce | $0.86", "question": "Cindy has $1.50. Does she have enough to buy a bottle of ketchup and a bottle of vinegar? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \ncost_ketchup = 0.98 \ncost_vinegar = 0.57 \ntotal_cost = cost_ketchup + cost_vinegar\n# Check if Cindy has enough money\ncindy_money = 1.50\nif cindy_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n12 | 8\n13 | 15\n14 | 16", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "nonlinear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the differences in y-values for constant x differences.\nx_values = [12, 13, 14]\ny_values = [8, 15, 16]\n\n# Calculate the differences\nx_diff = [x_values[i+1] - x_values[i] for i in range(len(x_values) - 1)]\ny_diff = [y_values[i+1] - y_values[i] for i in range(len(y_values) - 1)]\n\n# Check if the ratio of change in y is constant for the change in x\nis_linear = (y_diff[0] / x_diff[0] == y_diff[1] / x_diff[1])\n\nanswer = 'linear' if is_linear else 'nonlinear'\n", "prediction": "NameError(\"name 'x_values' is not defined\")"}
{"context": "Read the following table regarding \"Points per game\" and then answer a question.\n\nStem | Leaf \n0 | 9\n1 | 3, 4\n2 | 6\n3 | 8\n4 | \n5 | 0\n6 | 4", "question": "A high school basketball coach counted the number of points her team scored each game. What is the smallest number of points?", "answer": "9", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The smallest number of points corresponds to the smallest value in the stem-and-leaf display.\nsmallest_points = 9  # From the stem \"0 | 9\", the value is 9 points.\nanswer = smallest_points\n", "prediction": "9\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nduck stamp | $0.17\nlarge cardboard box | $0.81\nsmall red box | $0.45\nflag stamp | $0.32\npiece of bubble wrap | $0.70\ntulip stamp | $0.16", "question": "How much money does Trudy need to buy 7 pieces of bubble wrap?", "answer": "4.90", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_piece_bubble_wrap = 0.70 \npieces_needed = 7 \n# Calculate total cost\ntotal_cost = price_per_piece_bubble_wrap * pieces_needed\nanswer = total_cost\n", "prediction": "4.8999999999999995\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | Velvet | Suede\nFoam | 3 | 4\nBeads | 1 | 2", "question": "Gordon and his brother are at a store shopping for a beanbag chair for their school's library. The store sells beanbag chairs with different fabrics and types of filling. What is the probability that a randomly selected beanbag chair is filled with foam and is made from velvet? Simplify any fractions.", "answer": "3/10", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total number of beanbag chairs\ntotal_chairs = 3 + 4 + 1 + 2\n\n# Number of beanbag chairs filled with foam and made from velvet\nfoam_velvet_chairs = 3\n\n# Calculate the probability\nprobability = foam_velvet_chairs / total_chairs\n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(foam_velvet_chairs, total_chairs).limit_denominator()\n\nanswer = simplified_probability\n", "prediction": "3/10\n"}
{"context": "Read the following table regarding \"Class schedule\" and then answer a question.\n\nSubject | Begin | End\nHistory | 8:30 A.M. | 9:35 A.M.\nEnglish | 9:45 A.M. | 10:30 A.M.\nMusic | 10:35 A.M. | 11:55 A.M.\nArt | 12:05 P.M. | 1:00 P.M.\nChemistry | 1:05 P.M. | 2:25 P.M.\nMath | 2:35 P.M. | 3:50 P.M.\nGym | 4:00 P.M. | 4:40 P.M.", "question": "Look at the following schedule. When does Math class begin? Choose from the the options: ['2:25 P.M.', '3:50 P.M.', '2:35 P.M.', '4:00 P.M.']", "answer": "2:35 P.M.", "ques_type": "multi_choice", "choices": ["2:25 P.M.", "3:50 P.M.", "2:35 P.M.", "4:00 P.M."], "code": "# Python code, return answer \n# Math class begin time\nmath_class_begin = '2:35 P.M.'\nanswer = math_class_begin\n", "prediction": "2:35 P.M.\n"}
{"context": "Read the following table regarding \"Children's weights (lbs)\" and then answer a question.\n\nStem | Leaf \n2 | 7, 9\n3 | 7, 7\n4 | 4\n5 | 0, 7\n6 | 4, 5, 5, 6, 7, 7, 8", "question": "Dr. Mueller, a pediatrician, weighed all the children who recently visited her office. What is the weight of the lightest child?", "answer": "27", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The lightest child corresponds to the smallest value in the stem-and-leaf display.\nlightest_child_weight = 27  # From the stem \"2 | 7\", the value is 27 lbs.\nanswer = lightest_child_weight\n", "prediction": "27\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n15 | 18\n16 | 9\n17 | 0", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "linear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the differences in y-values for equal intervals of x-values.\nx_values = [15, 16, 17]\ny_values = [18, 9, 0]\n\n# Calculate the differences\ndifference_x = [x_values[i+1] - x_values[i] for i in range(len(x_values)-1)]\ndifference_y = [y_values[i+1] - y_values[i] for i in range(len(y_values)-1)]\n\n# Calculate slopes between points\nslopes = [difference_y[i] / difference_x[i] for i in range(len(difference_x))]\n\n# Check if all slopes are the same\nif len(set(slopes)) == 1:\n    answer = 'linear'\nelse:\n    answer = 'nonlinear'\n\n", "prediction": "NameError(\"name 'x_values' is not defined\")"}
{"context": "Read the following table regarding \"Number of birds seen\" and then answer a question.\n\nMonth | Number of birds\nApril | 488\nMay | 381\nJune | 689", "question": "The bird-watching club recorded how many birds its members saw each month. How many more birds did the club see in April than in May?", "answer": "107", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nbirds_april = 488\nbirds_may = 381\n# Calculate the difference in the number of birds seen\ndifference = birds_april - birds_may\nanswer = difference\n", "prediction": "107\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nencyclopedia | $10.45\nairplane calendar | $13.23\nmap of the world | $13.10\ndog calendar | $11.63\nphoto album | $25.28\nmap of Africa | $10.10", "question": "How much more does an airplane calendar cost than a map of Africa?", "answer": "3.13", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_airplane_calendar = 13.23 \ncost_map_of_africa = 10.10 \n# Calculate the difference in cost\ndifference_in_cost = cost_airplane_calendar - cost_map_of_africa\nanswer = difference_in_cost\n", "prediction": "3.130000000000001\n"}
{"context": "Read the following table regarding \"Toys per bin\" and then answer a question.\n\nStem | Leaf \n1 | 4, 7\n2 | 0, 8\n3 | 9\n4 | 6\n5 | 6, 8\n6 | 0, 0, 6\n7 | 0, 1, 2, 4\n8 | 2, 3", "question": "A toy store employee counted the number of toys in each bin in the sale section. How many bins had fewer than 54 toys?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of toys per bin based on the stem-and-leaf display\ntoys_per_bin = [14, 17, 20, 28, 39, 46, 56, 58, 60, 60, 66, 70, 71, 72, 74, 82, 83]\n\n# Count the number of bins with fewer than 54 toys\nbins_fewer_than_54 = sum(1 for toys in toys_per_bin if toys < 54)\nanswer = bins_fewer_than_54\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"Stuffed animals\" and then answer a question.\n\nNumber of stuffed animals | Frequency\n0 | 6\n1 | 9\n2 | 1\n3 | 17\n4 | 4\n5 | 20\n6 | 10", "question": "As part of a stuffed animal drive for the local children's hospital, the students at Walter Elementary School record how many stuffed animals they have collected. How many students have at least 4 stuffed animals?", "answer": "34", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency data from the table\nfrequency_data = {\n    0: 6,\n    1: 9,\n    2: 1,\n    3: 17,\n    4: 4,\n    5: 20,\n    6: 10\n}\n\n# Calculate the number of students with at least 4 stuffed animals\nstudents_with_at_least_4 = frequency_data[4] + frequency_data[5] + frequency_data[6]\nanswer = students_with_at_least_4\n", "prediction": "34\n"}
{"context": "Read the following table regarding \"Books read\" and then answer a question.\n\nName | Number of books\nAlexandra | 76\nMalik | 76\nPercy | 72\nZach | 72\nBrendan | 76", "question": "Alexandra's classmates recorded how many books they read last year. What is the mode of the numbers?", "answer": "76", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of books read by each student\nbooks_read = [76, 76, 72, 72, 76]\n\n# Calculate the mode\nfrom statistics import mode\nmode_value = mode(books_read)\nanswer = mode_value\n", "prediction": "76\n"}
{"context": "Read the following table regarding \"States visited\" and then answer a question.\n\nName | Number of states\nKurt | 6\nHeather | 10\nShawna | 9\nAdam | 6\nMeg | 6", "question": "Kurt's class recorded how many states each student has visited. What is the median of the numbers?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of states visited by each student\nstates_visited = [6, 10, 9, 6, 6]\n\n# Sort the list to find the median\nstates_visited.sort()\n\n# Calculate the median\nn = len(states_visited)\nif n % 2 == 1:\n    median = states_visited[n // 2]  # Middle value for odd number of elements\nelse:\n    median = (states_visited[n // 2 - 1] + states_visited[n // 2]) / 2  # Average of two middle values for even number of elements\n\nanswer = median\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"Roses per bush\" and then answer a question.\n\nStem | Leaf \n2 | 1\n3 | 6\n4 | 7\n5 | 7\n6 | 4, 5\n7 | 4\n8 | 2, 4\n9 | 0", "question": "The owner of a plant nursery wrote down the number of roses on each bush. What is the largest number of roses?", "answer": "90", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest number of roses corresponds to the largest value in the stem-and-leaf display.\nlargest_roses = 90  # From the stem \"9 | 0\", the value is 90 roses.\nanswer = largest_roses\n", "prediction": "90\n"}
{"context": "Read the following table regarding \"Bus schedule\" and then answer a question.\n\nthe kickball field | 8:45 A.M. | 9:15 A.M. | 10:15 A.M. | 10:30 A.M. | 10:45 A.M.\nthe library | 9:00 A.M. | 9:30 A.M. | 10:30 A.M. | 10:45 A.M. | 11:00 A.M.\nthe school | 9:30 A.M. | 10:00 A.M. | 11:00 A.M. | 11:15 A.M. | 11:30 A.M.\nthe mall | 10:30 A.M. | 11:00 A.M. | 12:00 P.M. | 12:15 P.M. | 12:30 P.M.\nthe zoo | 11:30 A.M. | 12:00 P.M. | 1:00 P.M. | 1:15 P.M. | 1:30 P.M.\nthe playground | 12:00 P.M. | 12:30 P.M. | 1:30 P.M. | 1:45 P.M. | 2:00 P.M.\nthe doctor's office | 12:30 P.M. | 1:00 P.M. | 2:00 P.M. | 2:15 P.M. | 2:30 P.M.\nthe post office | 12:45 P.M. | 1:15 P.M. | 2:15 P.M. | 2:30 P.M. | 2:45 P.M.\nthe science museum | 1:00 P.M. | 1:30 P.M. | 2:30 P.M. | 2:45 P.M. | 3:00 P.M.", "question": "Look at the following schedule. Ruth just missed the 11.00 A.M. bus at the mall. How long does she have to wait until the next bus? Choose from the the options: ['15 minutes', '30 minutes', '45 minutes', '1 hour']", "answer": "1 hour", "ques_type": "multi_choice", "choices": ["15 minutes", "30 minutes", "45 minutes", "1 hour"], "code": "# Python code, return answer \n# The next bus time after 11:00 A.M. at the mall\nnext_bus_time = \"12:00 P.M.\"\n# Current time after missing the 11:00 A.M. bus\ncurrent_time = \"11:00 A.M.\"\n\n# Convert times to minutes\ndef convert_to_minutes(time_str):\n    if 'P.M.' in time_str:\n        hour = int(time_str.split(':')[0]) + 12\n    else:\n        hour = int(time_str.split(':')[0])\n    minutes = int(time_str.split(':')[1].split()[0])\n    return hour * 60 + minutes\n\ncurrent_time_minutes = convert_to_minutes(current_time)\nnext_bus_time_minutes = convert_to_minutes(next_bus_time)\n\n# Calculate waiting time\nwaiting_time = next_bus_time_minutes - current_time_minutes\n\nanswer = f\"{waiting_time} minutes\"\n", "prediction": "780 minutes\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$885 | 19,000 | 10,100\n$925 | 16,000 | 12,400\n$965 | 13,000 | 14,700\n$1,005 | 10,000 | 17,000\n$1,045 | 7,000 | 19,300", "question": "Look at the table. Then answer the question. At a price of $1,005, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "surplus", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \nquantity_demanded = 10000  # at price $1,005\nquantity_supplied = 17000   # at price $1,005\n\n# Determine if there is a shortage or surplus\nif quantity_demanded < quantity_supplied:\n    answer = 'surplus'\nelse:\n    answer = 'shortage'\n    \n", "prediction": "surplus\n"}
{"context": "Read the following table regarding \"Riverside arts education budget\" and then answer a question.\n\nYear | Per-student budget\n2014 | $46\n2015 | $36\n2016 | $42\n2017 | $42\n2018 | $29", "question": "In hopes of raising more funds for arts education, some parents in the Riverside School District publicized the current per-student arts education budget. According to the table, what was the rate of change between 2016 and 2017?", "answer": "0", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Per-student budget for the years in question\nbudget_2016 = 42\nbudget_2017 = 42\n\n# Calculate the rate of change\nrate_of_change = budget_2017 - budget_2016\nanswer = rate_of_change\n", "prediction": "0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nkidney beans | $1.38 per pound\nsoybeans | $2.33 per pound\nlentils | $1.86 per pound\ngarbanzo beans | $1.14 per pound\nmung beans | $1.45 per pound", "question": "Colleen bought 3 pounds of mung beans. How much did she spend?", "answer": "4.35", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_mung_beans = 1.45 \npounds_bought = 3 \nanswer = price_per_pound_mung_beans * pounds_bought\n", "prediction": "4.35\n"}
{"context": "Read the following table regarding \"Peppermint candies per jar\" and then answer a question.\n\nStem | Leaf \n1 | 4, 5, 9\n2 | 0, 4, 5, 6, 6, 7, 8, 8\n3 | 3, 4\n4 | \n5 | \n6 | 1, 5, 8, 9", "question": "Emmy, a candy store employee, placed peppermint candies into jars of various sizes. What is the largest number of peppermint candies?", "answer": "69", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest number of peppermint candies corresponds to the highest value in the stem-and-leaf display.\nlargest_candies = 689  # From the stem \"6 | 1, 5, 8, 9\", the largest value is 689.\nanswer = largest_candies\n", "prediction": "689\n"}
{"context": "Read the following table regarding \"Pages per book\" and then answer a question.\n\nStem | Leaf \n4 | 1, 1, 1, 2, 4, 4, 5, 6, 7, 8, 9, 9\n5 | 0, 2\n6 | 2, 4, 6\n7 | 2, 2, 6, 7\n8 | 5, 5, 7\n9 | 0", "question": "David counted the pages in each book on his English class's required reading list. How many books had at least 60 pages?", "answer": "11", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Extracting the number of pages from the stem-and-leaf display\npages = [\n    41, 41, 41, 42, 44, 44, 45, 46, 47, 48, 49, 49,  # Stem 4\n    50, 52,                                  # Stem 5\n    62, 64, 66,                               # Stem 6\n    72, 72, 76, 77,                           # Stem 7\n    85, 85, 87,                               # Stem 8\n    90                                      # Stem 9\n]\n\n# Count books with at least 60 pages\ncount_at_least_60_pages = sum(1 for page in pages if page >= 60)\nanswer = count_at_least_60_pages\n", "prediction": "11\n"}
{"context": "Read the following table regarding \"Boxes of cereal purchased\" and then answer a question.\n\nCereal | Number of boxes purchased\nToasted Treats | 8,016\nFruit-E-Ohs | 4,087\nWhole Wheat Goodness | 6,145\nOaty Yums | 1,786", "question": "A business analyst compared purchases of different types of cereal. How many more boxes of Whole Wheat Goodness were purchased than boxes of Fruit-E-Ohs?", "answer": "2,058", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of boxes purchased for each cereal type\nboxes_whole_wheat_goodness = 6145\nboxes_fruit_e_ohs = 4087\n\n# Calculate the difference\ndifference = boxes_whole_wheat_goodness - boxes_fruit_e_ohs\nanswer = difference\n", "prediction": "2058\n"}
{"context": "Read the following table regarding \"Clubs\" and then answer a question.\n\nName | Number of clubs\nRhianna | 1\nAntonio | 1\nDebbie | 7\nShane | 7\nGrayson | 1\nPablo | 7\nFrancesca | 1\nNeil | 7", "question": "Some students compared how many clubs they belong to. What is the mean of the numbers?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of clubs for each student\nclubs_count = [1, 1, 7, 7, 1, 7, 1, 7]\n# Calculate the mean\nmean_clubs = sum(clubs_count) / len(clubs_count)\nanswer = mean_clubs\n", "prediction": "4.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of bunches | Number of flowers\n1 | 5\n2 | 10\n3 | 15\n4 | ?", "question": "Each bunch has 5 flowers. How many flowers are in 4 bunches?", "answer": "20", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Each bunch contains 5 flowers\nflowers_per_bunch = 5\nbunches = 4\n# Calculate the total number of flowers in 4 bunches\ntotal_flowers = flowers_per_bunch * bunches\nanswer = total_flowers\n", "prediction": "20\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nHawaiian vacation package | $4,866.00\nJamaican vacation package | $2,625.00\nAustralian vacation package | $3,635.00\nCaribbean vacation package | $1,398.00\nAfrican safari vacation package | $4,371.00\nEuropean vacation package | $6,510.00", "question": "Jackson has $9,489.00. Does he have enough to buy a European vacation package and a Jamaican vacation package? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# Prices of the vacation packages\neuropean_package = 6510.00\njamaican_package = 2625.00\n\n# Total cost for both packages\ntotal_cost = european_package + jamaican_package\n\n# Jackson's budget\njackson_budget = 9489.00\n\n# Check if Jackson has enough money\nif jackson_budget >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"Web pages visited\" and then answer a question.\n\nPerson | Number of Web pages\nBrendan | 265\nShawn | 259\nAdam | 256\nTess | 226", "question": "Several people compared how many Web pages they had visited. Who visited the most Web pages? Choose from the the options: ['Brendan', 'Shawn', 'Adam', 'Tess']", "answer": "Brendan", "ques_type": "multi_choice", "choices": ["Brendan", "Shawn", "Adam", "Tess"], "code": "# Python code, return answer \nweb_pages_visited = {\n    'Brendan': 265,\n    'Shawn': 259,\n    'Adam': 256,\n    'Tess': 226\n}\n# Find the person who visited the most web pages\nmost_web_pages_person = max(web_pages_visited, key=web_pages_visited.get)\nanswer = most_web_pages_person\n", "prediction": "Brendan\n"}
{"context": "Read the following table regarding \"Balloons sold\" and then answer a question.\n\nDay | Number of balloons\nFriday | 36\nSaturday | 30\nSunday | 32\nMonday | 39\nTuesday | 37\nWednesday | 45\nThursday | 16", "question": "The manager of a party supply store researched how many balloons it sold in the past 7 days. What is the range of the numbers?", "answer": "29", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of balloons sold each day\nballoons_sold = [36, 30, 32, 39, 37, 45, 16]\n# Calculate the range\nrange_balloons = max(balloons_sold) - min(balloons_sold)\nanswer = range_balloons\n", "prediction": "29\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nfinch | $48.44\ncockatoo | $58.86\npot-bellied pig | $26.30\nhedgehog | $61.09\nchinchilla | $39.24\nchameleon | $63.10", "question": "How much money does Rhianna need to buy a hedgehog and a finch?", "answer": "109.53", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_finch = 48.44\nprice_hedgehog = 61.09\n# Total cost to buy a hedgehog and a finch\ntotal_cost = price_finch + price_hedgehog\nanswer = total_cost\n", "prediction": "109.53\n"}
{"context": "Read the following table regarding \"Fish per tank\" and then answer a question.\n\nStem | Leaf \n3 | 1, 4, 7\n4 | 5, 5, 5, 9\n5 | 5\n6 | 1", "question": "A pet store owner had his staff count the number of fish in each tank. How many tanks have fewer than 60 fish?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Extracting the number of fish from the stem-and-leaf display\nfish_counts = [31, 34, 37, 45, 45, 45, 49, 55, 61]  # Composing the counts based on the stem-leaf representation\n# Count how many tanks have fewer than 60 fish\ntanks_fewer_than_60 = sum(1 for count in fish_counts if count < 60)\nanswer = tanks_fewer_than_60\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"Tires made\" and then answer a question.\n\nMonth | Number of tires\nNovember | 3,607\nDecember | 5,898\nJanuary | 8,814\nFebruary | 1,472", "question": "A tire factory manager monitored the number of tires made each month. How many more tires did the factory make in January than in February?", "answer": "7,342", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ntires_january = 8814\ntires_february = 1472\n# Calculate the difference in tires made between January and February\ndifference = tires_january - tires_february\nanswer = difference\n", "prediction": "7342\n"}
{"context": "Read the following table regarding \"Broken tiles per shipment\" and then answer a question.\n\nStem | Leaf \n4 | 0, 3, 5, 8\n5 | 1, 6, 7, 8, 9\n6 | 3, 6, 6, 8, 9, 9\n7 | 1, 4", "question": "Seaside Flooring tracked the number of broken tiles in each shipment it received last year. What is the smallest number of broken tiles?", "answer": "40", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The smallest number of broken tiles corresponds to the smallest value in the stem-and-leaf display.\nsmallest_broken_tiles = 40  # From the stem \"4 | 0\", the value is 40 tiles.\nanswer = smallest_broken_tiles\n", "prediction": "40\n"}
{"context": "Read the following table regarding \"Train schedule\" and then answer a question.\n\nCedarburg | 7:45 A.M. | 8:30 A.M. | 9:30 A.M. | 10:30 A.M.\nStafford | 9:30 A.M. | 10:15 A.M. | 11:15 A.M. | 12:15 P.M.\nNorwood | 10:00 A.M. | 10:45 A.M. | 11:45 A.M. | 12:45 P.M.\nDanville | 11:00 A.M. | 11:45 A.M. | 12:45 P.M. | 1:45 P.M.\nHillsboro | 11:45 A.M. | 12:30 P.M. | 1:30 P.M. | 2:30 P.M.\nLanberry | 12:30 P.M. | 1:15 P.M. | 2:15 P.M. | 3:15 P.M.\nCenterville | 2:15 P.M. | 3:00 P.M. | 4:00 P.M. | 5:00 P.M.", "question": "Look at the following schedule. Malia is at Hillsboro at 2.15 P.M. How soon can she get to Lanberry? Choose from the the options: ['10:30 A.M.', '1:15 P.M.', '3:15 P.M.', '12:15 P.M.']", "answer": "3:15 P.M.", "ques_type": "multi_choice", "choices": ["10:30 A.M.", "1:15 P.M.", "3:15 P.M.", "12:15 P.M."], "code": "# Python code, return answer \n# Malia is at Hillsboro at 2:15 P.M. and wants to go to Lanberry. \n# Looking at the train schedule, she needs to find the next available train from Hillsboro to Lanberry.\n\n# Hillsboro schedule after 2:15 P.M.\nhillsboro_trains = ['11:45 A.M.', '12:30 P.M.', '1:30 P.M.', '2:30 P.M.']\n# Next train available from Hillsboro after 2:15 P.M.\nnext_hillsboro_train = '2:30 P.M.'\n\n# Schedule for Lanberry\nlanberry_trains = ['12:30 P.M.', '1:15 P.M.', '2:15 P.M.', '3:15 P.M.']\n\n# The next available train from Hillsboro arrives in Lanberry at 3:15 P.M.\nanswer = '3:15 P.M.'\n", "prediction": "3:15 P.M.\n"}
{"context": "Read the following table regarding \"Bird sightings in parks\" and then answer a question.\n\nPark | Vultures | Falcons\nNorthside Park | 2 | 3\nSkyline Park | 6 | 17\nMountain Park | 10 | 19", "question": "Tori, a birdwatcher, counted the number of each species of bird at the local county parks. How many more birds were spotted in Mountain Park than in Skyline Park?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of birds spotted in each park\nmountain_park_vultures = 10\nmountain_park_falcons = 19\nskyline_park_vultures = 6\nskyline_park_falcons = 17\n\n# Total birds in each park\ntotal_mountain_park = mountain_park_vultures + mountain_park_falcons\ntotal_skyline_park = skyline_park_vultures + skyline_park_falcons\n\n# Calculate the difference in the number of birds\ndifference = total_mountain_park - total_skyline_park\nanswer = difference\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"Broken tiles per shipment\" and then answer a question.\n\nStem | Leaf \n2 | 3\n3 | 4\n4 | \n5 | 8\n6 | \n7 | 9\n8 | 3, 5\n9 | 0", "question": "Dover Flooring tracked the number of broken tiles in each shipment it received last year. What is the largest number of broken tiles?", "answer": "90", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest number of broken tiles corresponds to the largest value in the stem-and-leaf display.\nlargest_broken_tiles = 90  # From the stem \"9 | 0\", the value is 90 broken tiles.\nanswer = largest_broken_tiles\n", "prediction": "90\n"}
{"context": "Read the following table regarding \"Actors per movie\" and then answer a question.\n\nStem | Leaf \n1 | 2, 3, 5, 7, 8\n2 | 1, 2, 8\n3 | 2, 6\n4 | 7\n5 | 0\n6 | 7\n7 | 3\n8 | 4, 4, 7, 8\n9 | 0", "question": "The movie critic liked to count the number of actors in each movie she saw. What is the largest number of actors?", "answer": "90", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest number of actors corresponds to the largest value in the stem-and-leaf display.\nlargest_number_of_actors = 90  # From the stem \"9 | 0\", the value is 90 actors.\nanswer = largest_number_of_actors\n", "prediction": "90\n"}
{"context": "Read the following table regarding \"Donations received\" and then answer a question.\n\nCause | April | May\nParks | $7 | $4\nAnimals | $15 | $17\nEducation | $18 | $18", "question": "A county agency recorded the money donated to several charitable causes over time. How much money was raised for parks in April?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ndonations_parks_april = 7  # From the table, the amount raised for parks in April\nanswer = donations_parks_april\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ndark chocolate chips | $5 per lb\nbutterscotch chips | $3 per lb\nwhite chocolate chips | $7 per lb\nmilk chocolate chips | $6 per lb", "question": "Mark buys 0.6 pounds of milk chocolate chips. What is the total cost?", "answer": "3.60", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_milk_chocolate = 6 \npounds_bought = 0.6 \n# Calculate the total cost\ntotal_cost = price_per_pound_milk_chocolate * pounds_bought\nanswer = total_cost\n", "prediction": "3.5999999999999996\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbat signed by a famous baseball player | $9,504.00\nbook signed by a famous author | $9,035.00\nshirt signed by a famous soccer player | $1,785.00\nphotograph signed by a famous movie star | $4,463.00\njersey signed by a famous hockey player | $2,448.00", "question": "How much money does Dave need to buy a shirt signed by a famous soccer player, a photograph signed by a famous movie star, and a jersey signed by a famous hockey player?", "answer": "8,696", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_shirt = 1785.00\nprice_photograph = 4463.00\nprice_jersey = 2448.00\n\n# Total cost for Dave\ntotal_cost = price_shirt + price_photograph + price_jersey\nanswer = total_cost\n", "prediction": "8696.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ncoarse gravel | $1.62/kg\npebbles | $2.26/kg\nwhite sand | $2.14/kg\nrocks | $1.28/kg\nfine gravel | $1.57/kg", "question": "Tucker bought 1 kilogram of coarse gravel and 3 kilograms of white sand. How much did he spend?", "answer": "8.04", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices per kilogram\nprice_coarse_gravel = 1.62 \nprice_white_sand = 2.14 \n# Amounts bought\nkilograms_coarse_gravel = 1 \nkilograms_white_sand = 3 \n# Calculate total cost\ntotal_cost = (price_coarse_gravel * kilograms_coarse_gravel) + (price_white_sand * kilograms_white_sand)\nanswer = total_cost\n", "prediction": "8.04\n"}
{"context": "Read the following table regarding \"Sit-up competition (number of sit-ups)\" and then answer a question.\n\nStem | Leaf \n2 | 1\n3 | 1, 1, 8\n4 | 2\n5 | 5, 6, 6, 8, 9\n6 | 2, 4, 7\n7 | 0, 0, 0, 4, 5, 7, 9\n8 | 1, 4, 7", "question": "Miss Lawrence ran a sit-up competition among her P.E. students and monitored how many sit-ups each students could do. How many people did at least 30 sit-ups but fewer than 90 sit-ups?", "answer": "22", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Extracting the number of sit-ups from the stem-and-leaf display\nsit_ups = [\n    21,  # from stem 2\n    31, 31, 38,  # from stem 3\n    42,  # from stem 4\n    55, 56, 56, 58, 59,  # from stem 5\n    62, 64, 67,  # from stem 6\n    70, 70, 70, 74, 75, 77, 79,  # from stem 7\n    81, 84, 87  # from stem 8\n]\n\n# Counting how many students did at least 30 sit-ups but fewer than 90 sit-ups\ncount = sum(1 for sit_up in sit_ups if 30 <= sit_up < 90)\nanswer = count\n", "prediction": "22\n"}
{"context": "Read the following table regarding \"Basketball team mascot shooting contest\" and then answer a question.\n\nMascot | Baskets | Misses\nRhianna Rhino | 16 | 18\nTina Tiger | 13 | 11\nAnnie Armadillo | 5 | 7\nBarry Bulldog | 1 | 19", "question": "At a charity basketball shootout, excited fans counted the baskets and misses made by each of the team mascots. How many more baskets did Annie Armadillo have than Barry Bulldog?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Baskets made by each mascot\nbaskets_annie = 5\nbaskets_barry = 1\n# Calculate the difference in baskets\ndifference = baskets_annie - baskets_barry\nanswer = difference\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"Trees planted\" and then answer a question.\n\nOrganization | Number of trees planted\nMake it Green | 565\nDreaming Green | 552\nAcorns to Oaks | 526\nNew Planet | 562", "question": "An environmental agency examined how many trees were planted by different organizations. Which organization planted the fewest trees? Choose from the the options: ['Make it Green', 'Dreaming Green', 'Acorns to Oaks', 'New Planet']", "answer": "Acorns to Oaks", "ques_type": "multi_choice", "choices": ["Make it Green", "Dreaming Green", "Acorns to Oaks", "New Planet"], "code": "# Python code, return answer \ntrees_planted = {\n    'Make it Green': 565,\n    'Dreaming Green': 552,\n    'Acorns to Oaks': 526,\n    'New Planet': 562\n}\n# Find the organization that planted the fewest trees\nfewest_trees_organization = min(trees_planted, key=trees_planted.get)\nanswer = fewest_trees_organization\n", "prediction": "Acorns to Oaks\n"}
{"context": "Read the following table regarding \"Passengers per train\" and then answer a question.\n\nStem | Leaf \n1 | 1\n2 | 4\n3 | 1, 5, 6, 6\n4 | 0, 1, 7\n5 | 4, 7, 8, 8, 9", "question": "The train conductor made sure to count the number of passengers on each train. How many trains had exactly 41 passengers?", "answer": "1", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# From the stem-and-leaf display, we can see the number of passengers for each train.\n# The train with exactly 41 passengers corresponds to the stem \"4\" and the leaf \"1\".\n# Thus, there is 1 train with exactly 41 passengers.\n\nnumber_of_trains_with_41_passengers = 1\nanswer = number_of_trains_with_41_passengers\n", "prediction": "1\n"}
{"context": "Read the following table regarding \"Winter Olympics schedule\" and then answer a question.\n\nEvent | Begin | End\ncross-country skiing | 10:55 A.M. | 12:10 P.M.\nfigure skating | 11:10 A.M. | 12:35 P.M.\nbobsled | 12:10 P.M. | 1:10 P.M.\nice hockey | 12:25 P.M. | 3:50 P.M.\nluge | 3:10 P.M. | 7:25 P.M.\nsnowboarding | 6:30 P.M. | 9:55 P.M.", "question": "Look at the following schedule. When does the bobsled event end? Choose from the the options: ['12:10 P.M.', '1:10 P.M.', '9:55 P.M.', '3:50 P.M.']", "answer": "1:10 P.M.", "ques_type": "multi_choice", "choices": ["12:10 P.M.", "1:10 P.M.", "9:55 P.M.", "3:50 P.M."], "code": "# Python code, return answer \nbobsled_end_time = '1:10 P.M.'\nanswer = bobsled_end_time\n", "prediction": "1:10 P.M.\n"}
{"context": "Read the following table regarding \"Actors per movie\" and then answer a question.\n\nStem | Leaf \n3 | 5, 5\n4 | 1, 4\n5 | 0, 9\n6 | 1\n7 | 7\n8 | 4\n9 | 0, 0, 0", "question": "The movie critic liked to count the number of actors in each movie she saw. What is the largest number of actors?", "answer": "90", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest number of actors corresponds to the largest value in the stem-and-leaf display.\nlargest_number_of_actors = 90  # From the stem \"9 | 0, 0, 0\", the value is 90.\nanswer = largest_number_of_actors\n", "prediction": "90\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n13 | 3\n14 | 7\n15 | 13", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "nonlinear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the differences in y-values for equal differences in x-values.\nx_values = [13, 14, 15]\ny_values = [3, 7, 13]\n\n# Calculate the differences\ndifferences = [y_values[i] - y_values[i - 1] for i in range(1, len(y_values))]\n# Check if the differences are constant\nis_linear = all(diff == differences[0] for diff in differences)\n\nanswer = 'linear' if is_linear else 'nonlinear'\n", "prediction": "NameError(\"name 'y_values' is not defined\")"}
{"context": "Read the following table regarding \"Trees planted\" and then answer a question.\n\nOrganization | Number of trees planted\nTrees for All | 69\nNew Planet | 94\nAcorns to Oaks | 74\nLet it Grow | 83\nPlant It | 82\nHeal the Earth | 70\nDreaming Green | 84\nMake it Green | 92", "question": "An environmental agency examined how many trees were planted by different organizations. What is the mean of the numbers?", "answer": "81", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of trees planted by each organization\ntrees_planted = [69, 94, 74, 83, 82, 70, 84, 92]\n# Calculate the mean\nmean_trees = sum(trees_planted) / len(trees_planted)\nanswer = mean_trees\n", "prediction": "81.0\n"}
{"context": "Read the following table regarding \"Idaho crop prices per cwt\" and then answer a question.\n\nCrop | 2004 | 2005\nLentils | $14 | $12\nTimothy seed | $7 | $7\nApples | $12 | $18\nCanola | $11 | $10\nPeas | $7 | $6", "question": "An Idaho farmer has been monitoring crop prices over time. Per cwt, how much did peas cost in 2004?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Price of peas in 2004\npeas_price_2004 = 7  # From the table, the price of peas in 2004\nanswer = peas_price_2004\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"Doctor's office wait times (minutes)\" and then answer a question.\n\nStem | Leaf \n3 | 3\n4 | 1, 4\n5 | 6, 7\n6 | 6\n7 | 2", "question": "The receptionist at a doctor's office kept track of each patient's wait time. What is the shortest wait time?", "answer": "33", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The shortest wait time corresponds to the smallest value in the stem-and-leaf display.\nshortest_wait_time = 33  # From the stem \"3 | 3\", the value is 33 minutes.\nanswer = shortest_wait_time\n", "prediction": "33\n"}
{"context": "Read the following table regarding \"Roller coasters per amusement park\" and then answer a question.\n\nStem | Leaf \n1 | 3, 9\n2 | 0, 0, 0, 1, 7, 7, 8, 9\n3 | 2, 3, 6, 8\n4 | 2, 2, 4, 5, 7", "question": "Irma found a list of the number of roller coasters at each amusement park in the state. How many amusement parks have fewer than 50 roller coasters?", "answer": "19", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Extracting the number of roller coasters from the stem-and-leaf display\nroller_coasters = [\n    13, 19,   # From stem \"1\"\n    20, 20, 20, 21, 27, 27, 28, 29,  # From stem \"2\"\n    32, 33, 36, 38,  # From stem \"3\"\n    42, 42, 44, 45, 47  # From stem \"4\"\n]\n\n# Count how many amusement parks have fewer than 50 roller coasters\nfewer_than_50 = sum(1 for coasters in roller_coasters if coasters < 50)\nanswer = fewer_than_50\n", "prediction": "19\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nMixture | Temperature (\u00b0C)\nBromine mixture | -4\nAcetone mixture | 5", "question": "In science class, Brooke is measuring the temperature of different chemical mixtures. The temperatures of two mixtures are shown in the table. Which mixture's temperature is closest to zero? Choose from the the options: ['bromine mixture', 'acetone mixture']", "answer": "bromine mixture", "ques_type": "multi_choice", "choices": ["bromine mixture", "acetone mixture"], "code": "# Python code, return answer \nbromine_temperature = -4\nacetone_temperature = 5\n\n# Calculate the absolute distances to zero\nbromine_distance_to_zero = abs(bromine_temperature)\nacetone_distance_to_zero = abs(acetone_temperature)\n\n# Determine which mixture's temperature is closest to zero\nif bromine_distance_to_zero < acetone_distance_to_zero:\n    answer = 'bromine mixture'\nelse:\n    answer = 'acetone mixture'\n\n", "prediction": "bromine mixture\n"}
{"context": "Read the following table regarding \"Quiz show scores\" and then answer a question.\n\nName | Score\nErnest | 2\nDan | 4\nKenny | 2\nAustin | 2\nJustine | 6\nLila | 5\nRyan | 3", "question": "The players on a quiz show received the following scores. What is the median of the numbers?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nscores = [2, 4, 2, 2, 6, 5, 3]\n# Sort the scores to find the median\nscores.sort()\n# Calculate the median\nn = len(scores)\nif n % 2 == 0:\n    median = (scores[n//2 - 1] + scores[n//2]) / 2\nelse:\n    median = scores[n//2]\nanswer = median\n", "prediction": "3\n"}
{"context": "Read the following table regarding \"Donations received\" and then answer a question.\n\nCause | April | May\nMedical research | $4 | $18\nParks | $13 | $19\nHunger | $7 | $17", "question": "A county agency recorded the money donated to several charitable causes over time. Which cause raised less money in April, hunger or medical research? Choose from the the options: ['hunger', 'medical research']", "answer": "medical research", "ques_type": "multi_choice", "choices": ["hunger", "medical research"], "code": "# Python code, return answer \n# Donations in April for both causes\nhunger_april = 7\nmedical_research_april = 4\n\n# Determine which cause raised less money in April\nif hunger_april < medical_research_april:\n    answer = 'hunger'\nelse:\n    answer = 'medical research'\n\n", "prediction": "medical research\n"}
{"context": "Read the following table regarding \"Train tickets sold\" and then answer a question.\n\nDay | Number of tickets\nTuesday | 24\nWednesday | 28\nThursday | 26\nFriday | 24\nSaturday | 20", "question": "The transportation company tracked the number of train tickets sold in the past 5 days. What is the median of the numbers?", "answer": "24", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of tickets sold for each day\ntickets_sold = [24, 28, 26, 24, 20]\n# Sort the list to find the median\ntickets_sold.sort()\n# Calculate the median\nn = len(tickets_sold)\nif n % 2 == 1:  # If the number of observations is odd\n    median = tickets_sold[n // 2]\nelse:           # If the number of observations is even\n    median = (tickets_sold[n // 2 - 1] + tickets_sold[n // 2]) / 2\n\nanswer = median\n", "prediction": "24\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | Road bike tires | Mountain bike tires\nRed | 5 | 2\nGreen | 2 | 2", "question": "Billy is shopping for a new bicycle. He is most interested in color and type of tires. What is the probability that a randomly selected bike is green and has road bike tires? Simplify any fractions.", "answer": "2/11", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total bikes\ntotal_bikes = 5 + 2 + 2 + 2\n\n# Bikes that are green and have road bike tires\ngreen_road_bike_tires = 2 \n\n# Probability calculation\nprobability_green_road = green_road_bike_tires / total_bikes\n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(green_road_bike_tires, total_bikes).limit_denominator()\nanswer = simplified_probability\n", "prediction": "2/11\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ndeep-sea fishing package | $987.00\nsurfing adventure package | $904.00\nsailing trip package | $744.00\ncamping adventure package | $641.00\nparachuting adventure package | $738.00\nwhale-watching adventure package | $608.00", "question": "Kenneth has $1,614.00. Does he have enough to buy a surfing adventure package and a camping adventure package? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# Prices of the packages\nsurfing_package_price = 904.00\ncamping_package_price = 641.00\n# Total cost for both packages\ntotal_cost = surfing_package_price + camping_package_price\n# Kenneth's budget\nkenneth_budget = 1614.00\n# Check if Kenneth has enough money\nif kenneth_budget >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | Regular cleaning | Broken tooth\nPatients under 18 years old | 3 | 2\nPatients 19-60 years old | 3 | 5", "question": "A dentist was making note of his upcoming appointments with different aged patients and the reasons for their visits. What is the probability that a randomly selected appointment is with patients 19-60 years old and is for a broken tooth? Simplify any fractions.", "answer": "5/13", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total patients\npatients_under_18 = 3 + 2\npatients_19_to_60 = 3 + 5\ntotal_patients = patients_under_18 + patients_19_to_60\n\n# Patients 19-60 years old with a broken tooth\npatients_broken_tooth_19_to_60 = 5\n\n# Probability calculation\nprobability = patients_broken_tooth_19_to_60 / total_patients\n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(patients_broken_tooth_19_to_60, total_patients).limit_denominator()\nanswer = simplified_probability\n", "prediction": "5/13\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbrass clip | $0.08\nelastic band | $0.03\ngold tack | $0.05\nfour-inch nail | $0.03\nsmall metal hook | $0.01", "question": "How much money does Sasha need to buy a gold tack and an elastic band?", "answer": "0.08", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_gold_tack = 0.05 \nprice_elastic_band = 0.03 \n# Total cost for the items\ntotal_cost = price_gold_tack + price_elastic_band\nanswer = total_cost\n", "prediction": "0.08\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ncookie dough ice cream | $3 per pound\nmint ice cream | $5 per pound\ncoffee ice cream | $6 per pound\ndouble chocolate ice cream | $5 per pound\nstrawberry ice cream | $3 per pound\ncherry ice cream | $5 per pound", "question": "Carly went to the store and bought 1+1/10 pounds of coffee ice cream. How much did she spend?", "answer": "6.60", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_coffee_ice_cream = 6  # price in dollars\npounds_bought = 1 + 1/10  # Carly bought 1 and 1/10 pounds\n# Calculate total cost\ntotal_cost = price_per_pound_coffee_ice_cream * pounds_bought\nanswer = total_cost\n", "prediction": "6.6000000000000005\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nhockey ticket | $36\ngolf ticket | $39\nbasketball ticket | $78\nbaseball ticket | $34\nfootball ticket | $81\nsoccer ticket | $52", "question": "How much money does Kimberly need to buy a football ticket, a soccer ticket, and a hockey ticket?", "answer": "169", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the tickets\nfootball_ticket_price = 81 \nsoccer_ticket_price = 52 \nhockey_ticket_price = 36 \n\n# Total money needed for the tickets\ntotal_money_needed = football_ticket_price + soccer_ticket_price + hockey_ticket_price\nanswer = total_money_needed\n", "prediction": "169\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n4 | 8\n5 | 10\n6 | 18", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "nonlinear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear or nonlinear, we can check the ratios of change between x and y.\n\n# Calculate the differences\npoints = [(4, 8), (5, 10), (6, 18)]\n\n# Check the differences\ndifferences = [(y2 - y1) / (x2 - x1) for (x1, y1), (x2, y2) in zip(points[:-1], points[1:])]\n\n# If the differences are not constant, the function is nonlinear\nif differences[0] != differences[1]:\n    answer = 'nonlinear'\nelse:\n    answer = 'linear'\n\n", "prediction": "nonlinear\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbearded dragon | $36\nhedgehog | $79\ncockatoo | $89\npot-bellied pig | $25", "question": "Tara has $110. Does she have enough to buy a cockatoo and a pot-bellied pig? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \ncost_cockatoo = 89 \ncost_pot_bellied_pig = 25 \ntotal_cost = cost_cockatoo + cost_pot_bellied_pig\ntara_budget = 110\n\nif tara_budget >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nhydrofoil | $8,453.00\nbulldozer | $7,768.00\ndump truck | $6,637.00\nrace car | $8,738.00", "question": "How much money does Lena need to buy a bulldozer, a dump truck, and a hydrofoil?", "answer": "22,858", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nbulldozer_price = 7768.00\ndump_truck_price = 6637.00\nhydrofoil_price = 8453.00\n# Calculate the total cost\ntotal_cost = bulldozer_price + dump_truck_price + hydrofoil_price\nanswer = total_cost\n", "prediction": "22858.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of apartments | Number of light switches\n1 | 10\n2 | 20\n3 | 30\n4 | 40\n5 | ?", "question": "Each apartment has 10 light switches. How many light switches are in 5 apartments?", "answer": "50", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Given that each apartment has 10 light switches\nlight_switches_per_apartment = 10 \nnumber_of_apartments = 5 \n# Calculate the total number of light switches in 5 apartments\ntotal_light_switches = light_switches_per_apartment * number_of_apartments\nanswer = total_light_switches\n", "prediction": "50\n"}
{"context": "Read the following table regarding \"Ferry schedule\" and then answer a question.\n\nLocation | Arrive | Depart\nSandy Shores | 8:00 A.M. | 8:05 A.M.\nStarfish City | 8:30 A.M. | 9:00 A.M.\nCliff View | 9:50 A.M. | 10:10 A.M.\nBeach Town | 10:55 A.M. | 11:05 A.M.\nBay Harbor | 12:20 P.M. | 12:25 P.M.\nWindy Sands | 1:50 P.M. | 1:55 P.M.\nFoggy Port | 3:35 P.M. | 3:50 P.M.\nGrassy Beach | 4:15 P.M. | 4:45 P.M.\nGreen Harbor | 5:35 P.M. | 5:45 P.M.\nPebble Town | 6:10 P.M. | 6:35 P.M.", "question": "Look at the following schedule. At which stop does the ferry arrive at 6.10 P.M.? Choose from the the options: ['Sandy Shores', 'Pebble Town', 'Bay Harbor', 'Grassy Beach']", "answer": "Pebble Town", "ques_type": "multi_choice", "choices": ["Sandy Shores", "Pebble Town", "Bay Harbor", "Grassy Beach"], "code": "# Python code, return answer \nferry_schedule = {\n    'Sandy Shores': {'Arrive': '8:00 A.M.', 'Depart': '8:05 A.M.'},\n    'Starfish City': {'Arrive': '8:30 A.M.', 'Depart': '9:00 A.M.'},\n    'Cliff View': {'Arrive': '9:50 A.M.', 'Depart': '10:10 A.M.'},\n    'Beach Town': {'Arrive': '10:55 A.M.', 'Depart': '11:05 A.M.'},\n    'Bay Harbor': {'Arrive': '12:20 P.M.', 'Depart': '12:25 P.M.'},\n    'Windy Sands': {'Arrive': '1:50 P.M.', 'Depart': '1:55 P.M.'},\n    'Foggy Port': {'Arrive': '3:35 P.M.', 'Depart': '3:50 P.M.'},\n    'Grassy Beach': {'Arrive': '4:15 P.M.', 'Depart': '4:45 P.M.'},\n    'Green Harbor': {'Arrive': '5:35 P.M.', 'Depart': '5:45 P.M.'},\n    'Pebble Town': {'Arrive': '6:10 P.M.', 'Depart': '6:35 P.M.'}\n}\n\n# Find the stop where the ferry arrives at 6:10 P.M.\narrival_time = '6:10 P.M.'\nanswer = [location for location, times in ferry_schedule.items() if times['Arrive'] == arrival_time]\n\n# Since the question specifies only one option, we return the first element\nanswer = answer[0] if answer else None\n", "prediction": "NameError(\"name 'arrival_time' is not defined\")"}
{"context": "Read the following table regarding \"Photographs taken\" and then answer a question.\n\nDay | Number of photographs\nSaturday | 10\nSunday | 10\nMonday | 6\nTuesday | 4\nWednesday | 4\nThursday | 6\nFriday | 6", "question": "Carrie looked at the dates of the digital photos on her computer to find out how many she had taken in the past 7 days. What is the mode of the numbers?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nfrom statistics import mode\n\n# Number of photographs taken each day\nphotographs = [10, 10, 6, 4, 4, 6, 6]\n\n# Calculate the mode\nmode_photographs = mode(photographs)\nanswer = mode_photographs\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nraisins | $2.91/kilogram\nbanana chips | $1.20/kilogram\ndried apple | $3.04/kilogram\ndried pear | $3.14/kilogram\ndried mango | $1.76/kilogram\ndried pineapple | $1.38/kilogram", "question": "Gabe went to the store. He bought 1 kilogram of raisins. How much did he spend?", "answer": "2.91", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_kilogram_raisins = 2.91 \nkilograms_bought = 1 \nanswer = price_per_kilogram_raisins * kilograms_bought\n", "prediction": "2.91\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nMonth | Change in water level (in.)\nApril | -6\nMay | 4", "question": "The houses in Tanvi's town get their water from a local reservoir. Tanvi and a group of engineers monitor the water level for safety and health reasons. The change in water level over two months is shown in the table. During which month did the water level change more? Choose from the the options: ['April', 'May']", "answer": "April", "ques_type": "multi_choice", "choices": ["April", "May"], "code": "# Python code, return answer \nchange_april = abs(-6)  # Water level decreased by 6 inches\nchange_may = abs(4)     # Water level increased by 4 inches\n\n# Determine which month had a greater change in water level\nif change_april > change_may:\n    answer = 'April'\nelse:\n    answer = 'May'\n", "prediction": "April\n"}
{"context": "Read the following table regarding \"Actors per movie\" and then answer a question.\n\nStem | Leaf \n2 | 2, 3, 4, 6, 7, 9\n3 | 0, 2, 4, 4, 6, 6, 6, 7\n4 | 2, 3, 5\n5 | \n6 | 5, 6, 6\n7 | 0, 4, 4, 9", "question": "The movie critic liked to count the number of actors in each movie he saw. What is the smallest number of actors?", "answer": "22", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The smallest number of actors corresponds to the smallest value in the stem-and-leaf display.\nsmallest_actors = 22  # From the stem \"2 | 2\", the value is 22 actors.\nanswer = smallest_actors\n", "prediction": "22\n"}
{"context": "Read the following table regarding \"Number of houses sold\" and then answer a question.\n\nTown | Number of houses sold\nLivingston | 270\nStamford | 480\nOther | 280", "question": "A real estate agent evaluated the number of houses sold this year in each town in Taylor County. What fraction of houses sold in Taylor County were in Stamford? Simplify your answer.", "answer": "48/103", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total houses sold in Taylor County\ntotal_houses_sold = 270 + 480 + 280\n# Houses sold in Stamford\nstamford_houses = 480\n# Calculate the fraction of houses sold in Stamford\nfraction_stamford = stamford_houses / total_houses_sold\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_fraction = Fraction(stamford_houses, total_houses_sold).limit_denominator()\nanswer = simplified_fraction\n", "prediction": "48/103\n"}
{"context": "Read the following table regarding \"Playing miniature golf last summer\" and then answer a question.\n\nTimes played | Frequency\n0 | 15\n1 | 4\n2 | 8\n3 | 10\n4 | 9", "question": "The Hillsboro Tourism Office researched how often people played miniature golf last summer. How many people are there in all?", "answer": "46", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of people playing miniature golf\nfrequency = {\n    0: 15,\n    1: 4,\n    2: 8,\n    3: 10,\n    4: 9\n}\n\n# Calculate the total number of people\ntotal_people = sum(frequency.values())\nanswer = total_people\n", "prediction": "46\n"}
{"context": "Read the following table regarding \"Trivia game scores\" and then answer a question.\n\nName | Score\nRoger | 28\nBrennan | 29\nManny | 27\nEdward | 25", "question": "Some friends played a trivia game and recorded their scores. Who had the lowest score? Choose from the the options: ['Roger', 'Brennan', 'Manny', 'Edward']", "answer": "Edward", "ques_type": "multi_choice", "choices": ["Roger", "Brennan", "Manny", "Edward"], "code": "# Python code, return answer \nscores = {\n    'Roger': 28,\n    'Brennan': 29,\n    'Manny': 27,\n    'Edward': 25\n}\n# Find the name with the lowest score\nlowest_score_name = min(scores, key=scores.get)\nanswer = lowest_score_name\n", "prediction": "Edward\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of fish bowls | Number of fish\n1 | 10\n2 | 20\n3 | 30\n4 | 40\n5 | ?", "question": "Each fish bowl has 10 fish. How many fish are in 5 fish bowls?", "answer": "50", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of fish in each bowl\nfish_per_bowl = 10 \n# Number of fish bowls\nnumber_of_bowls = 5 \n# Calculate total number of fish\ntotal_fish = fish_per_bowl * number_of_bowls\nanswer = total_fish\n", "prediction": "50\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbook about basketball | $18.00\nbook about the Olympics | $15.00\nbook about sharks | $19.00\nbook about cats | $24.00\nbook about hiking | $14.00\nbook about trains | $17.00", "question": "Erin has $39.00. Does she have enough to buy a book about sharks and a book about basketball? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# Prices of the books\nprice_basketball = 18.00\nprice_sharks = 19.00\n# Total cost for both books\ntotal_cost = price_basketball + price_sharks\n# Erin's budget\nerin_budget = 39.00\n# Check if Erin has enough money\nif erin_budget >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nfleece blanket | $12.00\npillow | $13.00\nquilt | $46.00\nnavy blue bath mat | $15.00\nyellow bath towel | $14.00\nflannel sheet | $24.00", "question": "How much money does Edward need to buy 2 navy blue bath mats?", "answer": "30", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_bath_mat = 15.00 \nnumber_of_bath_mats = 2 \ntotal_cost = price_per_bath_mat * number_of_bath_mats\nanswer = total_cost\n", "prediction": "30.0\n"}
{"context": "Read the following table regarding \"Hours of babysitting\" and then answer a question.\n\nMonth | Hours\nNovember | 8\nDecember | 6\nJanuary | 8\nFebruary | 6\nMarch | 6\nApril | 9\nMay | 9", "question": "Lillian looked at her calendar to figure out how much time she spent babysitting each month. What is the mode of the numbers?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nhours = [8, 6, 8, 6, 6, 9, 9]\n# Finding the mode\nfrom statistics import mode\nanswer = mode(hours)\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$540 | 21,300 | 8,100\n$590 | 18,700 | 10,600\n$640 | 16,100 | 13,100\n$690 | 13,500 | 15,600\n$740 | 10,900 | 18,100", "question": "Look at the table. Then answer the question. At a price of $690, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "surplus", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \n# Quantity demanded and supplied at the price of $690\nquantity_demanded_at_690 = 13500\nquantity_supplied_at_690 = 15600\n\n# Determine if there is a shortage or surplus\nif quantity_demanded_at_690 < quantity_supplied_at_690:\n    answer = 'surplus'\nelse:\n    answer = 'shortage'\n\n", "prediction": "surplus\n"}
{"context": "Read the following table regarding \"Donations received\" and then answer a question.\n\nCause | March | April\nParks | $4 | $6\nEducation | $19 | $7\nHunger | $18 | $10\nAnimals | $10 | $17", "question": "A county agency recorded the money donated to several charitable causes over time. How much money was raised for animals in March?", "answer": "10", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Amount of money raised for animals in March\ndonations_animals_march = 10  # From the table\nanswer = donations_animals_march\n", "prediction": "10\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nDate | Description | Received | Expenses | Available Funds\n | Balance: end of June | | | $450.70\n7/5 | cleaning the Hoffmans' pool | $15.00 | | $465.70\n7/17 | bottle of water | | $1.50 | $464.20\n7/29 | swim trunks | | $16.80 | $447.40", "question": "This is Duncan's complete financial record for July. On July 5, how much money did Duncan make?", "answer": "15", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Money Duncan made on July 5\nmoney_made_july_5 = 15.00\nanswer = money_made_july_5\n", "prediction": "15.0\n"}
{"context": "Read the following table regarding \"Sports team membership\" and then answer a question.\n\nTeam | Number of members\nbaseball team | 38\nfootball team | 37\nwater polo team | 34\nvolleyball team | 35", "question": "Grace's school reported how many members each sports team had. Which team has the most members? Choose from the the options: ['baseball team', 'football team', 'water polo team', 'volleyball team']", "answer": "baseball team", "ques_type": "multi_choice", "choices": ["baseball team", "football team", "water polo team", "volleyball team"], "code": "# Python code, return answer \nteams = {\n    'baseball team': 38,\n    'football team': 37,\n    'water polo team': 34,\n    'volleyball team': 35\n}\n# Find the team with the most members\nmost_members_team = max(teams, key=teams.get)\nanswer = most_members_team\n", "prediction": "baseball team\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$430 | 17,800 | 5,000\n$480 | 14,200 | 8,700\n$530 | 10,600 | 12,400\n$580 | 7,000 | 16,100\n$630 | 3,400 | 19,800", "question": "Look at the table. Then answer the question. At a price of $580, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "surplus", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \n# Given values at a price of $580\nquantity_demanded = 7000\nquantity_supplied = 16100\n\n# Determine if there is a shortage or surplus\nif quantity_demanded < quantity_supplied:\n    answer = 'surplus'\nelse:\n    answer = 'shortage'\n\n", "prediction": "surplus\n"}
{"context": "Read the following table regarding \"Trips to the science museum last year\" and then answer a question.\n\nNumber of trips | Frequency\n0 | 3\n1 | 6\n2 | 2\n3 | 5\n4 | 12\n5 | 1\n6 | 13", "question": "Mrs. Roy, the biology teacher, asked her students how many times they went to the science museum last year. How many students went to the science museum more than 1 time?", "answer": "33", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of students based on the number of trips\nfrequency = {\n    0: 3,\n    1: 6,\n    2: 2,\n    3: 5,\n    4: 12,\n    5: 1,\n    6: 13\n}\n\n# Calculate the number of students who went more than 1 time\nstudents_more_than_one = sum(frequency[trips] for trips in frequency if trips > 1)\nanswer = students_more_than_one\n", "prediction": "NameError(\"name 'frequency' is not defined\")"}
{"context": "Read the following table regarding \"Spelling test scores\" and then answer a question.\n\nStem | Leaf \n1 | 7\n2 | 2, 8\n3 | 0, 5, 5, 8, 9\n4 | 5, 7, 8\n5 | 8, 9\n6 | 2, 6, 7\n7 | 1, 2, 5, 7, 8, 8, 9\n8 | 1\n9 | 0", "question": "This morning, Mr. Molina released the scores from last week's spelling test. How many students scored at least 58 points?", "answer": "14", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Extract scores from the stem-and-leaf display that are at least 58\nscores = [\n    17,      # Stem 1\n    22, 28,  # Stem 2\n    30, 35, 35, 38, 39,  # Stem 3\n    45, 47, 48,  # Stem 4\n    58, 59,  # Stem 5\n    62, 66, 67,  # Stem 6\n    71, 72, 75, 77, 78, 78, 79,  # Stem 7\n    81,  # Stem 8\n    90  # Stem 9\n]\n\n# Count how many scores are at least 58\ncount_at_least_58 = sum(1 for score in scores if score >= 58)\nanswer = count_at_least_58\n", "prediction": "14\n"}
{"context": "Read the following table regarding \"Stop signs\" and then answer a question.\n\nStreet | Number of stop signs\nIrving Street | 3\nJackson Street | 10\nPeabody Street | 6\nWatson Street | 5\nMarshall Street | 5\nSpring Street | 7", "question": "The town council reported on how many stop signs there are on each street. What is the mean of the numbers?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of stop signs on each street\nstop_signs = [3, 10, 6, 5, 5, 7]\n# Calculate the mean\nmean_stop_signs = sum(stop_signs) / len(stop_signs)\nanswer = mean_stop_signs\n", "prediction": "6.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n3 | 16\n19 | 2\n19 | 4\n13 | 18", "question": "Look at this table. Is this relation a function? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# A relation is a function if each input (x value) is associated with exactly one output (y value).\n# We will check if any x value is associated with more than one y value.\nx_values = [3, 19, 19, 13]\ny_values = [16, 2, 4, 18]\n\n# Create a dictionary to track occurrences of x values\nx_to_y = {}\nfor x, y in zip(x_values, y_values):\n    if x in x_to_y:\n        x_to_y[x].add(y)\n    else:\n        x_to_y[x] = {y}\n\n# Check if any x has more than one corresponding y\nis_function = all(len(y_set) == 1 for y_set in x_to_y.values())\n\nanswer = 'yes' if is_function else 'no'\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of desks | Number of yellow notepads\n1 | 5\n2 | 10\n3 | 15\n4 | 20\n5 | ?", "question": "Each desk has 5 yellow notepads. How many yellow notepads are on 5 desks?", "answer": "25", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nnumber_of_desks = 5 \nnotepads_per_desk = 5 \n# Calculate the total number of yellow notepads for 5 desks\ntotal_notepads = number_of_desks * notepads_per_desk\nanswer = total_notepads\n", "prediction": "25\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of bags | Number of yellow buttons\n1 | 10\n2 | 20\n3 | ?", "question": "Each bag has 10 yellow buttons. How many yellow buttons are in 3 bags?", "answer": "30", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Each bag has 10 yellow buttons\nyellow_buttons_per_bag = 10 \n# Number of bags\nnumber_of_bags = 3 \n# Calculate total yellow buttons in 3 bags\ntotal_yellow_buttons = yellow_buttons_per_bag * number_of_bags\nanswer = total_yellow_buttons\n", "prediction": "30\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of bags | Number of yellow buttons\n1 | 5\n2 | 10\n3 | ?", "question": "Each bag has 5 yellow buttons. How many yellow buttons are in 3 bags?", "answer": "15", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Each bag has 5 yellow buttons\nyellow_buttons_per_bag = 5\n# Number of bags\nnumber_of_bags = 3\n# Calculate total yellow buttons in 3 bags\ntotal_yellow_buttons = yellow_buttons_per_bag * number_of_bags\nanswer = total_yellow_buttons\n", "prediction": "15\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ncatfish | $9 per lb\nhalibut | $10 per lb\ntilapia | $4 per lb\nsalmon | $4 per lb\ntuna | $6 per lb\ntrout | $7 per lb", "question": "Henry went to the store and bought 3.7 pounds of salmon. How much did he spend?", "answer": "14.80", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_salmon = 4  # price of salmon per pound\npounds_bought = 3.7          # pounds of salmon bought\n# Calculate total cost\ntotal_cost = price_per_pound_salmon * pounds_bought\nanswer = total_cost\n", "prediction": "14.8\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | A tent | Matches\nDesert | 6 | 7\nRainforest | 2 | 5", "question": "In the first episode of a reality show, contestants had to spin two wheels of fate. Spinning the first wheel determined the remote location where contestants would reside for the duration of the season. Spinning the second wheel determined which \"bonus survival tool\" they would be allowed to bring, along with a few other necessary items. What is the probability that a randomly selected participant spun the first wheel and landed on desert and spun the second wheel and landed on a tent? Simplify any fractions.", "answer": "3/10", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total possible outcomes for each wheel\ntotal_locations = 2  # Desert, Rainforest\ntotal_tools = 2      # Tent, Matches\n\n# Probability of landing on Desert and then on Tent\nprobability_desert = 1 / total_locations\nprobability_tent = 1 / total_tools\n\n# Combined probability of both events happening\ncombined_probability = probability_desert * probability_tent\n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(combined_probability).limit_denominator()\n\nanswer = simplified_probability\n", "prediction": "1/4\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nMonth | Change in water level (in.)\nApril | -6\nMay | 4", "question": "The houses in Krysta's town get their water from a local reservoir. Krysta and a group of engineers monitor the water level for safety and health reasons. The change in water level over two months is shown in the table. During which month did the water level change more? Choose from the the options: ['April', 'May']", "answer": "April", "ques_type": "multi_choice", "choices": ["April", "May"], "code": "# Python code, return answer \nchange_april = abs(-6)  # Water level decreased by 6 inches\nchange_may = abs(4)     # Water level increased by 4 inches\n\n# Determine which month had a greater change in water level\nif change_april > change_may:\n    answer = 'April'\nelse:\n    answer = 'May'\n", "prediction": "April\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbook about Asia | $6\nbook about Antarctica | $8\nbook about Australia | $7\nbook about hiking | $5\nbook about Europe | $7\nbook about cars | $5", "question": "How much money does Percy need to buy a book about hiking and a book about Australia?", "answer": "12", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_hiking = 5 \nprice_australia = 7 \n# Total cost for both books\ntotal_cost = price_hiking + price_australia\nanswer = total_cost\n", "prediction": "12\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | Horizontally | Vertically\n50 photos | 5 | 2\n100 photos | 5 | 5", "question": "Danielle just returned from a spring break volunteer trip. She is shopping for a photo album that will showcase her photos from the trip. The albums range in photo capacity and orientation. What is the probability that a randomly selected photo album holds exactly 100 photos and is oriented vertically? Simplify any fractions.", "answer": "5/17", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total number of albums\ntotal_albums = 2  # 50 photos album and 100 photos album\n\n# Number of albums that hold exactly 100 photos and are oriented vertically\nalbums_100_photos_vertically = 1  # Only one album with 100 photos and vertical orientation\n\n# Calculate the probability\nprobability = albums_100_photos_vertically / total_albums\n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(albums_100_photos_vertically, total_albums).limit_denominator()\n\nanswer = simplified_probability\n", "prediction": "1/2\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nquilt | $35.11\nyellow bath towel | $17.99\npillow | $12.75\nfleece blanket | $14.08\nflannel sheet | $19.47\nbeach blanket | $13.52", "question": "How much more does a fleece blanket cost than a beach blanket?", "answer": "0.56", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_fleece_blanket = 14.08\ncost_beach_blanket = 13.52\n# Calculate the difference in cost\ndifference = cost_fleece_blanket - cost_beach_blanket\nanswer = difference\n", "prediction": "0.5600000000000005\n"}
{"context": "Read the following table regarding \"Temperature at noon\" and then answer a question.\n\nDay | Temperature (\u00c2\u00b0C)\nThursday | 7\nFriday | 10\nSaturday | 5\nSunday | 7\nMonday | 7", "question": "Madelyn graphed the temperature at noon for 5 days. What is the median of the numbers?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ntemperatures = [7, 10, 5, 7, 7]\n# Sort the temperatures to find the median\ntemperatures.sort()\n# Calculate the median\nn = len(temperatures)\nif n % 2 == 1:\n    median = temperatures[n // 2]\nelse:\n    median = (temperatures[n // 2 - 1] + temperatures[n // 2]) / 2\nanswer = median\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$80 | 20,200 | 15,300\n$180 | 15,400 | 17,200\n$280 | 10,600 | 19,100\n$380 | 5,800 | 21,000\n$480 | 1,000 | 22,900", "question": "Look at the table. Then answer the question. At a price of $380, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "surplus", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \n# Quantity demanded and supplied at the price of $380\nquantity_demanded_at_380 = 5800\nquantity_supplied_at_380 = 21000\n\n# Determine if there is a shortage or surplus\nif quantity_demanded_at_380 < quantity_supplied_at_380:\n    answer = 'surplus'\nelse:\n    answer = 'shortage'\n\n", "prediction": "surplus\n"}
{"context": "Read the following table regarding \"Eating macaroni and cheese last month\" and then answer a question.\n\nTimes eaten | Frequency\n0 | 9\n1 | 20\n2 | 5\n3 | 2\n4 | 3\n5 | 15\n6 | 19", "question": "A food manufacturer surveyed consumers about their macaroni and cheese consumption. How many people ate macaroni and cheese more than 1 time?", "answer": "44", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of people eating macaroni and cheese\nfrequency_data = {\n    0: 9,\n    1: 20,\n    2: 5,\n    3: 2,\n    4: 3,\n    5: 15,\n    6: 19\n}\n\n# Calculate the number of people who ate macaroni and cheese more than 1 time\npeople_more_than_one_time = sum(frequency for times, frequency in frequency_data.items() if times > 1)\nanswer = people_more_than_one_time\n", "prediction": "44\n"}
{"context": "Read the following table regarding \"Daily temperatures (\u00b0C)\" and then answer a question.\n\nStem | Leaf \n1 | 1, 1, 2, 2\n2 | 3, 6, 6, 7, 8\n3 | 0, 2, 2, 3, 5, 5\n4 | 1, 3", "question": "For a science fair project, Mackenzie tracked the temperature each day. How many temperature readings were at least 10\u00b0C but less than 18\u00b0C?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of temperature readings from the stem-and-leaf display\ntemperatures = [\n    11, 11, 12, 12,  # From stem 1\n    23, 26, 26, 27, 28,  # From stem 2\n    30, 32, 32, 33, 35, 35,  # From stem 3\n    41, 43  # From stem 4\n]\n\n# Count readings between 10\u00b0C (inclusive) and 18\u00b0C (exclusive)\ncount_readings = sum(1 for temp in temperatures if 10 <= temp < 18)\nanswer = count_readings\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"Paintings per exhibit\" and then answer a question.\n\nStem | Leaf \n1 | 5\n2 | 5, 9\n3 | 0\n4 | \n5 | \n6 | 3, 6", "question": "A museum curator counted the number of paintings in each exhibit at the art museum. How many exhibits have at least 20 paintings but fewer than 50 paintings?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Interpreting the stem-and-leaf display to find exhibits with 20 to 49 paintings\nexhibits_with_paintings = [15, 25, 29, 30, 40, 50, 63, 66]\n\n# Count the number of exhibits with at least 20 and fewer than 50 paintings\ncount_exhibits = len([paintings for paintings in exhibits_with_paintings if 20 <= paintings < 50])\nanswer = count_exhibits\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"Cheese consumption per capita (kg)\" and then answer a question.\n\nCountry | 1996 | 2006\nGermany | 12 | 20\nGreat Britain | 9 | 10\nCanada | 10 | 11\nAustralia | 10 | 10\nArgentina | 11 | 11", "question": "An agricultural agency is researching how much cheese people have been eating in different parts of the world. Which country consumed the most cheese per capita in 2006? Choose from the the options: ['Germany', 'Canada', 'Great Britain', 'Argentina']", "answer": "Germany", "ques_type": "multi_choice", "choices": ["Germany", "Canada", "Great Britain", "Argentina"], "code": "# Python code, return answer \ncheese_consumption_2006 = {\n    'Germany': 20,\n    'Great Britain': 10,\n    'Canada': 11,\n    'Australia': 10,\n    'Argentina': 11\n}\n# Find the country with the most cheese consumption in 2006\nmost_cheese_country = max(cheese_consumption_2006, key=cheese_consumption_2006.get)\nanswer = most_cheese_country\n", "prediction": "Germany\n"}
{"context": "Read the following table regarding \"Math teachers\" and then answer a question.\n\nHigh school | Number of math teachers\nGreen High | 4\nCedar High | 9\nWestside High | 8\nNorthside High | 6\nLincoln High | 10\nHillview High | 8\nMoore High | 8\nRiver High | 9", "question": "The school district compared how many math teachers each high school has. What is the range of the numbers?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of math teachers at each high school\nmath_teachers_counts = [4, 9, 8, 6, 10, 8, 8, 9]\n# Calculate the range\nrange_math_teachers = max(math_teachers_counts) - min(math_teachers_counts)\nanswer = range_math_teachers\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"Company sizes (number of employees)\" and then answer a question.\n\nStem | Leaf \n2 | 8\n3 | 3, 3, 4\n4 | 0, 6, 6, 7, 9\n5 | 1, 2, 8\n6 | 1, 8\n7 | 2, 2, 8, 8\n8 | 2, 9\n9 | 0", "question": "The Springtown Chamber of Commerce researched the number of employees working at local companies. How many companies have less than 89 employees?", "answer": "19", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# We will count the number of companies with less than 89 employees from the stem-and-leaf display.\n\n# Extracting the number of employees from the stem-and-leaf display\ncompany_sizes = [28, 33, 33, 34, 40, 46, 46, 47, 49, 51, 52, 58, 61, 68, 72, 72, 78, 78, 82, 89, 90]\n\n# Counting companies with less than 89 employees\ncount_less_than_89 = sum(1 for size in company_sizes if size < 89)\n\nanswer = count_less_than_89\n", "prediction": "19\n"}
{"context": "Read the following table regarding \"Menu items per restaurant\" and then answer a question.\n\nStem | Leaf \n1 | 6, 9\n2 | \n3 | \n4 | \n5 | 0, 5\n6 | 2\n7 | 4", "question": "A food critic counted the number of menu items at each restaurant in town. What is the largest number of menu items?", "answer": "74", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest number of menu items corresponds to the largest value in the stem-and-leaf display.\nlargest_menu_items = 74  # From the stem \"7 | 4\", the value is 74 items.\nanswer = largest_menu_items\n", "prediction": "74\n"}
{"context": "Read the following table regarding \"Going to the water park last summer\" and then answer a question.\n\nNumber of trips | Frequency\n1 | 12\n2 | 16\n3 | 0\n4 | 5\n5 | 7", "question": "A theme park developer recorded the number of people who visited the local water park last summer. How many people went to the water park at least 3 times?", "answer": "12", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of visits\nfrequency_data = {\n    1: 12,\n    2: 16,\n    3: 0,\n    4: 5,\n    5: 7\n}\n\n# Calculate the number of people who went to the water park at least 3 times\npeople_at_least_3_times = frequency_data[3] + frequency_data[4] + frequency_data[5]\nanswer = people_at_least_3_times\n", "prediction": "12\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ngreen kitchen towel | $2.99\nbeach blanket | $6.89\nnavy blue bath mat | $7.57\nflannel sheet | $7.01\nbeach towel | $6.38", "question": "How much more does a navy blue bath mat cost than a green kitchen towel?", "answer": "4.58", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_navy_bath_mat = 7.57 \ncost_green_kitchen_towel = 2.99 \n# Calculate the difference in cost\ndifference_in_cost = cost_navy_bath_mat - cost_green_kitchen_towel\nanswer = difference_in_cost\n", "prediction": "4.58\n"}
{"context": "Read the following table regarding \"Nobel Prize winners\" and then answer a question.\n\nCountry | 1970s | 1980s\nGermany | 9 | 11\nCanada | 2 | 3\nRussia | 5 | 1\nFrance | 3 | 5", "question": "For an assignment, Stefan looked at which countries got the most Nobel Prizes in various decades. Which country had more Nobel Prize winners in the 1970s, Russia or Germany? Choose from the the options: ['Russia', 'Germany']", "answer": "Germany", "ques_type": "multi_choice", "choices": ["Russia", "Germany"], "code": "# Python code, return answer \n# Nobel Prize winners in the 1970s for each country\nnobel_1970s = {\n    'Germany': 9,\n    'Russia': 5\n}\n# Compare the number of winners\nif nobel_1970s['Germany'] > nobel_1970s['Russia']:\n    answer = 'Germany'\nelse:\n    answer = 'Russia'\n", "prediction": "Germany\n"}
{"context": "Read the following table regarding \"Clubs\" and then answer a question.\n\nName | Number of clubs\nJoseph | 8\nAllie | 7\nEliana | 2\nLeroy | 6\nDavid | 2\nTucker | 7\nXavier | 4", "question": "Some students compared how many clubs they belong to. What is the range of the numbers?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of clubs for each student\nclubs = [8, 7, 2, 6, 2, 7, 4]\n\n# Calculate the range\nrange_of_clubs = max(clubs) - min(clubs)\nanswer = range_of_clubs\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nAfrican safari vacation package | $512\nCaribbean vacation package | $613\nEuropean vacation package | $576\nAustralian vacation package | $849", "question": "How much money does Emmet need to buy 8 European vacation packages and 7 Caribbean vacation packages?", "answer": "8,899", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the vacation packages\neuropean_price = 576\ncaribbean_price = 613\n\n# Number of packages needed\nnum_european = 8\nnum_caribbean = 7\n\n# Total cost calculation\ntotal_cost = (european_price * num_european) + (caribbean_price * num_caribbean)\nanswer = total_cost\n", "prediction": "8899\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nset of dishes | $25.05\nset of forks | $11.35\ncookie jar | $14.36\ncutting board | $10.52\nbaking dish | $15.53\nsoup pot | $67.53", "question": "How much money does Jason need to buy a set of forks and a baking dish?", "answer": "26.88", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_forks = 11.35\nprice_baking_dish = 15.53\n# Calculate the total cost\ntotal_cost = price_forks + price_baking_dish\nanswer = total_cost\n", "prediction": "26.88\n"}
{"context": "Read the following table regarding \"Hours worked\" and then answer a question.\n\nDay | Hours\nThursday | 6\nFriday | 8\nSaturday | 8\nSunday | 8\nMonday | 2\nTuesday | 10\nWednesday | 6", "question": "A waitress kept track of how many hours she worked each day. What is the median of the numbers?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of hours worked each day\nhours_worked = [6, 8, 8, 8, 2, 10, 6]\n\n# Sort the hours to find the median\nhours_worked.sort()\n\n# Calculate the median\nn = len(hours_worked)\nif n % 2 == 1:  # If the number of hours is odd\n    median = hours_worked[n // 2]\nelse:           # If the number of hours is even\n    median = (hours_worked[n // 2 - 1] + hours_worked[n // 2]) / 2\n\nanswer = median\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"Whale watching\" and then answer a question.\n\nWhales spotted | Frequency\n0 | 16\n1 | 17\n2 | 5\n3 | 20\n4 | 14", "question": "An adventure tour company found out how many whales people saw on its most popular whale tour. How many people saw fewer than 3 whales?", "answer": "38", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of people who saw fewer than 3 whales\nfrequency_fewer_than_3 = 16 + 17 + 5  # 0, 1, and 2 whales\nanswer = frequency_fewer_than_3\n", "prediction": "38\n"}
{"context": "Read the following table regarding \"Favorite sandwiches\" and then answer a question.\n\nSandwich | Lower elementary students | Upper elementary students\nCheese | 6 | 16\nHam | 4 | 12\nEgg salad | 19 | 18\nPeanut butter | 16 | 19\nTurkey | 18 | 5", "question": "The school cafeteria asked students about their favorite sandwiches before updating the lunch menu. How many students voted for cheese sandwiches?", "answer": "22", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of students who voted for cheese sandwiches\nlower_elementary_cheese = 6\nupper_elementary_cheese = 16\ntotal_cheese_votes = lower_elementary_cheese + upper_elementary_cheese\nanswer = total_cheese_votes\n", "prediction": "22\n"}
{"context": "Read the following table regarding \"House sales\" and then answer a question.\n\nCity | Number of houses sold\nBriggs Corner | 83\nNew Hamburg | 86\nMelville | 94\nFremont | 92\nLiberty City | 94\nCharles Falls | 89\nPleasant Town | 89\nPennytown | 87", "question": "A real estate agent looked into how many houses were sold in different cities. What is the range of the numbers?", "answer": "11", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nhouses_sold = [83, 86, 94, 92, 94, 89, 89, 87]\n# Calculate the range\nrange_of_houses = max(houses_sold) - min(houses_sold)\nanswer = range_of_houses\n", "prediction": "11\n"}
{"context": "Read the following table regarding \"Zoo schedule\" and then answer a question.\n\nEvent | Begin | End\ngiraffe feeding | 10:00 A.M. | 11:05 A.M.\nbear lecture | 11:40 A.M. | 12:30 P.M.\ninsect show | 1:10 P.M. | 1:40 P.M.\nkoala feeding | 2:10 P.M. | 2:40 P.M.\nreptile show | 3:10 P.M. | 4:00 P.M.\ntiger lecture | 3:30 P.M. | 4:50 P.M.\nbird show | 5:40 P.M. | 6:25 P.M.", "question": "Look at the following schedule. When does the koala feeding begin? Choose from the the options: ['3:10 P.M.', '1:10 P.M.', '2:10 P.M.', '5:40 P.M.']", "answer": "2:10 P.M.", "ques_type": "multi_choice", "choices": ["3:10 P.M.", "1:10 P.M.", "2:10 P.M.", "5:40 P.M."], "code": "# Python code, return answer \n# The start time for the koala feeding event\nkoala_feeding_start_time = '2:10 P.M.'\nanswer = koala_feeding_start_time\n", "prediction": "2:10 P.M.\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nMixture | Temperature (\u00b0C)\nBromine mixture | -4\nAcetone mixture | 5", "question": "In science class, Alana is measuring the temperature of different chemical mixtures. The temperatures of two mixtures are shown in the table. Which mixture's temperature is closest to zero? Choose from the the options: ['bromine mixture', 'acetone mixture']", "answer": "bromine mixture", "ques_type": "multi_choice", "choices": ["bromine mixture", "acetone mixture"], "code": "# Python code, return answer \nbromine_temp = -4 \nacetone_temp = 5 \n\n# Calculate the absolute distances to zero\ndistance_bromine = abs(bromine_temp)\ndistance_acetone = abs(acetone_temp)\n\n# Determine which mixture is closest to zero\nif distance_bromine < distance_acetone:\n    answer = 'bromine mixture'\nelse:\n    answer = 'acetone mixture'\n\n", "prediction": "bromine mixture\n"}
{"context": "Read the following table regarding \"Donations received\" and then answer a question.\n\nCause | May | June\nMedical research | $16 | $8\nAnimals | $13 | $8\nHunger | $12 | $10\nParks | $8 | $10", "question": "A county agency recorded the money donated to several charitable causes over time. How much money was raised for animals in May?", "answer": "13", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Amount donated for animals in May\ndonation_animals_may = 13\nanswer = donation_animals_may\n", "prediction": "13\n"}
{"context": "Read the following table regarding \"Donations\" and then answer a question.\n\nPerson | Clean water | Animal rights\nIsaiah | $12 | $5\nLiam | $4 | $10\nBridget | $16 | $9\nAnne | $19 | $18", "question": "A philanthropic organization compared the amounts of money that its members donated to certain causes. How much more money did Anne donate to clean water than Bridget?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Donations for clean water\nanne_donation = 19 \nbridget_donation = 16 \n# Calculate the difference in donations\ndifference = anne_donation - bridget_donation\nanswer = difference\n", "prediction": "3\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nrainbow key chain | $0.75\npumpkin key chain | $0.98\npiano key chain | $0.84\npuppy key chain | $0.94\nglobe key chain | $0.80\nhorse key chain | $0.68", "question": "How much money does Vijay need to buy a piano key chain and a pumpkin key chain?", "answer": "1.82", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the key chains\nprice_piano_key_chain = 0.84\nprice_pumpkin_key_chain = 0.98\n# Total cost for both key chains\ntotal_cost = price_piano_key_chain + price_pumpkin_key_chain\nanswer = total_cost\n", "prediction": "1.8199999999999998\n"}
{"context": "Read the following table regarding \"Bus schedule\" and then answer a question.\n\nthe mall | 9:45 A.M. | 10:00 A.M. | 10:30 A.M. | 11:00 A.M.\nthe post office | 10:45 A.M. | 11:00 A.M. | 11:30 A.M. | 12:00 P.M.\nthe school | 11:45 A.M. | 12:00 P.M. | 12:30 P.M. | 1:00 P.M.\nthe playground | 12:30 P.M. | 12:45 P.M. | 1:15 P.M. | 1:45 P.M.\nthe library | 1:00 P.M. | 1:15 P.M. | 1:45 P.M. | 2:15 P.M.", "question": "Look at the following schedule. Jayla got on the bus at the mall at 10.30 A.M. What time will she get to the playground? Choose from the the options: ['1:15 P.M.', '1:45 P.M.', '11:00 A.M.', '10:45 A.M.']", "answer": "1:15 P.M.", "ques_type": "multi_choice", "choices": ["1:15 P.M.", "1:45 P.M.", "11:00 A.M.", "10:45 A.M."], "code": "# Python code, return answer\n# From the table, we can analyze the bus schedule.\n# Jayla gets on the bus at the mall at 10:30 A.M.\n# The next bus schedule is:\n# 10:30 A.M. from the mall takes her to the post office\n# The post office bus at 11:00 A.M. takes her to the school\n# From the school, the next bus at 12:30 P.M. goes to the playground\n\n# Therefore, the complete journey is:\n# 10:30 A.M. mall -> 10:45 A.M. post office (15 min)\n# 11:00 A.M. post office -> 11:30 A.M. school (30 min)\n# Wait at the school until 12:30 P.M.\n# 12:30 P.M. school -> 1:15 P.M. playground\n\narrival_time_playground = '1:15 P.M.'\nanswer = arrival_time_playground\n", "prediction": "1:15 P.M.\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nblackberry jam | $2/kilogram\nmarmalade | $2/kilogram\napple butter | $3/kilogram\nboysenberry jam | $3/kilogram", "question": "Emmett went to the store and bought 1.4 kilograms of marmalade. How much did he spend?", "answer": "2.80", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_kilogram_marmalade = 2 \nkilograms_bought = 1.4 \n# Calculate total cost\ntotal_cost = price_per_kilogram_marmalade * kilograms_bought\nanswer = total_cost\n", "prediction": "2.8\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n7 | 17\n8 | 10\n9 | 5", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "nonlinear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the differences in y-values for equal differences in x-values.\nx_values = [7, 8, 9]\ny_values = [17, 10, 5]\n\n# Calculate the differences\ndifferences = [y_values[i+1] - y_values[i] for i in range(len(y_values)-1)]\n# Check if the differences are constant\nis_linear = all(difference == differences[0] for difference in differences)\n\nanswer = 'linear' if is_linear else 'nonlinear'\n", "prediction": "NameError(\"name 'y_values' is not defined\")"}
{"context": "Read the following table regarding \"Hotel shuttle bus schedule\" and then answer a question.\n\namusement park | 9:45 A.M. | 10:00 A.M. | 10:15 A.M. | 10:30 A.M. | 11:00 A.M.\ncollege campus | 10:45 A.M. | 11:00 A.M. | 11:15 A.M. | 11:30 A.M. | 12:00 P.M.\nart museum | 11:45 A.M. | 12:00 P.M. | 12:15 P.M. | 12:30 P.M. | 1:00 P.M.\nairport | 12:15 P.M. | 12:30 P.M. | 12:45 P.M. | 1:00 P.M. | 1:30 P.M.\npark | 1:00 P.M. | 1:15 P.M. | 1:30 P.M. | 1:45 P.M. | 2:15 P.M.", "question": "Look at the following schedule. Rick just missed the 10.00 A.M. bus at the amusement park. How long does he have to wait until the next bus? Choose from the the options: ['45 minutes', '15 minutes', '1 hour', '30 minutes']", "answer": "15 minutes", "ques_type": "multi_choice", "choices": ["45 minutes", "15 minutes", "1 hour", "30 minutes"], "code": "# Python code, return answer \n# Rick just missed the 10:00 A.M. bus, so the next bus is at 10:15 A.M.\nnext_bus_time = \"10:15 A.M.\"\n# Time difference between 10:00 A.M. and 10:15 A.M. is 15 minutes\nwait_time_minutes = 15\nanswer = f\"{wait_time_minutes} minutes\"\n", "prediction": "15 minutes\n"}
{"context": "Read the following table regarding \"Trips to the park last week\" and then answer a question.\n\nNumber of trips | Frequency\n0 | 17\n1 | 5\n2 | 16\n3 | 4", "question": "Some students in a biology class compared how many times they went to the park last week to work on their plant research projects. How many students went to the park fewer than 2 times?", "answer": "22", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of students going to the park\nfrequency = {\n    0: 17,\n    1: 5,\n    2: 16,\n    3: 4\n}\n# Calculate the number of students who went to the park fewer than 2 times\nstudents_fewer_than_2_times = frequency[0] + frequency[1]\nanswer = students_fewer_than_2_times\n", "prediction": "22\n"}
{"context": "Read the following table regarding \"Years of teaching\" and then answer a question.\n\nTeacher | Number of years\nMr. Nakamura | 9\nMiss Torres | 11\nMr. Perez | 11\nMr. Park | 10\nMiss Watson | 9\nMrs. Ramirez | 9\nMs. Chan | 2\nMiss Lim | 11", "question": "Some teachers compared how many years they have been teaching. What is the mean of the numbers?", "answer": "9", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of years of teaching for each teacher\nyears_of_teaching = [9, 11, 11, 10, 9, 9, 2, 11]\n# Calculate the mean\nmean_years = sum(years_of_teaching) / len(years_of_teaching)\nanswer = mean_years\n", "prediction": "9.0\n"}
{"context": "Read the following table regarding \"Smoothies sold\" and then answer a question.\n\nDay | Number of smoothies\nSunday | 69\nMonday | 64\nTuesday | 61\nWednesday | 65", "question": "A juice shop tracked how many smoothies it sold in the past 4 days. On which day did the shop sell the most smoothies? Choose from the the options: ['Sunday', 'Monday', 'Tuesday', 'Wednesday']", "answer": "Sunday", "ques_type": "multi_choice", "choices": ["Sunday", "Monday", "Tuesday", "Wednesday"], "code": "# Python code, return answer \nsmoothies_sold = {\n    'Sunday': 69,\n    'Monday': 64,\n    'Tuesday': 61,\n    'Wednesday': 65\n}\n# Find the day with the most smoothies sold\nmost_smoothies_day = max(smoothies_sold, key=smoothies_sold.get)\nanswer = most_smoothies_day\n", "prediction": "Sunday\n"}
{"context": "Read the following table regarding \"Test scores\" and then answer a question.\n\nStem | Leaf \n2 | 4, 8\n3 | \n4 | 3\n5 | 1, 2\n6 | \n7 | 0\n8 | 4, 8, 8\n9 | 0", "question": "Principal Crawford reported the state test scores from some students at her school. How many students scored exactly 48 points?", "answer": "0", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# From the stem-and-leaf display, \"4 | 8\" indicates a score of 48 points.\n# Since there is one '8' in the leaf for stem '4', there is exactly one student with a score of 48.\nnumber_of_students_scoring_48 = 1\nanswer = number_of_students_scoring_48\n", "prediction": "1\n"}
{"context": "Read the following table regarding \"Straight-A students\" and then answer a question.\n\nYear | Students\n2016 | 12\n2017 | 22\n2018 | 21\n2019 | 25\n2020 | 23", "question": "A school administrator who was concerned about grade inflation looked over the number of straight-A students from year to year. According to the table, what was the rate of change between 2019 and 2020?", "answer": "-2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of straight-A students in 2019 and 2020\nstudents_2019 = 25\nstudents_2020 = 23\n# Calculate the rate of change\nrate_of_change = students_2020 - students_2019\nanswer = rate_of_change\n", "prediction": "-2\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nEmployee | Pay period |\nIsabel Jordan | October 1-15 |\nTotal earnings | | $2,100.00\nFederal income tax | $295.00 |\nState income tax | $121.59 |\nOther taxes | $160.60 |\nTotal taxes | | ?\nPay after taxes | | ?", "question": "Look at Isabel's pay stub. Isabel lives in a state that has state income tax. How much did Isabel make after taxes?", "answer": "1,522.81", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Given amounts\ntotal_earnings = 2100.00\nfederal_income_tax = 295.00\nstate_income_tax = 121.59\nother_taxes = 160.60\n\n# Total taxes calculated by summing individual taxes\ntotal_taxes = federal_income_tax + state_income_tax + other_taxes\n\n# Calculate pay after taxes\npay_after_taxes = total_earnings - total_taxes\nanswer = pay_after_taxes\n", "prediction": "1522.81\n"}
{"context": "Read the following table regarding \"School picnic schedule\" and then answer a question.\n\nEvent | Begin | End\nsoftball game | 10:15 A.M. | 11:00 A.M.\npie-eating contest | 11:15 A.M. | 12:10 P.M.\nsoccer game | 12:25 P.M. | 12:55 P.M.\ndance competition | 12:35 P.M. | 1:35 P.M.\nswimming competition | 1:30 P.M. | 2:05 P.M.\nobstacle course | 2:05 P.M. | 2:45 P.M.\nlunch | 2:50 P.M. | 3:15 P.M.", "question": "Look at the following schedule. Which event ends at 1.35 P.M.? Choose from the the options: ['soccer game', 'dance competition', 'obstacle course', 'swimming competition']", "answer": "dance competition", "ques_type": "multi_choice", "choices": ["soccer game", "dance competition", "obstacle course", "swimming competition"], "code": "# Python code, return answer \n# Define the events and their end times\nevents = {\n    'softball game': '11:00 A.M.',\n    'pie-eating contest': '12:10 P.M.',\n    'soccer game': '12:55 P.M.',\n    'dance competition': '1:35 P.M.',\n    'swimming competition': '2:05 P.M.',\n    'obstacle course': '2:45 P.M.',\n    'lunch': '3:15 P.M.'\n}\n\n# Find the event that ends at 1:35 P.M.\nevent_ending_at_135 = [event for event, end_time in events.items() if end_time == '1:35 P.M.']\nanswer = event_ending_at_135[0]  # there should only be one event\n", "prediction": "dance competition\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nshiny metal bead | $0.16\ntiny gold bead | $0.15\nbrown cat's eye bead | $0.95\nshiny red bead | $0.77\noval turquoise bead | $0.75", "question": "Pedro has $1.00. Does he have enough to buy a tiny gold bead and a brown cat's eye bead? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# Prices of the beads\nprice_tiny_gold_bead = 0.15\nprice_brown_cats_eye_bead = 0.95\n# Total cost of the beads\ntotal_cost = price_tiny_gold_bead + price_brown_cats_eye_bead\n# Pedro's budget\nbudget = 1.00\n# Determine if Pedro has enough money\nif total_cost <= budget:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"Tour bus schedule\" and then answer a question.\n\nskyscraper | 9:30 A.M. | 10:15 A.M. | 10:45 A.M.\ndowntown | 10:30 A.M. | 11:15 A.M. | 11:45 A.M.\ncity hall | 11:15 A.M. | 12:00 P.M. | 12:30 P.M.\nart museum | 12:15 P.M. | 1:00 P.M. | 1:30 P.M.\nthe zoo | 1:15 P.M. | 2:00 P.M. | 2:30 P.M.", "question": "Look at the following schedule. Sharon got on the bus at downtown at 11.45 A.M. What time will she get to the art museum? Choose from the the options: ['1:30 P.M.', '12:30 P.M.', '1:15 P.M.', '12:15 P.M.']", "answer": "1:30 P.M.", "ques_type": "multi_choice", "choices": ["1:30 P.M.", "12:30 P.M.", "1:15 P.M.", "12:15 P.M."], "code": "# Python code, return answer \n# Sharon gets on the bus at downtown at 11:45 A.M. and needs to reach art museum.\n# Based on the schedule:\n# From downtown to city hall: 11:45 A.M. to 12:00 P.M.\n# From city hall to art museum: 12:15 P.M. (next available bus after city hall)\nanswer = '12:15 P.M.'\n", "prediction": "12:15 P.M.\n"}
{"context": "Read the following table regarding \"Time Ronald spent on homework\" and then answer a question.\n\nDay | Minutes\nTuesday | 34\nWednesday | 36\nThursday | 45\nFriday | 40\nSaturday | 41", "question": "Ronald kept track of how long it took to finish his homework each day. According to the table, what was the rate of change between Friday and Saturday?", "answer": "1", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Minutes spent on homework\nfriday_minutes = 40\nsaturday_minutes = 41\n\n# Rate of change calculation\nrate_of_change = saturday_minutes - friday_minutes\nanswer = rate_of_change\n", "prediction": "1\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of ponds | Number of frogs\n1 | 5\n2 | 10\n3 | 15\n4 | ?", "question": "Each pond has 5 frogs. How many frogs are in 4 ponds?", "answer": "20", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of ponds\nnumber_of_ponds = 4\n# Number of frogs per pond\nfrogs_per_pond = 5\n# Calculate the total number of frogs\ntotal_frogs = number_of_ponds * frogs_per_pond\nanswer = total_frogs\n", "prediction": "20\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\noyster mushrooms | $18/pound\ncrimini mushrooms | $5/pound\nchanterelle mushrooms | $16/pound\nportobello mushrooms | $9/pound\nstraw mushrooms | $9/pound", "question": "Maya went to the store. She bought 2 pounds of oyster mushrooms and 3 pounds of chanterelle mushrooms. How much did she spend?", "answer": "84", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices per pound\nprice_per_pound_oyster = 18\nprice_per_pound_chanterelle = 16\n\n# Amounts bought\npounds_oyster = 2\npounds_chanterelle = 3\n\n# Total cost calculation\ntotal_cost = (price_per_pound_oyster * pounds_oyster) + (price_per_pound_chanterelle * pounds_chanterelle)\nanswer = total_cost\n", "prediction": "84\n"}
{"context": "Read the following table regarding \"Games won by the Weston baseball team\" and then answer a question.\n\nYear | Games won\n2011 | 38\n2012 | 46\n2013 | 38\n2014 | 40\n2015 | 39", "question": "Fans of the Weston baseball team compared the number of games won by their team each year. According to the table, what was the rate of change between 2013 and 2014?", "answer": "2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Games won in 2013 and 2014\ngames_won_2013 = 38\ngames_won_2014 = 40\n\n# Rate of change calculation\nrate_of_change = games_won_2014 - games_won_2013\nanswer = rate_of_change\n", "prediction": "2\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nranch popcorn | $1.14 per kg\nkettle corn | $1.22 per kg\nchocolate popcorn | $0.45 per kg\nParmesan popcorn | $1.34 per kg\ncheddar popcorn | $1.63 per kg", "question": "What is the total cost for 3 kilograms of cheddar popcorn?", "answer": "4.89", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_kilogram_cheddar = 1.63 \nkilograms_bought = 3 \ntotal_cost = price_per_kilogram_cheddar * kilograms_bought\nanswer = total_cost\n", "prediction": "4.89\n"}
{"context": "Read the following table regarding \"Books per shelf\" and then answer a question.\n\nStem | Leaf \n2 | 2\n3 | 0, 1, 3, 3, 5, 6, 8, 8\n4 | 4\n5 | 4, 7, 7\n6 | 6\n7 | 6, 6", "question": "The librarian at the public library counted the number of books on each shelf. What is the largest number of books?", "answer": "76", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest number of books corresponds to the largest value in the stem-and-leaf display.\nlargest_books = 76  # From the stem \"7 | 6, 6\", the largest value is 76.\nanswer = largest_books\n", "prediction": "76\n"}
{"context": "Read the following table regarding \"Winning relay times\" and then answer a question.\n\nYear | Winning time (minutes)\n2016 | 29\n2017 | 23\n2018 | 26\n2019 | 41\n2020 | 31", "question": "Every year Greenwood has a citywide relay and reports the winning times. According to the table, what was the rate of change between 2017 and 2018?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Winning times for the specified years\ntime_2017 = 23 \ntime_2018 = 26 \n# Calculate the rate of change\nrate_of_change = time_2018 - time_2017\nanswer = rate_of_change\n", "prediction": "3\n"}
{"context": "Read the following table regarding \"Games won by Kendra's soccer team\" and then answer a question.\n\nYear | Games won\n2008 | 15\n2009 | 19\n2010 | 18\n2011 | 11\n2012 | 17", "question": "Kendra kept track of the number of games her soccer team won each year. According to the table, what was the rate of change between 2010 and 2011?", "answer": "-7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Games won in 2010 and 2011\ngames_won_2010 = 18\ngames_won_2011 = 11\n\n# Calculate the rate of change\nrate_of_change = games_won_2011 - games_won_2010\nanswer = rate_of_change\n", "prediction": "-7\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of vases | Number of poppies\n1 | 5\n2 | 10\n3 | ?", "question": "Each vase has 5 poppies. How many poppies are in 3 vases?", "answer": "15", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of vases\nnumber_of_vases = 3\n# Each vase has 5 poppies\npoppies_per_vase = 5\n# Total poppies in 3 vases\ntotal_poppies = number_of_vases * poppies_per_vase\nanswer = total_poppies\n", "prediction": "15\n"}
{"context": "Read the following table regarding \"Photographs taken\" and then answer a question.\n\nDay | Number of photographs\nWednesday | 1\nThursday | 10\nFriday | 10\nSaturday | 8\nSunday | 7", "question": "Carla looked at the dates of the digital photos on her computer to find out how many she had taken in the past 5 days. What is the range of the numbers?", "answer": "9", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of photographs taken each day\nphotographs = [1, 10, 10, 8, 7]\n\n# Calculate the range\nrange_photographs = max(photographs) - min(photographs)\nanswer = range_photographs\n", "prediction": "9\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | Displeased | Pleased\nA Footlong shoe | 3 | 7\nA Toes Knows shoe | 2 | 6", "question": "A wilderness retail store asked a consulting company to do an analysis of their hiking shoe customers. The consulting company gathered data from each customer that purchased hiking shoes, and recorded the shoe brand and the customer's level of happiness. What is the probability that a randomly selected customer purchased a Footlong shoe and is pleased? Simplify any fractions.", "answer": "7/18", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total customers who purchased Footlong shoes\nfootlong_pleased = 7\nfootlong_displeased = 3\ntotal_footlong = footlong_pleased + footlong_displeased\n\n# Total customers who purchased shoes of both brands\ntoes_knows_pleased = 6\ntoes_knows_displeased = 2\ntotal_toes_knows = toes_knows_pleased + toes_knows_displeased\n\ntotal_customers = total_footlong + total_toes_knows\n\n# Probability of a randomly selected customer who purchased a Footlong shoe and is pleased\nprobability_footlong_pleased = footlong_pleased / total_customers\n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(footlong_pleased, total_customers).limit_denominator()\nanswer = simplified_probability\n", "prediction": "7/18\n"}
{"context": "Read the following table regarding \"Vehicle sales\" and then answer a question.\n\nDealership | Number of vehicles\nBen's Used Cars | 856\nTruck City | 392\nLedbetter Auto Mall | 653\nAffordable Cars | 615", "question": "Some dealerships compared their vehicle sales. In all, how many vehicles did Ben's Used Cars and Affordable Cars sell?", "answer": "1,471", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of vehicles sold by each dealership\nbens_used_cars = 856\naffordable_cars = 615\n# Total vehicles sold by Ben's Used Cars and Affordable Cars\ntotal_vehicles_sold = bens_used_cars + affordable_cars\nanswer = total_vehicles_sold\n", "prediction": "1471\n"}
{"context": "Read the following table regarding \"Miles driven by truck drivers\" and then answer a question.\n\nName | Miles\nEvelyn | 6,746\nShelby | 2,572\nZoe | 5,207", "question": "Some truck drivers wrote down how far they each drove in the past month. How many more miles did Evelyn drive than Zoe?", "answer": "1,539", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nevelyn_miles = 6746\nzoe_miles = 5207\n# Calculate the difference in miles driven by Evelyn and Zoe\ndifference_miles = evelyn_miles - zoe_miles\nanswer = difference_miles\n", "prediction": "1539\n"}
{"context": "Read the following table regarding \"Technical assistance wait times (minutes)\" and then answer a question.\n\nStem | Leaf \n0 | 3, 5\n1 | 9\n2 | 4, 6\n3 | \n4 | 9\n5 | 6\n6 | 1, 5, 5, 8\n7 | 2, 5, 5, 5, 7\n8 | 6", "question": "A Technical Assistance Manager monitored his customers' wait times. How many people waited for less than 60 minutes?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The wait times can be extracted from the stem-and-leaf display.\nwait_times = [3, 5, 19, 24, 26, 49, 56, 61, 65, 65, 68, 72, 75, 75, 75, 77, 86]  # Listing all the wait times based on the stem and leaf.\n# Count how many waited for less than 60 minutes\ncount_less_than_60 = sum(1 for time in wait_times if time < 60)\nanswer = count_less_than_60\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"Grocery stores in each town\" and then answer a question.\n\nTown | Number of stores\nMarion | 4\nGreenwood | 4\nMayfield | 3\nColumbia | 6\nChesterton | 6\nRiverside | 6\nSpringfield | 2\nWatertown | 9", "question": "A newspaper researched how many grocery stores there are in each town. What is the mean of the numbers?", "answer": "5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of grocery stores in each town\nstores = [4, 4, 3, 6, 6, 6, 2, 9]\n# Calculate the mean\nmean_stores = sum(stores) / len(stores)\nanswer = mean_stores\n", "prediction": "5.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n18 | 2\n7 | 15\n7 | 16\n7 | 19", "question": "Look at this table. Is this relation a function? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# A relation is a function if each input (x value) is associated with exactly one output (y value).\n# We will check if any x value is associated with more than one y value.\nx_values = [18, 7, 7, 7]\ny_values = [2, 15, 16, 19]\n\n# Create a dictionary to track unique x to y mappings\nx_to_y = {}\n\nfor x, y in zip(x_values, y_values):\n    if x in x_to_y:\n        x_to_y[x].append(y)\n    else:\n        x_to_y[x] = [y]\n\n# Determine if the relation is a function\nis_function = all(len(y_list) == 1 for y_list in x_to_y.values())\n\nanswer = 'yes' if is_function else 'no'\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"Train schedule\" and then answer a question.\n\nPleasant River Campground | 2:30 A.M. | 10:15 A.M. | 12:00 A.M.\nMagician Village | 3:15 A.M. | 11:00 A.M. | 12:45 A.M.\nSkyscraper City | 3:45 A.M. | 11:30 A.M. | 1:15 A.M.\nComfy Pillows Resort | 4:30 A.M. | 12:15 P.M. | 2:00 A.M.\nHappy Cow Farm | 5:00 A.M. | 12:45 P.M. | 2:30 A.M.\nSnowy Mountain | 6:00 A.M. | 1:45 P.M. | 3:30 A.M.\nRocky Ravine Town | 6:30 A.M. | 2:15 P.M. | 4:00 A.M.\nCity of Green Trees | 7:00 A.M. | 2:45 P.M. | 4:30 A.M.", "question": "Look at the following schedule. Tyrone just missed the 3.45 A.M. train at Skyscraper City. What time is the next train? Choose from the the options: ['2:15 P.M.', '3:45 A.M.', '1:15 A.M.', '11:30 A.M.']", "answer": "11:30 A.M.", "ques_type": "multi_choice", "choices": ["2:15 P.M.", "3:45 A.M.", "1:15 A.M.", "11:30 A.M."], "code": "# Python code, return answer \n# The next train after 3:45 A.M. at Skyscraper City is at 11:30 A.M.\nnext_train_time = \"11:30 A.M.\"\nanswer = next_train_time\n", "prediction": "11:30 A.M.\n"}
{"context": "Read the following table regarding \"Midterm exam scores\" and then answer a question.\n\nStem | Leaf \n2 | 2, 4\n3 | 2, 9\n4 | 1, 7\n5 | 3, 4, 6, 7\n6 | 0, 1, 2, 7\n7 | 0\n8 | 1, 4, 9", "question": "Professor Wiley informed his students of their scores on the midterm exam. How many students scored at least 20 points but fewer than 90 points?", "answer": "18", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Constructing the scores from the stem-and-leaf display\nscores = [22, 24, 32, 39, 41, 47, 53, 54, 56, 57, 60, 61, 62, 67, 70, 81, 84, 89]\n# Count how many scored at least 20 but fewer than 90\ncount_students = sum(1 for score in scores if 20 <= score < 90)\nanswer = count_students\n", "prediction": "18\n"}
{"context": "Read the following table regarding \"Hockey games won by Union High\" and then answer a question.\n\nYear | Games won\n2007 | 13\n2008 | 10\n2009 | 20\n2010 | 20\n2011 | 12", "question": "A pair of Union High School hockey fans counted the number of games won by the school each year. According to the table, what was the rate of change between 2009 and 2010?", "answer": "0", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of games won in 2009 and 2010\ngames_won_2009 = 20\ngames_won_2010 = 20\n\n# Calculate the rate of change between 2009 and 2010\nrate_of_change = games_won_2010 - games_won_2009\nanswer = rate_of_change\n", "prediction": "0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nsilver coat rack | $88.00\ncrystal sculpture | $85.00\ncrystal vase | $51.00\nchandelier | $50.00", "question": "Emmett has $172.00. Does he have enough to buy a silver coat rack and a crystal sculpture? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \nsilver_coat_rack_price = 88.00\ncrystal_sculpture_price = 85.00\ntotal_cost = silver_coat_rack_price + crystal_sculpture_price\nemmett_money = 172.00\n\nif emmett_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"Fire hydrants\" and then answer a question.\n\nStreet | Number of hydrants\nMaple Street | 6\nCedar Street | 5\nFir Street | 4\nOak Street | 4\nPine Street | 6\nRose Street | 5\nAspen Street | 7", "question": "The city recorded how many fire hydrants there are on each street. What is the median of the numbers?", "answer": "5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of hydrants on each street\nhydrants = [6, 5, 4, 4, 6, 5, 7]\n\n# Sort the list to find the median\nhydrants.sort()\n\n# Calculate the median\nn = len(hydrants)\nif n % 2 == 0:\n    median = (hydrants[n // 2 - 1] + hydrants[n // 2]) / 2\nelse:\n    median = hydrants[n // 2]\n\nanswer = median\n", "prediction": "5\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nstandard paper clips | $4.39/lb\nsmall binder clips | $4.37/lb\ncolored paper clips | $5.20/lb\nlarge binder clips | $5.31/lb\nmedium binder clips | $4.25/lb", "question": "If Joel buys 5 pounds of large binder clips and 2 pounds of standard paper clips, how much will he spend?", "answer": "35.33", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices per pound\nprice_large_binder_clips = 5.31 \nprice_standard_paper_clips = 4.39 \n\n# Quantities\npounds_large_binder_clips = 5 \npounds_standard_paper_clips = 2 \n\n# Total cost calculation\ntotal_cost = (price_large_binder_clips * pounds_large_binder_clips) + (price_standard_paper_clips * pounds_standard_paper_clips)\nanswer = total_cost\n", "prediction": "35.33\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nOption | Change in phone price\nAdd an upgrade | $60\nBuy a used phone | -$75", "question": "Lena is looking at the price of new cell phones online. Her favorite company, OrangeTech, has a special this weekend. Lena can add an upgrade to a phone for an additional cost, or she can buy a used phone to get a discount. The change in price for each option is shown in the table. Which option results in a greater change in price? Choose from the the options: ['adding an upgrade', 'buying a used phone']", "answer": "buying a used phone", "ques_type": "multi_choice", "choices": ["adding an upgrade", "buying a used phone"], "code": "# Python code, return answer \nchange_upgrade = 60 \nchange_used_phone = -75 \n# Compare the changes in price (considering the discount)\nif change_upgrade > abs(change_used_phone): \n    answer = 'adding an upgrade'\nelse:\n    answer = 'buying a used phone'\n", "prediction": "buying a used phone\n"}
{"context": "Read the following table regarding \"Zoo ticket prices\" and then answer a question.\n\nZoo | Adult | Child\nAtlanta | $19 | $14\nBronx | $15 | $11\nSouthern Nevada | $8 | $6", "question": "Dr. Brennan, a zoo director, researched ticket prices at other zoos around the country. How much does a child ticket to the Southern Nevada Zoo cost?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The cost of a child ticket to the Southern Nevada Zoo\nchild_ticket_southern_nevada = 6\nanswer = child_ticket_southern_nevada\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nsawdust | $4 per lb\nsand | $5 per lb\ncement | $4 per lb\nbark | $5 per lb\nmulch | $4 per lb", "question": "Gwen bought 4 pounds of sawdust and 2 pounds of bark. How much did she spend?", "answer": "26", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_lb_sawdust = 4  # price per pound of sawdust\nprice_per_lb_bark = 5      # price per pound of bark\npounds_sawdust = 4          # pounds of sawdust purchased\npounds_bark = 2             # pounds of bark purchased\n\n# Calculate total cost\ntotal_cost = (price_per_lb_sawdust * pounds_sawdust) + (price_per_lb_bark * pounds_bark)\nanswer = total_cost\n", "prediction": "26\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\norange agate | $0.04\npiece of green slate | $0.02\npiece of copper | $0.09\nyellow tiger's eye | $0.06\npiece of rose quartz | $0.06", "question": "How much money does Evelyn need to buy a piece of rose quartz and a piece of copper?", "answer": "0.15", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_rose_quartz = 0.06 \nprice_copper = 0.09 \n# Total cost for both items\ntotal_cost = price_rose_quartz + price_copper\nanswer = total_cost\n", "prediction": "0.15\n"}
{"context": "Read the following table regarding \"Gymnastics meet schedule\" and then answer a question.\n\nEvent | Begin | End\nwomen's floor exercise | 10:05 A.M. | 10:45 A.M.\nmen's vault | 10:35 A.M. | 11:20 A.M.\nmen's rings | 11:25 A.M. | 12:20 P.M.\nmen's parallel bars | 12:15 P.M. | 12:55 P.M.\nwomen's balance beam | 12:35 P.M. | 1:05 P.M.\nwomen's uneven bars | 12:50 P.M. | 1:15 P.M.\nmen's high bar | 1:00 P.M. | 1:30 P.M.\nwomen's vault | 1:45 P.M. | 2:10 P.M.\nmen's pommel horse | 2:20 P.M. | 2:45 P.M.\nmen's floor exercise | 2:40 P.M. | 3:30 P.M.", "question": "Look at the following schedule. Which event ends at 2.45 P.M.? Choose from the the options: [\"men's vault event\", \"men's parallel bars event\", \"men's pommel horse event\", \"women's vault event\"]", "answer": "men's pommel horse event", "ques_type": "multi_choice", "choices": ["men's vault event", "men's parallel bars event", "men's pommel horse event", "women's vault event"], "code": "# Python code, return answer \n# Check the end times of the events\nevent_end_times = {\n    \"women's floor exercise\": \"10:45 A.M.\",\n    \"men's vault\": \"11:20 A.M.\",\n    \"men's rings\": \"12:20 P.M.\",\n    \"men's parallel bars\": \"12:55 P.M.\",\n    \"women's balance beam\": \"1:05 P.M.\",\n    \"women's uneven bars\": \"1:15 P.M.\",\n    \"men's high bar\": \"1:30 P.M.\",\n    \"women's vault\": \"2:10 P.M.\",\n    \"men's pommel horse\": \"2:45 P.M.\",\n    \"men's floor exercise\": \"3:30 P.M.\"\n}\n\n# Find the event that ends at 2:45 P.M.\nevent_ending_at_245 = [event for event, end_time in event_end_times.items() if end_time == \"2:45 P.M.\"]\nanswer = event_ending_at_245[0] if event_ending_at_245 else None\n", "prediction": "men's pommel horse\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$230 | 11,700 | 2,600\n$380 | 10,200 | 6,600\n$530 | 8,700 | 10,600\n$680 | 7,200 | 14,600\n$830 | 5,700 | 18,600", "question": "Look at the table. Then answer the question. At a price of $530, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "surplus", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \n# Quantity demanded and supplied at the price of $530\nquantity_demanded = 8700\nquantity_supplied = 10600\n\n# Determine if there is a shortage or surplus\nif quantity_demanded < quantity_supplied:\n    answer = 'surplus'\nelse:\n    answer = 'shortage'\n\n", "prediction": "surplus\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npurple T-shirt | $8\npair of white socks | $6\norange T-shirt | $2\nblack skirt | $3", "question": "How much money does Jessica need to buy a purple T-shirt and an orange T-shirt?", "answer": "10", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_purple_tshirt = 8\nprice_orange_tshirt = 2\n# Calculate total cost\ntotal_cost = price_purple_tshirt + price_orange_tshirt\nanswer = total_cost\n", "prediction": "10\n"}
{"context": "Read the following table regarding \"Minutes spent rehearsing\" and then answer a question.\n\nDay | Minutes\nWednesday | 68\nThursday | 66\nFriday | 67\nSaturday | 67\nSunday | 77", "question": "Franco recalled how many minutes he had spent at theater rehearsal in the past 5 days. What is the mean of the numbers?", "answer": "69", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Minutes spent rehearsing over the past 5 days\nminutes = [66, 67, 67, 77]  # Exclude Wednesday's 68\n# Calculate the mean\nmean_minutes = sum(minutes) / len(minutes)\nanswer = mean_minutes\n", "prediction": "69.25\n"}
{"context": "Read the following table regarding \"Radio listeners\" and then answer a question.\n\nMonth | Number of listeners\nApril | 6,394\nMay | 1,329\nJune | 2,833\nJuly | 7,560", "question": "A radio station paid attention to how many listeners it had each month. How many more listeners did the radio station have in July than in June?", "answer": "4,727", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nlisteners_july = 7560\nlisteners_june = 2833\n# Calculate the difference in listeners between July and June\ndifference = listeners_july - listeners_june\nanswer = difference\n", "prediction": "4727\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nphotograph signed by a famous television star | $60\nCD signed by a famous band | $74\nphotograph signed by a famous movie star | $24\nprogram signed by a famous dancer | $35\njersey signed by a famous hockey player | $65", "question": "How much money does Owen need to buy a jersey signed by a famous hockey player and a photograph signed by a famous movie star?", "answer": "89", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices for the items\nprice_jersey = 65 \nprice_photograph_movie_star = 24 \n# Total cost for both items\ntotal_cost = price_jersey + price_photograph_movie_star\nanswer = total_cost\n", "prediction": "89\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of sheets | Number of stamps\n1 | 2\n2 | 4\n3 | 6\n4 | 8\n5 | ?", "question": "Each sheet has 2 stamps. How many stamps are on 5 sheets?", "answer": "10", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nsheets = 5\nstamps_per_sheet = 2\n# Calculate the total number of stamps for 5 sheets\ntotal_stamps = sheets * stamps_per_sheet\nanswer = total_stamps\n", "prediction": "10\n"}
{"context": "Read the following table regarding \"Hammers sold\" and then answer a question.\n\nDay | Number of hammers\nThursday | 6\nFriday | 2\nSaturday | 10\nSunday | 2\nMonday | 7\nTuesday | 3", "question": "A hardware store monitored how many hammers it sold in the past 6 days. What is the mean of the numbers?", "answer": "5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of hammers sold each day\nhammers_sold = [6, 2, 10, 2, 7, 3]\n# Calculate the mean\nmean_hammers = sum(hammers_sold) / len(hammers_sold)\nanswer = mean_hammers\n", "prediction": "5.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPersian oranges | $1/pound\nblood oranges | $2/pound\nnavel oranges | $5/pound\nValencia oranges | $3/pound\ntangerines | $1/pound\npomelos | $2/pound", "question": "Michael buys 1.2 pounds of navel oranges. What is the total cost?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_navel_oranges = 5  # price for navel oranges\npounds_bought = 1.2 \n# Calculate the total cost\ntotal_cost = price_per_pound_navel_oranges * pounds_bought\nanswer = total_cost\n", "prediction": "6.0\n"}
{"context": "Read the following table regarding \"Beautician requests\" and then answer a question.\n\nBeautician | Requests\nTara | 130\nCody | 980\nMackenzie | 410\nLayla | 880", "question": "A beauty salon in Oxford has four beauticians and keeps track of how often clients request each one specifically. What fraction of requests were for Mackenzie? Simplify your answer.", "answer": "41/240", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total requests by all beauticians\ntotal_requests = 130 + 980 + 410 + 880\n# Requests for Mackenzie\nmackenzie_requests = 410\n# Calculate the fraction of requests for Mackenzie\nfraction_mackenzie = mackenzie_requests / total_requests\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_fraction = Fraction(mackenzie_requests, total_requests).limit_denominator()\nanswer = simplified_fraction\n", "prediction": "41/240\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nantique elm coffee table | $1,884.00\nantique rosewood corner cabinet | $4,927.00\nantique pine chest of drawers | $1,174.00\nantique oak writing desk | $4,882.00", "question": "How much money does Chandler need to buy an antique rosewood corner cabinet, an antique elm coffee table, and an antique pine chest of drawers?", "answer": "7,985", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the antique items\nprice_elm_coffee_table = 1884.00\nprice_rosewood_cabinet = 4927.00\nprice_pine_chest = 1174.00\n\n# Total cost for Chandler\ntotal_cost = price_elm_coffee_table + price_rosewood_cabinet + price_pine_chest\nanswer = total_cost\n", "prediction": "7985.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ndog calendar | $13.81\nhistory book | $13.40\nbook of piano music | $13.91\ncookbook | $10.22", "question": "Bobby has $38.70. How much money will Bobby have left if he buys a cookbook and a history book?", "answer": "15.08", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items Bobby wants to buy\nprice_cookbook = 10.22 \nprice_history_book = 13.40 \n\n# Total cost of the items\ntotal_cost = price_cookbook + price_history_book \n\n# Money Bobby has\ninitial_money = 38.70 \n\n# Money left after the purchase\nmoney_left = initial_money - total_cost\nanswer = money_left\n", "prediction": "15.080000000000002\n"}
{"context": "Read the following table regarding \"Convenience store beverage sales\" and then answer a question.\n\nBeverage | Saturday | Sunday\nKickin' Coffee | $9 | $3\nOlde Tyme Cola | $7 | $19\nFizzy Fun | $2 | $9", "question": "Abigail, an employee at Harmon's Convenience Store, looked at the sales of each of its soda products. On Sunday, how much more did the convenience store make from Fizzy Fun sales than from Kickin' Coffee sales?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Sales on Sunday for each beverage\nsales_fizzy_fun_sunday = 9\nsales_kickin_coffee_sunday = 3\n# Calculate the difference in sales\ndifference_in_sales = sales_fizzy_fun_sunday - sales_kickin_coffee_sunday\nanswer = difference_in_sales\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"Sticker collections\" and then answer a question.\n\nName | Number of stickers\nTina | 778\nEmma | 796\nRobert | 767\nJamie | 769", "question": "Some friends compared the sizes of their sticker collections. Who has the fewest stickers? Choose from the the options: ['Tina', 'Emma', 'Robert', 'Jamie']", "answer": "Robert", "ques_type": "multi_choice", "choices": ["Tina", "Emma", "Robert", "Jamie"], "code": "# Python code, return answer \nstickers = {\n    'Tina': 778,\n    'Emma': 796,\n    'Robert': 767,\n    'Jamie': 769\n}\n# Find the friend with the fewest stickers\nfewest_stickers_friend = min(stickers, key=stickers.get)\nanswer = fewest_stickers_friend\n", "prediction": "Robert\n"}
{"context": "Read the following table regarding \"Festival schedule\" and then answer a question.\n\nEvent | Begin | End\ndance performance | 10:15 A.M. | 12:45 P.M.\nchoir concert | 12:55 P.M. | 2:40 P.M.\ndrumming performance | 2:50 P.M. | 3:50 P.M.\naward ceremony | 3:10 P.M. | 4:30 P.M.\nkeynote speech | 4:20 P.M. | 6:00 P.M.", "question": "Look at the following schedule. When does the dance performance begin? Choose from the the options: ['2:50 P.M.', '3:10 P.M.', '10:15 A.M.', '12:55 P.M.']", "answer": "10:15 A.M.", "ques_type": "multi_choice", "choices": ["2:50 P.M.", "3:10 P.M.", "10:15 A.M.", "12:55 P.M."], "code": "# Python code, return answer \ndance_performance_start = '10:15 A.M.'\nanswer = dance_performance_start\n", "prediction": "10:15 A.M.\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nAndalusian horse | $7,880\nMorgan horse | $5,351\nArabian horse | $1,403\nHanoverian horse | $6,753\nAppaloosa horse | $2,202", "question": "Florence has $12,625. How much money will Florence have left if she buys an Andalusian horse and an Appaloosa horse?", "answer": "2,543", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the horses\nandalusian_horse_price = 7880\nappaloosa_horse_price = 2202\n# Total cost of both horses\ntotal_cost = andalusian_horse_price + appaloosa_horse_price\n# Florence's initial amount\nflorence_money = 12625\n# Remaining money after the purchase\nremaining_money = florence_money - total_cost\nanswer = remaining_money\n", "prediction": "2543\n"}
{"context": "Read the following table regarding \"Miniature golf scores\" and then answer a question.\n\nName | Score\nOmar | 29\nLester | 30\nGordon | 26\nIsabelle | 32\nDarnell | 34\nSteven | 33\nTravis | 35", "question": "Some friends played miniature golf and wrote down their scores. What is the median of the numbers?", "answer": "32", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nscores = [29, 30, 26, 32, 34, 33, 35]\n# Sort the scores to find the median\nscores.sort()\n# Calculate the median\nn = len(scores)\nif n % 2 == 1:  # If the number of scores is odd\n    median = scores[n // 2]\nelse:  # If the number of scores is even\n    median = (scores[n // 2 - 1] + scores[n // 2]) / 2\nanswer = median\n", "prediction": "32\n"}
{"context": "Read the following table regarding \"Scores in a card game\" and then answer a question.\n\nScore | Frequency\n4 | 3\n5 | 1\n6 | 10\n7 | 0\n8 | 8\n9 | 2\n10 | 7", "question": "Annie figured out the scores at the end of a card game. How many people scored more than 5?", "answer": "27", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Define the frequency of scores\nscores_frequency = {\n    4: 3,\n    5: 1,\n    6: 10,\n    7: 0,\n    8: 8,\n    9: 2,\n    10: 7\n}\n\n# Calculate how many people scored more than 5\npeople_scored_more_than_5 = sum(frequency for score, frequency in scores_frequency.items() if score > 5)\nanswer = people_scored_more_than_5\n", "prediction": "27\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | Yellowtail | Salmon\nNot spicy | 5 | 3\nA little spicy | 6 | 5", "question": "A customer at a sushi restaurant was examining the types of sushi rolls offered on the menu. Rolls vary by type of fish and level of spiciness. Rolls only contain one type of fish. What is the probability that a randomly selected sushi roll is labeled a little spicy and contains salmon? Simplify any fractions.", "answer": "5/19", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Count of sushi rolls\nnot_spicy_yellowtail = 5\nnot_spicy_salmon = 3\na_little_spicy_yellowtail = 6\na_little_spicy_salmon = 5\n\n# Total number of sushi rolls\ntotal_rolls = (not_spicy_yellowtail + not_spicy_salmon + \n                a_little_spicy_yellowtail + a_little_spicy_salmon)\n\n# Probability of selecting a roll that is a little spicy and contains salmon\nprobability = a_little_spicy_salmon / total_rolls\n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(a_little_spicy_salmon, total_rolls).limit_denominator()\nanswer = simplified_probability\n", "prediction": "5/19\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n11 | 16\n12 | 9\n13 | 1", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "nonlinear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the differences in y-values for equal differences in x-values.\nx_values = [11, 12, 13]\ny_values = [16, 9, 1]\n\n# Calculate the differences\ndifferences = [y_values[i+1] - y_values[i] for i in range(len(y_values)-1)]\n# Check if the differences are constant\nis_linear = all(difference == differences[0] for difference in differences)\n\nanswer = 'linear' if is_linear else 'nonlinear'\n", "prediction": "NameError(\"name 'y_values' is not defined\")"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nyellow skirt | $10.76\npair of brown pants | $13.56\ngreen dress | $11.44\nred sweater | $26.64", "question": "Emilia has $40.50. Does she have enough to buy a pair of brown pants and a red sweater? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "", "prediction": "ERROR"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\njade bracelet | $7,637\nruby bracelet | $1,178\ndiamond ring | $4,767\ntopaz pendant | $9,454\nemerald pendant | $2,858", "question": "How much more does an emerald pendant cost than a ruby bracelet?", "answer": "1,680", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nemerald_pendant_cost = 2858 \nruby_bracelet_cost = 1178 \n# Calculate the difference in cost\ndifference_in_cost = emerald_pendant_cost - ruby_bracelet_cost\nanswer = difference_in_cost\n", "prediction": "1680\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nteapot | $38.09\nset of forks | $18.08\ncookbook | $13.24\nsoup pot | $50.93", "question": "Valeria has $52.00. Does she have enough to buy a teapot and a cookbook? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \nteapot_price = 38.09\ncookbook_price = 13.24\ntotal_cost = teapot_price + cookbook_price\nvaleria_budget = 52.00\n\n# Determine if Valeria has enough money\nif total_cost <= valeria_budget:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$980 | 11,000 | 7,100\n$1,130 | 9,300 | 8,600\n$1,280 | 7,600 | 10,100\n$1,430 | 5,900 | 11,600\n$1,580 | 4,200 | 13,100", "question": "Look at the table. Then answer the question. At a price of $1,280, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "surplus", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \nquantity_demanded = 7600  # At price $1,280\nquantity_supplied = 10100  # At price $1,280\n\n# Determine if there is a shortage or surplus\nif quantity_demanded < quantity_supplied:\n    answer = 'surplus'\nelse:\n    answer = 'shortage'\n\n", "prediction": "surplus\n"}
{"context": "Read the following table regarding \"Loaves of leftover bread\" and then answer a question.\n\nDay | Leftover loaves\nTuesday | 16\nWednesday | 8\nThursday | 38\nFriday | 6\nSaturday | 3", "question": "A vendor who sold bread at farmers' markets counted the number of leftover loaves at the end of each day. According to the table, what was the rate of change between Thursday and Friday?", "answer": "-32", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nleftover_loaves_thursday = 38\nleftover_loaves_friday = 6\n# Calculate the rate of change\nrate_of_change = leftover_loaves_friday - leftover_loaves_thursday\nanswer = rate_of_change\n", "prediction": "-32\n"}
{"context": "Read the following table regarding \"Hours spent volunteering\" and then answer a question.\n\nDay | Hours\nSaturday | 10\nSunday | 3\nMonday | 5\nTuesday | 4\nWednesday | 10\nThursday | 5\nFriday | 5", "question": "To get credit for meeting his school's community service requirement, Kendrick kept a volunteering log. What is the mean of the numbers?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Hours spent volunteering each day\nvolunteering_hours = [10, 3, 5, 4, 10, 5, 5]\n# Calculate the mean\nmean_hours = sum(volunteering_hours) / len(volunteering_hours)\nanswer = mean_hours\n", "prediction": "6.0\n"}
{"context": "Read the following table regarding \"Trees in city parks\" and then answer a question.\n\nPark | Cherry trees | Oak trees\nRoss Park | 10 | 1\nWalt Park | 20 | 7\nGoose Park | 6 | 7\nGlen Park | 14 | 2", "question": "Johnny, a park ranger, recorded the number of each type of tree in the Boone County Park District. How many more trees are there in Walt Park than Glen Park?", "answer": "11", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Trees in each park\nwalt_park_cherry = 20\nwalt_park_oak = 7\nglen_park_cherry = 14\nglen_park_oak = 2\n\n# Total trees in each park\ntotal_walt_park = walt_park_cherry + walt_park_oak\ntotal_glen_park = glen_park_cherry + glen_park_oak\n\n# Calculate the difference in the number of trees\ndifference = total_walt_park - total_glen_park\nanswer = difference\n", "prediction": "11\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nelastic band | $0.08\nbrass clip | $0.09\nfour-inch nail | $0.05\nred thumbtack | $0.09\nsmall metal hook | $0.02\ngold tack | $0.01", "question": "How much money does Jacob need to buy a gold tack and a red thumbtack?", "answer": "0.10", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_gold_tack = 0.01\nprice_red_thumbtack = 0.09\n# Total cost for buying both items\ntotal_cost = price_gold_tack + price_red_thumbtack\nanswer = total_cost\n", "prediction": "0.09999999999999999\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nred thumbtack | $0.15\nelastic band | $0.64\ngold tack | $0.19\npiece of plastic pipe | $0.53\nflat-head bolt | $0.44", "question": "How much money does Maggie need to buy 9 red thumbtacks?", "answer": "1.35", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_thumbtack = 0.15 \nquantity_needed = 9 \ntotal_cost = price_per_thumbtack * quantity_needed\nanswer = total_cost\n", "prediction": "1.3499999999999999\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nmop | $3\nwrench | $5\nbroom | $8\nwatering can | $5\nbucket | $3", "question": "Rose has $6. Does she have enough to buy a wrench and a bucket? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \nprice_wrench = 5 \nprice_bucket = 3 \ntotal_cost = price_wrench + price_bucket \nrose_money = 6 \n\n# Check if Rose has enough money\nif rose_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"Average waiting time at a doctor's office\" and then answer a question.\n\nMonth | Waiting time (minutes)\nMarch | 25\nApril | 24\nMay | 28\nJune | 22\nJuly | 30", "question": "Jim, a doctor's office receptionist, tracked the average waiting time at the office each month. According to the table, what was the rate of change between June and July?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Waiting times for June and July\nwaiting_time_june = 22\nwaiting_time_july = 30\n\n# Calculate the rate of change\nrate_of_change = waiting_time_july - waiting_time_june\nanswer = rate_of_change\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"Planet Volume (km3) Primary composition\" and then answer a question.\n\nMercury | 6.08 x | 1010 rock\nVenus | 9.28 x | 1011 rock\nEarth | 1.08 x | 1012 rock\nMars | 1.63 x | 1011 rock\nJupiter | 1.43 x | 1015 gas\nSaturn | 8.27 x | 1014 gas\nUranus | 6.83 x | 1013 ice\nNeptune | 6.25 x | 1013 ice", "question": "Use the data to answer the question below. Is the following statement about our solar system true or false? Earth is the largest planet that is made mainly of rock. Choose from the the options: ['true', 'false']", "answer": "true", "ques_type": "multi_choice", "choices": ["true", "false"], "code": "# Python code, return answer \n# Comparing the volumes of rocky planets\nearth_volume = 1.08 * 10**12\n# Volumes of other rocky planets\nmercury_volume = 6.08 * 10**10\nvenus_volume = 9.28 * 10**11\nmars_volume = 1.63 * 10**11\n\n# Determine if Earth is the largest rocky planet\nis_largest_rocky_planet = earth_volume > mercury_volume and earth_volume > venus_volume and earth_volume > mars_volume\nanswer = 'true' if is_largest_rocky_planet else 'false'\n", "prediction": "true\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbook about South America | $3.43\nbook about the Olympics | $2.92\nbook about soccer | $6.06\nbook about Antarctica | $7.88\nbook about trains | $4.54\nbook about hiking | $1.84", "question": "How much more does a book about South America cost than a book about hiking?", "answer": "1.59", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_south_america = 3.43\ncost_hiking = 1.84\n# Calculate the difference in cost\ndifference_cost = cost_south_america - cost_hiking\nanswer = difference_cost\n", "prediction": "1.59\n"}
{"context": "Read the following table regarding \"Technical assistance wait times (minutes)\" and then answer a question.\n\nStem | Leaf \n2 | 4, 4, 8, 9, 9\n3 | 0, 1, 2, 3, 3, 3, 4, 6, 6, 6\n4 | 0, 4, 5, 6, 9\n5 | 0, 1, 3, 4, 8", "question": "A Technical Assistance Manager monitored his customers' wait times. How many people waited for at least 45 minutes but less than 50 minutes?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Extracting wait times from the stem-and-leaf display\nwait_times = [\n    24, 24, 28, 29, 29,  # Stem 2\n    30, 31, 32, 33, 33, 33, 34, 36, 36, 36,  # Stem 3\n    40, 44, 45, 46, 49,  # Stem 4\n    50, 51, 53, 54, 58   # Stem 5\n]\n\n# Counting wait times that are at least 45 minutes but less than 50 minutes\ncount_at_least_45_less_than_50 = sum(1 for time in wait_times if 45 <= time < 50)\nanswer = count_at_least_45_less_than_50\n", "prediction": "3\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | Road bike tires | Mountain bike tires\nRed | 4 | 7\nGreen | 5 | 3", "question": "Martina is shopping for a new bicycle. She is most interested in color and type of tires. What is the probability that a randomly selected bike is red and has mountain bike tires? Simplify any fractions.", "answer": "7/19", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total bikes\ntotal_bikes = 4 + 7 + 5 + 3\n\n# Bikes that are red and have mountain bike tires\nred_mountain_bikes = 7\n\n# Calculate the probability\nprobability_red_mountain = red_mountain_bikes / total_bikes\n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(red_mountain_bikes, total_bikes).limit_denominator()\nanswer = simplified_probability\n", "prediction": "7/19\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npoetry book | $24.00\ncrossword puzzle book | $23.00\nspelling workbook | $20.00\npicture book | $22.00", "question": "How much more does a crossword puzzle book cost than a spelling workbook?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_crossword = 23.00 \ncost_spelling_workbook = 20.00 \n# Calculate the difference in cost\ndifference = cost_crossword - cost_spelling_workbook\nanswer = difference\n", "prediction": "3.0\n"}
{"context": "Read the following table regarding \"Grocery stores in each town\" and then answer a question.\n\nTown | Number of stores\nRichmond | 2\nWatertown | 5\nAshland | 3\nChesterton | 4\nSpringfield | 4\nGreenwood | 5\nMayfield | 3", "question": "A newspaper researched how many grocery stores there are in each town. What is the median of the numbers?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of grocery stores in each town\nstores = [2, 5, 3, 4, 4, 5, 3]\n\n# Sort the list to find the median\nstores.sort()\n\n# Calculate the median\nn = len(stores)\nif n % 2 == 1:\n    median = stores[n // 2]\nelse:\n    median = (stores[n // 2 - 1] + stores[n // 2]) / 2\n\nanswer = median\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"People interviewed\" and then answer a question.\n\nDay | Number of people\nFriday | 5\nSaturday | 7\nSunday | 5\nMonday | 9\nTuesday | 8\nWednesday | 9\nThursday | 9", "question": "A reporter looked through her notebook to remember how many people she had interviewed in the past 7 days. What is the range of the numbers?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of people interviewed each day\npeople_interviewed = [5, 7, 5, 9, 8, 9, 9]\n# Calculate the range\nrange_value = max(people_interviewed) - min(people_interviewed)\nanswer = range_value\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nkidney beans | $0.60/kilogram\ngarbanzo beans | $1.00/kilogram\nsoybeans | $0.65/kilogram\nmung beans | $0.51/kilogram", "question": "Audrey purchased 2 kilograms of garbanzo beans. What was the total cost?", "answer": "2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_kilogram_garbanzo = 1.00 \nkilograms_bought = 2 \n# Calculate the total cost\ntotal_cost = price_per_kilogram_garbanzo * kilograms_bought\nanswer = total_cost\n", "prediction": "2.0\n"}
{"context": "Read the following table regarding \"Gym schedule\" and then answer a question.\n\nActivity | Begin | End\ngymnastics | 7:50 A.M. | 8:20 A.M.\nline dancing | 8:25 A.M. | 9:30 A.M.\nyoga | 9:35 A.M. | 10:50 A.M.\nfitness class | 11:00 A.M. | 12:05 P.M.\nfloor hockey | 12:20 P.M. | 1:10 P.M.\nbadminton | 1:15 P.M. | 2:35 P.M.\nindoor soccer | 2:45 P.M. | 4:00 P.M.", "question": "Look at the following schedule. Which activity ends at 12.05 P.M.? Choose from the the options: ['badminton', 'fitness class', 'floor hockey', 'indoor soccer']", "answer": "fitness class", "ques_type": "multi_choice", "choices": ["badminton", "fitness class", "floor hockey", "indoor soccer"], "code": "# Python code, return answer \n# Activity that ends at 12:05 P.M.\nactivity_ending_at_1205 = 'fitness class'\nanswer = activity_ending_at_1205\n", "prediction": "fitness class\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbag of peanuts | $0.79\nice cream cone | $0.95\nbag of pretzels | $0.96\nglass of lemonade | $0.51\npickle | $0.67\ncup of coffee | $0.77", "question": "Deb has $1.66. Does she have enough to buy a pickle and an ice cream cone? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# Prices of items\npickle_price = 0.67\nice_cream_cone_price = 0.95\n\n# Total cost of a pickle and an ice cream cone\ntotal_cost = pickle_price + ice_cream_cone_price\n\n# Amount of money Deb has\ndeb_money = 1.66\n\n# Determine if Deb has enough money\nif deb_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of apartments | Number of doors\n1 | 10\n2 | 20\n3 | ?", "question": "Each apartment has 10 doors. How many doors are in 3 apartments?", "answer": "30", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Each apartment has 10 doors\ndoors_per_apartment = 10\n# Calculate the number of doors in 3 apartments\nnumber_of_apartments = 3\ntotal_doors = doors_per_apartment * number_of_apartments\nanswer = total_doors\n", "prediction": "30\n"}
{"context": "Read the following table regarding \"Quiz show scores\" and then answer a question.\n\nName | Score\nColette | 81\nVijay | 89\nKeenan | 88\nStefan | 82", "question": "The players on a quiz show received the following scores. Who had the lowest score? Choose from the the options: ['Colette', 'Vijay', 'Keenan', 'Stefan']", "answer": "Colette", "ques_type": "multi_choice", "choices": ["Colette", "Vijay", "Keenan", "Stefan"], "code": "# Python code, return answer \nscores = {\n    'Colette': 81,\n    'Vijay': 89,\n    'Keenan': 88,\n    'Stefan': 82\n}\n# Find the player with the lowest score\nlowest_score_player = min(scores, key=scores.get)\nanswer = lowest_score_player\n", "prediction": "Colette\n"}
{"context": "Read the following table regarding \"Games won by the Westminster baseball team\" and then answer a question.\n\nYear | Games won\n2013 | 34\n2014 | 42\n2015 | 42\n2016 | 33\n2017 | 42", "question": "Fans of the Westminster baseball team compared the number of games won by their team each year. According to the table, what was the rate of change between 2016 and 2017?", "answer": "9", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Games won in 2016 and 2017\ngames_won_2016 = 33\ngames_won_2017 = 42\n\n# Rate of change calculation\nrate_of_change = games_won_2017 - games_won_2016\nanswer = rate_of_change\n", "prediction": "9\n"}
{"context": "Read the following table regarding \"Pages read\" and then answer a question.\n\nDay | Number of pages\nFriday | 118\nSaturday | 138\nSunday | 131\nMonday | 189", "question": "Maddie wrote down how many pages she read over the past 4 days. On which day did Maddie read the fewest pages? Choose from the the options: ['Friday', 'Saturday', 'Sunday', 'Monday']", "answer": "Friday", "ques_type": "multi_choice", "choices": ["Friday", "Saturday", "Sunday", "Monday"], "code": "# Python code, return answer \npages_read = {\n    'Friday': 118,\n    'Saturday': 138,\n    'Sunday': 131,\n    'Monday': 189\n}\n# Find the day with the fewest pages read\nfewest_pages_day = min(pages_read, key=pages_read.get)\nanswer = fewest_pages_day\n", "prediction": "Friday\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npiece of rose quartz | $0.07\npiece of copper | $0.05\nquartz crystal | $0.03\npiece of black mica | $0.09\npiece of black obsidian | $0.06\npiece of green slate | $0.09", "question": "How much money does Nolan need to buy a piece of green slate and a piece of copper?", "answer": "0.14", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_green_slate = 0.09 \nprice_copper = 0.05 \n# Total cost for Nolan\ntotal_cost = price_green_slate + price_copper\nanswer = total_cost\n", "prediction": "0.14\n"}
{"context": "Read the following table regarding \"Ferry fares\" and then answer a question.\n\nFerry | Bicycle | Car\nSeattle-Bremerton | $8 | $12\nSouthport-Fort Fisher | $2 | $5\nFauntleroy-Vashon | $5 | $15\nMukilteu-Clinton | $5 | $7\nOcracoke | $3 | $15", "question": "For an economics project, Kate determined the cost of ferry rides for bicycles and cars. Of the ferries shown, which charges the least for a bicycle? Choose from the the options: ['Seattle-Bremerton', 'Ocracoke', 'Southport-Fort Fisher', 'Fauntleroy-Vashon']", "answer": "Southport-Fort Fisher", "ques_type": "multi_choice", "choices": ["Seattle-Bremerton", "Ocracoke", "Southport-Fort Fisher", "Fauntleroy-Vashon"], "code": "# Python code, return answer \nferry_fares = {\n    'Seattle-Bremerton': {'bicycle': 8, 'car': 12},\n    'Southport-Fort Fisher': {'bicycle': 2, 'car': 5},\n    'Fauntleroy-Vashon': {'bicycle': 5, 'car': 15},\n    'Mukilteu-Clinton': {'bicycle': 5, 'car': 7},\n    'Ocracoke': {'bicycle': 3, 'car': 15}\n}\n\n# Find the ferry that charges the least for a bicycle\nleast_bicycle_fare_ferry = min(ferry_fares, key=lambda x: ferry_fares[x]['bicycle'])\nanswer = least_bicycle_fare_ferry\n", "prediction": "NameError(\"name 'ferry_fares' is not defined\")"}
{"context": "Read the following table regarding \"Flower garden\" and then answer a question.\n\nColor | Roses | Daisies\nPink | 16 | 9\nOrange | 3 | 3\nWhite | 6 | 5\nYellow | 1 | 7", "question": "Gardeners at the Henderson estate counted the number of flowers growing there. How many orange flowers are in the garden?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of orange flowers\norange_roses = 3\norange_daisies = 3\n# Total orange flowers\ntotal_orange_flowers = orange_roses + orange_daisies\nanswer = total_orange_flowers\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"Average waiting time at the DMV\" and then answer a question.\n\nMonth | Waiting time (minutes)\nMarch | 29\nApril | 33\nMay | 33\nJune | 36\nJuly | 29", "question": "An administrator at the Department of Motor Vehicles (DMV) tracked the average wait time from month to month. According to the table, what was the rate of change between June and July?", "answer": "-7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nwaiting_time_june = 36\nwaiting_time_july = 29\n\n# Calculate the rate of change between June and July\nrate_of_change = waiting_time_july - waiting_time_june\nanswer = rate_of_change\n", "prediction": "-7\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of bunches | Number of balloons\n1 | 5\n2 | 10\n3 | 15\n4 | 20\n5 | ?", "question": "Each bunch has 5 balloons. How many balloons are in 5 bunches?", "answer": "25", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nnumber_of_bunches = 5\nballoons_per_bunch = 5\n# Calculate the total number of balloons in 5 bunches\ntotal_balloons = number_of_bunches * balloons_per_bunch\nanswer = total_balloons\n", "prediction": "25\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ngrilled eggplant | $10.38\neggplant parmesan | $16.73\ncheese pizza | $11.68\ngrilled steak | $15.77\nravioli | $11.09", "question": "How much money does Jake need to buy eggplant parmesan and a grilled steak?", "answer": "32.50", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_eggplant_parmesan = 16.73\nprice_grilled_steak = 15.77\n# Total cost for Jake\ntotal_cost = price_eggplant_parmesan + price_grilled_steak\nanswer = total_cost\n", "prediction": "32.5\n"}
{"context": "Read the following table regarding \"Passengers per train\" and then answer a question.\n\nStem | Leaf \n1 | 6, 7\n2 | 5\n3 | \n4 | 1, 4\n5 | 0, 4, 9\n6 | 4, 7, 7\n7 | 7, 8\n8 | 8, 8", "question": "The train conductor made sure to count the number of passengers on each train. How many trains had at least 50 passengers but fewer than 90 passengers?", "answer": "10", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Counting the number of trains within the specified range: at least 50 but fewer than 90\npassenger_counts = [\n    16, 17,  # Stem 1\n    25,      # Stem 2\n    # Stem 3 has no values\n    41, 44,  # Stem 4\n    50, 54, 59,  # Stem 5\n    64, 67, 67,  # Stem 6\n    77, 78,  # Stem 7\n    88, 88   # Stem 8\n]\n\n# Counting trains with passengers between 50 and 89 (inclusive of 50, exclusive of 90)\ncount_trains = sum(1 for count in passenger_counts if 50 <= count < 90)\nanswer = count_trains\n", "prediction": "10\n"}
{"context": "Read the following table regarding \"Bricks per building\" and then answer a question.\n\nStem | Leaf \n1 | 0, 8\n2 | \n3 | \n4 | 5\n5 | \n6 | 1, 6\n7 | \n8 | 7", "question": "The architecture student counted the number of bricks in each building in her neighborhood. How many buildings have at least 13 bricks but fewer than 72 bricks?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Representing the data from the stem-and-leaf plot\nbricks_counts = [10, 18, 45, 61, 66, 87]  # Translated from the stem-and-leaf plot\n# Count buildings with at least 13 bricks and fewer than 72 bricks\nbuildings_count = sum(1 for count in bricks_counts if 13 <= count < 72)\nanswer = buildings_count\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nLocation | Elevation (m)\nTop of the skyscraper | 275\nBottom of the mine | -260", "question": "Eve likes watching the show Engineering Marvels. In last night's episode, the engineering team visited a tall skyscraper and a deep mine. A banner at the bottom of the screen showed the elevation of each location the team visited. Which location is closer to sea level? Choose from the the options: ['top of the skyscraper', 'bottom of the mine']", "answer": "bottom of the mine", "ques_type": "multi_choice", "choices": ["top of the skyscraper", "bottom of the mine"], "code": "# Python code, return answer \n# Elevation of each location\ntop_of_skyscraper_elevation = 275  # in meters\nbottom_of_mine_elevation = -260      # in meters\n\n# Determine which location is closer to sea level\nif top_of_skyscraper_elevation > abs(bottom_of_mine_elevation):\n    answer = 'top of the skyscraper'\nelse:\n    answer = 'bottom of the mine'\n\n", "prediction": "top of the skyscraper\n"}
{"context": "Read the following table regarding \"Sledding last winter\" and then answer a question.\n\nNumber of times | Frequency\n0 | 13\n1 | 5\n2 | 18\n3 | 4", "question": "The Rockport Ski Resort asked its guests how many times they went sledding last winter. How many guests went sledding fewer than 2 times?", "answer": "18", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of guests who went sledding 0 times\nfrequency_0 = 13\n# Frequency of guests who went sledding 1 time\nfrequency_1 = 5\n# Total guests who went sledding fewer than 2 times\nguests_fewer_than_2 = frequency_0 + frequency_1\nanswer = guests_fewer_than_2\n", "prediction": "18\n"}
{"context": "Read the following table regarding \"Cherries sold\" and then answer a question.\n\nDay | Kilograms\nSunday | 8\nMonday | 10\nTuesday | 8\nWednesday | 10\nThursday | 8", "question": "A farmer wrote down how many kilograms of cherries were sold in the past 5 days. What is the mode of the numbers?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nfrom statistics import mode\n\n# List of kilograms sold over the days\ncherries_sold = [8, 10, 8, 10, 8]\n\n# Calculate the mode\nmode_cherries = mode(cherries_sold)\nanswer = mode_cherries\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nAfrican safari vacation package | $3,174\nJamaican vacation package | $4,060\nHawaiian vacation package | $2,228\nCaribbean vacation package | $6,657\nEuropean vacation package | $6,856", "question": "How much more does a Caribbean vacation package cost than a Jamaican vacation package?", "answer": "2,597", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncaribbean_vacation_cost = 6657 \njamaican_vacation_cost = 4060 \n# Calculate the difference in cost\ndifference_cost = caribbean_vacation_cost - jamaican_vacation_cost\nanswer = difference_cost\n", "prediction": "2597\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\noil painting | $95.07\nrug | $24.82\ncrystal vase | $91.93\nlamp | $74.21\nceramic vase | $87.53\nchandelier | $52.99", "question": "How much money does Jenna need to buy a lamp and a crystal vase?", "answer": "166.14", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nlamp_price = 74.21\ncrystal_vase_price = 91.93\n# Total cost for buying both items\ntotal_cost = lamp_price + crystal_vase_price\nanswer = total_cost\n", "prediction": "166.14\n"}
{"context": "Read the following table regarding \"Pets\" and then answer a question.\n\nName | Number of pets\nRob | 2\nZane | 5\nKiera | 1\nColette | 1\nEllie | 10\nDirk | 9\nGabe | 7", "question": "Some students compared how many pets they have. What is the mean of the numbers?", "answer": "5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of pets for each student\npets = [2, 5, 1, 1, 10, 9, 7]\n# Calculate the mean\nmean_pets = sum(pets) / len(pets)\nanswer = mean_pets\n", "prediction": "5.0\n"}
{"context": "Read the following table regarding \"Weight of winning dog at a dog show\" and then answer a question.\n\nYear | Weight (kg)\n2013 | 31\n2014 | 37\n2015 | 36\n2016 | 37\n2017 | 18", "question": "A dog show enthusiast recorded the weight of the winning dog at recent dog shows. According to the table, what was the rate of change between 2013 and 2014?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nweight_2013 = 31  # weight in kg for the year 2013\nweight_2014 = 37  # weight in kg for the year 2014\n\n# Calculate the rate of change\nrate_of_change = weight_2014 - weight_2013\nanswer = rate_of_change\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"Math teachers\" and then answer a question.\n\nHigh school | Number of math teachers\nHillview High | 8\nGreen High | 6\nThompson High | 10\nWestside High | 7\nCentral High | 9\nNorthside High | 9\nLincoln High | 7", "question": "The school district compared how many math teachers each high school has. What is the mean of the numbers?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of math teachers at each high school\nmath_teachers = [8, 6, 10, 7, 9, 9, 7]\n# Calculate the mean\nmean_math_teachers = sum(math_teachers) / len(math_teachers)\nanswer = mean_math_teachers\n", "prediction": "8.0\n"}
{"context": "Read the following table regarding \"Science articles read\" and then answer a question.\n\nName | Number of science articles\nQuincy | 9\nCarly | 4\nKinsley | 9\nAlexandra | 9\nDuncan | 7\nTerrell | 7\nRussell | 10\nShawn | 10", "question": "Quincy's classmates revealed how many science articles they read. What is the mode of the numbers?", "answer": "9", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of articles read by each student\narticles_read = [9, 4, 9, 9, 7, 7, 10, 10]\n\n# Finding the mode\nfrom statistics import mode\nmode_value = mode(articles_read)\nanswer = mode_value\n", "prediction": "9\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nflannel sheet | $13\nquilt | $24\nbeach towel | $11\npillow | $14\nbeach blanket | $11", "question": "Wendy has $27. Does she have enough to buy a beach blanket and a pillow? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \nbeach_blanket_price = 11\npillow_price = 14\ntotal_cost = beach_blanket_price + pillow_price\nwendy_budget = 27\n\n# Check if Wendy has enough money\nif wendy_budget >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"Chocolate consumption per capita (kg)\" and then answer a question.\n\nCountry | 2002 | 2005\nNorway | 8 | 9\nDenmark | 9 | 8\nAustria | 8 | 9\nGermany | 10 | 11", "question": "Ruth's Candies has been studying how much chocolate people have been eating in different countries. Which country consumed less chocolate per capita in 2005, Austria or Germany? Choose from the the options: ['Austria', 'Germany']", "answer": "Austria", "ques_type": "multi_choice", "choices": ["Austria", "Germany"], "code": "# Python code, return answer \n# Chocolate consumption per capita in 2005\nconsumption_2005 = {\n    'Austria': 9,\n    'Germany': 11\n}\n# Determine which country consumed less chocolate in 2005\nif consumption_2005['Austria'] < consumption_2005['Germany']:\n    answer = 'Austria'\nelse:\n    answer = 'Germany'\n", "prediction": "Austria\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nking snake | $97.00\npot-bellied pig | $51.00\ntarantula | $35.00\nchinchilla | $57.00\ncockatoo | $11.00\nscorpion | $67.00", "question": "Hannah has $179.00. How much money will Hannah have left if she buys a scorpion and a chinchilla?", "answer": "55", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the animals\nprice_scorpion = 67.00\nprice_chinchilla = 57.00\n# Total cost for scorpion and chinchilla\ntotal_cost = price_scorpion + price_chinchilla\n# Amount of money Hannah will have left\nhannah_money = 179.00\nmoney_left = hannah_money - total_cost\nanswer = money_left\n", "prediction": "55.0\n"}
{"context": "Read the following table regarding \"Participants per race\" and then answer a question.\n\nStem | Leaf \n1 | 2\n2 | 4, 8\n3 | \n4 | 2, 8\n5 | 5, 8, 9\n6 | 8\n7 | 3", "question": "A volunteer for the local running club counted the number of participants at each race. How many races had at least 41 participants?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of participants derived from the stem-and-leaf display\nparticipants = [12, 24, 28, 42, 48, 55, 58, 59, 68, 73]  # Each number corresponds to the stem and leaves\n# Count how many races had at least 41 participants\ncount_at_least_41 = sum(1 for p in participants if p >= 41)\nanswer = count_at_least_41\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"Participants per race\" and then answer a question.\n\nStem | Leaf \n1 | 1, 2\n2 | 4\n3 | 1, 5, 7\n4 | 8\n5 | 4, 7, 8\n6 | 3\n7 | 6", "question": "A volunteer for the local running club counted the number of participants at each race. How many races had at least 50 participants but fewer than 80 participants?", "answer": "5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Count the number of races with participants between 50 and 79 (inclusive)\n# The stems 5, 6, and 7 are relevant since 50 to 79 falls in those ranges.\nraces_with_participants = {\n    51: 4,   # 54, 57, 58 from stem 5\n    60: 3,   # 63 from stem 6\n    70: 1    # 76 from stem 7\n}\n\n# Participants per race represented by the stem-and-leaf display:\n# Stem 5: 54, 57, 58 (3 races)\n# Stem 6: 63 (1 race)\n# Stem 7: 76 (1 race)\n\n# Total count of races with at least 50 and fewer than 80 participants\nnumber_of_races = 3 + 1 + 1  # 3 from stem 5, 1 from stem 6, 1 from stem 7\nanswer = number_of_races\n", "prediction": "5\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | Not spicy | A little spicy\nYellowtail | 1 | 3\nSalmon | 4 | 3", "question": "A customer at a sushi restaurant was examining the types of sushi rolls offered on the menu. Rolls vary by type of fish and level of spiciness. Rolls only contain one type of fish. What is the probability that a randomly selected sushi roll contains salmon and is labeled not spicy? Simplify any fractions.", "answer": "4/11", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Count of sushi rolls\nnot_spicy_yellowtail = 1\na_little_spicy_yellowtail = 3\nnot_spicy_salmon = 4\na_little_spicy_salmon = 3\n\n# Total rolls\ntotal_rolls = not_spicy_yellowtail + a_little_spicy_yellowtail + not_spicy_salmon + a_little_spicy_salmon\n\n# Probability of selecting a not spicy salmon roll\nprobability_not_spicy_salmon = not_spicy_salmon / total_rolls\n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(not_spicy_salmon, total_rolls).limit_denominator()\nanswer = simplified_probability\n", "prediction": "4/11\n"}
{"context": "Read the following table regarding \"Phone calls received\" and then answer a question.\n\nDay | Number of calls\nMonday | 4,560\nTuesday | 4,279\nWednesday | 2,988\nThursday | 1,406\nFriday | 1,192", "question": "A technical support line tracked how many calls it received each day. How many calls total did the support line receive on Tuesday and Thursday?", "answer": "5,685", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Calls received on Tuesday and Thursday\ncalls_tuesday = 4279\ncalls_thursday = 1406\n# Total calls on Tuesday and Thursday\ntotal_calls = calls_tuesday + calls_thursday\nanswer = total_calls\n", "prediction": "5685\n"}
{"context": "Read the following table regarding \"Beautician requests\" and then answer a question.\n\nBeautician | Requests\nShelley | 560\nLexi | 600\nElise | 630\nKamal | 860\nJoe | 630", "question": "A beauty salon in Richmond has five beauticians and keeps track of how often clients request each one specifically. What fraction of requests were for Shelley? Simplify your answer.", "answer": "7/41", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total requests made to all beauticians\ntotal_requests = 560 + 600 + 630 + 860 + 630\n# Requests for Shelley\nshelley_requests = 560\n# Calculate the fraction of requests for Shelley\nfraction_shelley = shelley_requests / total_requests\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_fraction = Fraction(shelley_requests, total_requests).limit_denominator()\nanswer = simplified_fraction\n", "prediction": "7/41\n"}
{"context": "Read the following table regarding \"Couches sold\" and then answer a question.\n\nDay | Number of couches\nWednesday | 8\nThursday | 14\nFriday | 11\nSaturday | 4\nSunday | 5", "question": "A furniture store kept a record of how many couches it sold each day. What is the range of the numbers?", "answer": "10", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of couches sold each day\ncouches_sold = [8, 14, 11, 4, 5]\n# Calculate the range\nrange_couches = max(couches_sold) - min(couches_sold)\nanswer = range_couches\n", "prediction": "10\n"}
{"context": "Read the following table regarding \"Doing pull-ups\" and then answer a question.\n\nNumber of pull-ups | Frequency\n0 | 0\n1 | 6\n2 | 4\n3 | 2", "question": "Jackson, a fitness counselor, counted the number of pull-ups completed by each bootcamp participant. How many participants did exactly 1 pull-up?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# From the table, the frequency of participants who completed exactly 1 pull-up\nparticipants_one_pullup = 6\nanswer = participants_one_pullup\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"Boxes of Girl Scout cookies sold\" and then answer a question.\n\nDay | Boxes of cookies\nSunday | 42\nMonday | 34\nTuesday | 31\nWednesday | 32\nThursday | 31", "question": "A Girl Scout troop recorded how many boxes of cookies they sold each day for a week. According to the table, what was the rate of change between Wednesday and Thursday?", "answer": "-1", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Boxes sold on Wednesday and Thursday\nboxes_wednesday = 32\nboxes_thursday = 31\n\n# Calculate the rate of change from Wednesday to Thursday\nrate_of_change = boxes_thursday - boxes_wednesday\nanswer = rate_of_change\n", "prediction": "-1\n"}
{"context": "Read the following table regarding \"Shells Kendra found\" and then answer a question.\n\nDay | Number of shells\nTuesday | 6\nWednesday | 3\nThursday | 6\nFriday | 2\nSaturday | 0", "question": "Kendra spent a week at the beach and recorded the number of shells she found each day. According to the table, what was the rate of change between Wednesday and Thursday?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of shells found on Wednesday and Thursday\nshells_wednesday = 3\nshells_thursday = 6\n\n# Calculate the rate of change\nrate_of_change = shells_thursday - shells_wednesday\nanswer = rate_of_change\n", "prediction": "3\n"}
{"context": "Read the following table regarding \"Salem arts education budget\" and then answer a question.\n\nYear | Per-student budget\n2007 | $17\n2008 | $21\n2009 | $29\n2010 | $22\n2011 | $21", "question": "In hopes of raising more funds for arts education, some parents in the Salem School District publicized the current per-student arts education budget. According to the table, what was the rate of change between 2008 and 2009?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Per-student budgets for the years 2008 and 2009\nbudget_2008 = 21\nbudget_2009 = 29\n\n# Rate of change calculation\nrate_of_change = budget_2009 - budget_2008\nanswer = rate_of_change\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"Dog food consumption\" and then answer a question.\n\nDog | Kilograms of food\nLucky | 50\nPepper | 44\nTaffy | 28\nSparky | 40", "question": "Gabby owns four dogs and monitors how much food they eat in a month. What fraction of the food was eaten by Pepper? Simplify your answer.", "answer": "22/81", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total kilograms of food consumed by all dogs\ntotal_food = 50 + 44 + 28 + 40\n# Kilograms of food consumed by Pepper\npepper_food = 44\n# Calculate the fraction of food eaten by Pepper\nfraction_pepper = pepper_food / total_food\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_fraction = Fraction(pepper_food, total_food).limit_denominator()\nanswer = simplified_fraction\n", "prediction": "22/81\n"}
{"context": "Read the following table regarding \"Lancaster School District sports budget\" and then answer a question.\n\nYear | Per-student budget\n2013 | $49\n2014 | $50\n2015 | $42\n2016 | $45\n2017 | $50", "question": "Each year the Lancaster School District publishes its annual budget, which includes information on the sports program's per-student spending. According to the table, what was the rate of change between 2016 and 2017?", "answer": "5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Per-student budgets for the years\nbudget_2016 = 45 \nbudget_2017 = 50 \n# Calculate the rate of change\nrate_of_change = budget_2017 - budget_2016\nanswer = rate_of_change\n", "prediction": "5\n"}
{"context": "Read the following table regarding \"People on the bus\" and then answer a question.\n\nDay | Number of people\nSunday | 68\nMonday | 63\nTuesday | 83\nWednesday | 65\nThursday | 77\nFriday | 63\nSaturday | 64", "question": "A bus driver paid attention to how many passengers his bus had each day. What is the median of the numbers?", "answer": "65", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of people on the bus each day\npeople = [68, 63, 83, 65, 77, 63, 64]\n\n# Sort the list to find the median\nsorted_people = sorted(people)\n\n# Calculate the median\nn = len(sorted_people)\nif n % 2 == 0:  # even number of elements\n    median = (sorted_people[n//2 - 1] + sorted_people[n//2]) / 2\nelse:  # odd number of elements\n    median = sorted_people[n//2]\n\nanswer = median\n", "prediction": "65\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ngumball | $0.11\npeanut butter cup | $0.15\ncaramel | $0.13\ngrape lollipop | $0.40", "question": "How much money does Dan need to buy a grape lollipop and a caramel?", "answer": "0.53", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_grape_lollipop = 0.40 \nprice_caramel = 0.13 \n# Total cost for a grape lollipop and a caramel\ntotal_cost = price_grape_lollipop + price_caramel\nanswer = total_cost\n", "prediction": "0.53\n"}
{"context": "Read the following table regarding \"Restaurant ratings\" and then answer a question.\n\nStem | Leaf \n1 | 2, 6, 7\n2 | 1, 3, 8, 9\n3 | 5, 8\n4 | 0, 0, 2, 4, 5, 7, 7, 9\n5 | 0", "question": "A food magazine published a listing of local restaurant ratings. What is the highest rating?", "answer": "50", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The highest rating corresponds to the largest value in the stem-and-leaf display.\nhighest_rating = 50  # From the stem \"5 | 0\", the value is 50.\nanswer = highest_rating\n", "prediction": "50\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nspool of metallic cord | $0.62\nfake red rose | $0.77\ntube of paste | $0.54\nspool of gold wire | $0.18\nspool of thread | $0.74", "question": "How much more does a spool of thread cost than a tube of paste?", "answer": "0.20", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_thread = 0.74 \ncost_paste = 0.54 \n# Calculate the difference in cost\ndifference_cost = cost_thread - cost_paste\nanswer = difference_cost\n", "prediction": "0.19999999999999996\n"}
{"context": "Read the following table regarding \"Toys per bin\" and then answer a question.\n\nStem | Leaf \n4 | 3, 3, 3, 3, 7, 8\n5 | 2, 2, 2, 4, 6\n6 | 2, 4, 6, 6\n7 | 2, 3\n8 | 0, 0, 2, 4, 5, 5", "question": "A toy store employee counted the number of toys in each bin in the sale section. How many bins had exactly 43 toys?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The stem-and-leaf display indicates the following number of toys in the bins:\ntoys_per_bin = [43, 43, 43, 43, 47, 48, \n                 52, 52, 52, 54, 56, \n                 62, 64, 66, 66, \n                 72, 73, \n                 80, 80, 82, 84, 85, 85]\n\n# Count how many bins had exactly 43 toys\nbins_with_43_toys = toys_per_bin.count(43)\nanswer = bins_with_43_toys\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"Balloons sold\" and then answer a question.\n\nDay | Number of balloons\nSunday | 564\nMonday | 193\nTuesday | 142\nWednesday | 251", "question": "The manager of a party supply store researched how many balloons it sold in the past 4 days. How many balloons in total did the store sell on Monday and Tuesday?", "answer": "335", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of balloons sold on Monday and Tuesday\nballoons_monday = 193\nballoons_tuesday = 142\n# Calculate the total balloons sold on Monday and Tuesday\ntotal_balloons_monday_tuesday = balloons_monday + balloons_tuesday\nanswer = total_balloons_monday_tuesday\n", "prediction": "335\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbottle of ketchup | $0.78\nbottle of hot sauce | $0.90\nbottle of mustard | $0.80\nbottle of soy sauce | $0.85\njar of tomato sauce | $0.63\njar of salsa | $0.96", "question": "How much money does Finn need to buy 2 bottles of mustard?", "answer": "1.60", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_bottle_mustard = 0.80 \nbottles_needed = 2 \n# Calculate the total cost\ntotal_cost = price_per_bottle_mustard * bottles_needed\nanswer = total_cost\n", "prediction": "1.6\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nromaine lettuce | $0.46/kilogram\nsummer crisp lettuce | $1.38/kilogram\nChinese lettuce | $1.19/kilogram\nbutterhead lettuce | $0.40/kilogram", "question": "If Isaiah buys 1 kilogram of romaine lettuce, how much will he spend?", "answer": "0.46", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_kilogram_romaine = 0.46 \nkilograms_bought = 1 \nanswer = price_per_kilogram_romaine * kilograms_bought\n", "prediction": "0.46\n"}
{"context": "Read the following table regarding \"Trivia game scores\" and then answer a question.\n\nName | Score\nXavier | 2\nNatalie | 4\nBrendan | 7\nDalton | 2\nHazel | 7\nVictor | 7\nWinston | 4\nLillian | 7", "question": "Some friends played a trivia game and recorded their scores. What is the mode of the numbers?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nfrom statistics import mode\n\n# List of scores\nscores = [2, 4, 7, 2, 7, 7, 4, 7]\n\n# Calculate the mode\nanswer = mode(scores)\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"Doing pull-ups\" and then answer a question.\n\nNumber of pull-ups | Frequency\n0 | 18\n1 | 7\n2 | 5\n3 | 13", "question": "Molly, a fitness counselor, counted the number of pull-ups completed by each bootcamp participant. How many participants did more than 1 pull-up?", "answer": "18", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of participants doing more than 1 pull-up\nparticipants_more_than_1 = 5 + 13  # 2 pull-ups and 3 pull-ups\nanswer = participants_more_than_1\n", "prediction": "18\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nshapes stencil | $0.07\nwooden block | $0.01\nred kazoo | $0.03\ngreen bouncy ball | $0.06", "question": "How much money does Jasmine need to buy a wooden block, a shapes stencil, and a green bouncy ball?", "answer": "0.14", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_shapes_stencil = 0.07\nprice_wooden_block = 0.01\nprice_green_bouncy_ball = 0.06\n\n# Total cost\ntotal_cost = price_shapes_stencil + price_wooden_block + price_green_bouncy_ball\nanswer = total_cost\n", "prediction": "0.14\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npiece of pink paper | $0.55\nsheet of green paper | $0.43\npiece of floral stationery | $0.42\npiece of polka-dotted paper | $0.10\nsheet of shiny silver paper | $0.78\npiece of elegant stationery | $0.10", "question": "How much money does Polly need to buy a piece of elegant stationery and a piece of polka-dotted paper?", "answer": "0.20", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_elegant_stationery = 0.10 \nprice_polka_dotted_paper = 0.10 \n\n# Total cost for Polly to buy both items\ntotal_cost = price_elegant_stationery + price_polka_dotted_paper\nanswer = total_cost\n", "prediction": "0.2\n"}
{"context": "Read the following table regarding \"Restaurant ratings\" and then answer a question.\n\nStem | Leaf \n1 | 6, 6\n2 | 3\n3 | 4, 6\n4 | \n5 | 0", "question": "A food magazine published a listing of local restaurant ratings. What is the highest rating?", "answer": "50", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The highest rating corresponds to the largest value in the stem-and-leaf display.\nhighest_rating = 50  # From the stem \"5 | 0\", the value is 50.\nanswer = highest_rating\n", "prediction": "50\n"}
{"context": "Read the following table regarding \"New cable customers\" and then answer a question.\n\nDay | Number of new customers\nWednesday | 131\nThursday | 114\nFriday | 141\nSaturday | 134", "question": "A cable company analyst paid attention to how many new customers it had each day. On which day did the cable company have the fewest new customers? Choose from the the options: ['Wednesday', 'Thursday', 'Friday', 'Saturday']", "answer": "Thursday", "ques_type": "multi_choice", "choices": ["Wednesday", "Thursday", "Friday", "Saturday"], "code": "# Python code, return answer \nnew_customers = {\n    'Wednesday': 131,\n    'Thursday': 114,\n    'Friday': 141,\n    'Saturday': 134\n}\n# Find the day with the fewest new customers\nfewest_customers_day = min(new_customers, key=new_customers.get)\nanswer = fewest_customers_day\n", "prediction": "Thursday\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n11 | 6\n5 | 13\n20 | 15", "question": "Look at this table. Is this relation a function? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# A relation is a function if each input (x) maps to exactly one output (y).\n# In this case, the x-values are 11, 5, and 20. All x-values are unique.\nx_values = [11, 5, 20]\ny_values = [6, 13, 15]\n\n# Checking if each x-value is unique\nis_function = len(x_values) == len(set(x_values))\nanswer = 'yes' if is_function else 'no'\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"Weight of winning dog at a dog show\" and then answer a question.\n\nYear | Weight (kg)\n2009 | 25\n2010 | 24\n2011 | 32\n2012 | 30\n2013 | 38", "question": "A dog show enthusiast recorded the weight of the winning dog at recent dog shows. According to the table, what was the rate of change between 2011 and 2012?", "answer": "-2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nweight_2011 = 32  # weight in kg for the year 2011\nweight_2012 = 30  # weight in kg for the year 2012\n\n# Calculate the rate of change\nrate_of_change = weight_2012 - weight_2011\nanswer = rate_of_change\n", "prediction": "-2\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ndark chocolate chips | $3.34/kg\nsemisweet chocolate chips | $1.51/kg\npeanut butter chips | $2.25/kg\nmilk chocolate chips | $1.53/kg\nbutterscotch chips | $3.25/kg", "question": "Charlotte went to the store. She bought 2 kilograms of semisweet chocolate chips and 2 kilograms of butterscotch chips. How much did she spend?", "answer": "9.52", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices per kilogram\nprice_semisweet = 1.51\nprice_butterscotch = 3.25\n\n# Kilograms bought\nkilograms_bought = 2\n\n# Total cost calculation\ntotal_cost = (price_semisweet * kilograms_bought) + (price_butterscotch * kilograms_bought)\nanswer = total_cost\n", "prediction": "9.52\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nred wagon | $32\nmodel airplane | $41\nmodel railroad set | $98\ntrivia game | $34\nremote control car | $27", "question": "How much money does Lara need to buy a red wagon and a model railroad set?", "answer": "130", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_red_wagon = 32 \nprice_model_railroad_set = 98 \n# Total cost for both items\ntotal_cost = price_red_wagon + price_model_railroad_set\nanswer = total_cost\n", "prediction": "130\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npeanut butter cookie dough | $3 per kilogram\nsnickerdoodle cookie dough | $3 per kilogram\ndouble chocolate cookie dough | $2 per kilogram\ngingersnap cookie dough | $3 per kilogram\nchocolate chip cookie dough | $2 per kilogram", "question": "Dillon purchased 5 kilograms of chocolate chip cookie dough, 1 kilogram of gingersnap cookie dough, and 5 kilograms of peanut butter cookie dough. What was the total cost?", "answer": "28", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices per kilogram\nprice_chocolate_chip = 2 \nprice_gingersnap = 3 \nprice_peanut_butter = 3 \n\n# Quantities purchased\nkg_chocolate_chip = 5 \nkg_gingersnap = 1 \nkg_peanut_butter = 5 \n\n# Total cost calculation\ntotal_cost = (kg_chocolate_chip * price_chocolate_chip) + (kg_gingersnap * price_gingersnap) + (kg_peanut_butter * price_peanut_butter)\nanswer = total_cost\n", "prediction": "28\n"}
{"context": "Read the following table regarding \"Stop signs\" and then answer a question.\n\nStreet | Number of stop signs\nWatson Street | 10\nWalker Street | 4\nMason Street | 9\nPeabody Street | 5\nSpring Street | 7\nSmith Street | 7\nJackson Street | 9\nMarshall Street | 5", "question": "The town council reported on how many stop signs there are on each street. What is the mean of the numbers?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of stop signs on each street\nstop_signs = [10, 4, 9, 5, 7, 7, 9, 5]\n# Calculate the mean\nmean_stop_signs = sum(stop_signs) / len(stop_signs)\nanswer = mean_stop_signs\n", "prediction": "7.0\n"}
{"context": "Read the following table regarding \"Cars sold\" and then answer a question.\n\nMonth | Number of cars\nMay | 249\nJune | 245\nJuly | 254\nAugust | 225", "question": "A car dealership tracked the number of cars sold each month. In which month did the dealership sell the fewest cars? Choose from the the options: ['May', 'June', 'July', 'August']", "answer": "August", "ques_type": "multi_choice", "choices": ["May", "June", "July", "August"], "code": "# Python code, return answer \ncars_sold = {\n    'May': 249,\n    'June': 245,\n    'July': 254,\n    'August': 225\n}\n# Find the month with the fewest cars sold\nfewest_cars_month = min(cars_sold, key=cars_sold.get)\nanswer = fewest_cars_month\n", "prediction": "August\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of toy bins | Number of yellow blocks\n1 | 10\n2 | 20\n3 | ?", "question": "Each toy bin has 10 yellow blocks. How many yellow blocks are in 3 toy bins?", "answer": "30", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of yellow blocks per toy bin\nyellow_blocks_per_bin = 10\n# Calculate total yellow blocks in 3 toy bins\nnumber_of_bins = 3\nanswer = yellow_blocks_per_bin * number_of_bins\n", "prediction": "30\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ngreen colored pencil | $0.76\nthick black marker | $0.45\npackage of pencil lead | $0.71\nmechanical pencil | $0.42\npurple colored pencil | $0.94", "question": "How much money does Brennan need to buy a green colored pencil and a purple colored pencil?", "answer": "1.70", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_green_colored_pencil = 0.76 \nprice_purple_colored_pencil = 0.94 \n# Total cost for both colored pencils\ntotal_cost = price_green_colored_pencil + price_purple_colored_pencil\nanswer = total_cost\n", "prediction": "1.7\n"}
{"context": "Read the following table regarding \"Train schedule\" and then answer a question.\n\nLocation | Arrive | Depart\nHillsboro | 9:55 A.M. | 10:20 A.M.\nCampbell | 11:20 A.M. | 11:50 A.M.\nLexington | 1:30 P.M. | 1:45 P.M.\nWestminster | 3:00 P.M. | 3:30 P.M.\nWinchester | 5:05 P.M. | 5:25 P.M.\nDayton | 6:40 P.M. | 6:55 P.M.\nKensington | 8:30 P.M. | 8:55 P.M.\nManchester | 10:35 P.M. | 10:55 P.M.\nLowell | 12:15 A.M. | 12:40 A.M.\nWeston | 1:35 A.M. | 2:05 A.M.", "question": "Look at the following schedule. When does the train depart from Winchester? Choose from the the options: ['8:55 P.M.', '5:05 P.M.', '5:25 P.M.', '3:30 P.M.']", "answer": "5:25 P.M.", "ques_type": "multi_choice", "choices": ["8:55 P.M.", "5:05 P.M.", "5:25 P.M.", "3:30 P.M."], "code": "# Python code, return answer \n# Departure time from Winchester\ndepart_winchester = '5:25 P.M.'\nanswer = depart_winchester\n", "prediction": "5:25 P.M.\n"}
{"context": "Read the following table regarding \"Amount Felipe spent on lunch\" and then answer a question.\n\nDay | Amount spent\nMonday | $5\nTuesday | $5\nWednesday | $3\nThursday | $7\nFriday | $8", "question": "In trying to calculate how much money could be saved by packing lunch, Felipe recorded the amount he spent on lunch each day. According to the table, what was the rate of change between Wednesday and Thursday?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Amount spent on lunch\nwednesday_amount = 3  # Wednesday\nthursday_amount = 7    # Thursday\n\n# Calculate the rate of change between Wednesday and Thursday\nrate_of_change = thursday_amount - wednesday_amount\nanswer = rate_of_change\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"Making finger puppets\" and then answer a question.\n\nFinger puppets made | Frequency\n0 | 12\n1 | 16\n2 | 14\n3 | 2\n4 | 9", "question": "The Kingwood Art Museum recorded how many finger puppets the children made at last Sunday's art workshop. How many children made exactly 1 finger puppet?", "answer": "16", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# From the table, we can directly see the frequency of children who made 1 finger puppet.\nchildren_made_one_puppet = 16\nanswer = children_made_one_puppet\n", "prediction": "16\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nfarfalle pasta | $2.49 per kg\nrotini pasta | $2.86 per kg\nspirali pasta | $2.96 per kg\npenne pasta | $2.25 per kg", "question": "Emmy went to the store. She bought 4 kilograms of rotini pasta and 4 kilograms of spirali pasta. How much did she spend?", "answer": "23.28", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_kg_rotini = 2.86 \nprice_per_kg_spirali = 2.96 \nkilograms_rotini = 4 \nkilograms_spirali = 4 \n\n# Calculate total cost\ntotal_cost_rotini = price_per_kg_rotini * kilograms_rotini\ntotal_cost_spirali = price_per_kg_spirali * kilograms_spirali\ntotal_cost = total_cost_rotini + total_cost_spirali\n\nanswer = total_cost\n", "prediction": "23.28\n"}
{"context": "Read the following table regarding \"Light rail train schedule\" and then answer a question.\n\ncity hall | 10:15 A.M. | 10:45 A.M. | 11:00 A.M.\nshopping mall | 10:30 A.M. | 11:00 A.M. | 11:15 A.M.\nswimming pool | 11:00 A.M. | 11:30 A.M. | 11:45 A.M.\nart museum | 11:15 A.M. | 11:45 A.M. | 12:00 P.M.\nhospital | 11:30 A.M. | 12:00 P.M. | 12:15 P.M.\nlibrary | 11:45 A.M. | 12:15 P.M. | 12:30 P.M.\npost office | 12:00 P.M. | 12:30 P.M. | 12:45 P.M.\nsoccer field | 12:30 P.M. | 1:00 P.M. | 1:15 P.M.\nuniversity | 1:00 P.M. | 1:30 P.M. | 1:45 P.M.", "question": "Look at the following schedule. How long does it take to get from the shopping mall to the hospital? Choose from the the options: ['1 hour', '15 minutes', '45 minutes', '30 minutes']", "answer": "1 hour", "ques_type": "multi_choice", "choices": ["1 hour", "15 minutes", "45 minutes", "30 minutes"], "code": "# Python code, return answer \n# From the schedule, identify the departure and arrival times\ndeparture_time = \"11:00 A.M.\"  # Departure from shopping mall\narrival_time = \"11:30 A.M.\"     # Arrival at hospital\n\n# Convert times to minutes past midnight for easier calculation\ndef time_to_minutes(time_str):\n    if 'P.M.' in time_str:\n        hours, minutes = map(int, time_str[:-5].split(':'))\n        hours += 12 if hours != 12 else 0\n    else:\n        hours, minutes = map(int, time_str[:-5].split(':'))\n        hours = 0 if hours == 12 else hours\n    return hours * 60 + minutes\n\n# Calculate travel time in minutes\ndeparture_minutes = time_to_minutes(departure_time)\narrival_minutes = time_to_minutes(arrival_time)\ntravel_time = arrival_minutes - departure_minutes\n\n# Determine the answer based on travel time\nif travel_time == 60:\n    answer = '1 hour'\nelif travel_time == 15:\n    answer = '15 minutes'\nelif travel_time == 45:\n    answer = '45 minutes'\nelif travel_time == 30:\n    answer = '30 minutes'\n\n", "prediction": "30 minutes\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of bouquets | Number of lilies\n1 | 5\n2 | 10\n3 | ?", "question": "Each bouquet has 5 lilies. How many lilies are in 3 bouquets?", "answer": "15", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nlilies_per_bouquet = 5\nnumber_of_bouquets = 3\n# Calculate the total number of lilies in 3 bouquets\ntotal_lilies = lilies_per_bouquet * number_of_bouquets\nanswer = total_lilies\n", "prediction": "15\n"}
{"context": "Read the following table regarding \"Subway riders\" and then answer a question.\n\nDay | Number of riders\nMonday | 2,651\nTuesday | 2,206\nWednesday | 2,706\nThursday | 3,194", "question": "A city recorded how many people rode the subway each day. How many people in total rode the subway on Tuesday and Wednesday?", "answer": "4,912", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of riders on Tuesday and Wednesday\ntuesday_riders = 2206\nwednesday_riders = 2706\n# Calculate total riders on Tuesday and Wednesday\ntotal_riders_tuesday_wednesday = tuesday_riders + wednesday_riders\nanswer = total_riders_tuesday_wednesday\n", "prediction": "4912\n"}
{"context": "Read the following table regarding \"Going to the library last month\" and then answer a question.\n\nNumber of trips | Frequency\n1 | 1\n2 | 8\n3 | 20\n4 | 9\n5 | 2", "question": "In considering whether to open a new branch, the city council examined the number of times some typical residents went to the library last month. How many people are there in all?", "answer": "40", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Calculate total number of people based on the trips and their frequencies\ntrips_data = {\n    1: 1,\n    2: 8,\n    3: 20,\n    4: 9,\n    5: 2\n}\n\ntotal_people = sum(frequency for frequency in trips_data.values())\nanswer = total_people\n", "prediction": "40\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nairplane ride | $787.00\nspeedboat ride | $403.00\nhelicopter ride | $250.00\nsailboat ride | $245.00\nhot air balloon ride | $543.00", "question": "How much money does Valentina need to buy a speedboat ride and an airplane ride?", "answer": "1,190", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the rides\nprice_airplane_ride = 787.00\nprice_speedboat_ride = 403.00\n# Total cost for both rides\ntotal_cost = price_airplane_ride + price_speedboat_ride\nanswer = total_cost\n", "prediction": "1190.0\n"}
{"context": "Read the following table regarding \"Cars sold\" and then answer a question.\n\nMonth | Number of cars\nMarch | 12\nApril | 18\nMay | 11\nJune | 14\nJuly | 20\nAugust | 16\nSeptember | 19\nOctober | 18", "question": "A car dealership tracked the number of cars sold each month. What is the mean of the numbers?", "answer": "16", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of cars sold each month\ncars_sold = [12, 18, 11, 14, 20, 16, 19, 18]\n\n# Calculate the mean\nmean_cars_sold = sum(cars_sold) / len(cars_sold)\nanswer = mean_cars_sold\n", "prediction": "16.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbran flakes | $5.96 per lb\nshredded wheat | $4.74 per lb\ngranola | $3.32 per lb\npuffed wheat | $4.46 per lb", "question": "Turner buys 1 pound of shredded wheat. What is the total cost?", "answer": "4.74", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_shredded_wheat = 4.74 \npounds_bought = 1 \n# Calculate total cost\ntotal_cost = price_per_pound_shredded_wheat * pounds_bought\nanswer = total_cost\n", "prediction": "4.74\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\noatmeal raisin cookie dough | $7 per pound\nchocolate chip cookie dough | $5 per pound\nsnickerdoodle cookie dough | $5 per pound\ndouble chocolate cookie dough | $6 per pound\npeanut butter cookie dough | $6 per pound\ngingersnap cookie dough | $4 per pound", "question": "Chad went to the store and bought 3/4 of a pound of oatmeal raisin cookie dough. How much did he spend?", "answer": "5.25", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_oatmeal_raisin = 7 \npounds_bought = 0.75 \n# Calculate the total cost\ntotal_cost = price_per_pound_oatmeal_raisin * pounds_bought\nanswer = total_cost\n", "prediction": "5.25\n"}
{"context": "Read the following table regarding \"Race results\" and then answer a question.\n\nRunner | Time (minutes)\nOliver | 23\nRosanne | 39\nAshley | 33\nWarren | 35\nMaria | 42\nHazel | 38\nBaldwin | 35\nLacey | 43", "question": "Several students participated in a race. What is the mean of the numbers?", "answer": "36", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Race times in minutes\ntimes = [23, 39, 33, 35, 42, 38, 35, 43]\n# Calculate the mean\nmean_time = sum(times) / len(times)\nanswer = mean_time\n", "prediction": "36.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nstar-shaped beads | $2/kg\nspherical beads | $2/kg\noval beads | $3/kg\nheart-shaped beads | $3/kg\nsquare beads | $3/kg\nflower-shaped beads | $2/kg\nrectangular beads | $3/kg", "question": "How much would it cost to buy 4+9/10 kilograms of heart-shaped beads?", "answer": "14.70", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_kg_heart_shape = 3  # cost of heart-shaped beads per kilogram\nkilograms_to_buy = 4 + 9/10  # total kilograms to buy\n\n# Calculate total cost\ntotal_cost = price_per_kg_heart_shape * kilograms_to_buy\nanswer = total_cost\n", "prediction": "14.700000000000001\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npoetry book | $15\nhistory book | $15\ngeography book | $11\nspelling workbook | $10\npicture book | $10\ncoloring book | $18", "question": "How much money does Nate need to buy a history book and a spelling workbook?", "answer": "25", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_history_book = 15\nprice_spelling_workbook = 10\n# Total cost for a history book and a spelling workbook\ntotal_cost = price_history_book + price_spelling_workbook\nanswer = total_cost\n", "prediction": "25\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nquartz crystal | $0.05\nsmooth piece of marble | $0.06\npiece of fool's gold | $0.03\norange agate | $0.05\npiece of polished granite | $0.08\npiece of green slate | $0.09", "question": "Kendra has $0.19. How much money will Kendra have left if she buys a piece of green slate and a piece of fool's gold?", "answer": "0.07", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items Kendra wants to buy\nprice_green_slate = 0.09 \nprice_fools_gold = 0.03 \n# Total cost of the items\ntotal_cost = price_green_slate + price_fools_gold\n# Kendra's initial amount of money\ninitial_amount = 0.19 \n# Calculate the remaining amount after purchase\nremaining_amount = initial_amount - total_cost\nanswer = remaining_amount\n", "prediction": "0.07\n"}
{"context": "Read the following table regarding \"Writing poems\" and then answer a question.\n\nPoems written | Frequency\n1 | 1\n2 | 4\n3 | 12\n4 | 7\n5 | 11\n6 | 2", "question": "Students at Lexington Middle School wrote and submitted poems for a district-wide writing contest. How many students wrote at least 4 poems?", "answer": "20", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of students who wrote at least 4 poems\nstudents_4_or_more_poems = 7 + 11 + 2  # 4 poems, 5 poems, and 6 poems\nanswer = students_4_or_more_poems\n", "prediction": "20\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nshiny gold shell | $0.01\nwhole sand dollar | $0.08\nscallop shell | $0.05\nbeautiful yellow shell | $0.05\nwhite spindle shell | $0.06", "question": "Donald has $0.07. Does he have enough to buy a scallop shell and a shiny gold shell? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# Prices of the items\nprice_scallop_shell = 0.05 \nprice_shiny_gold_shell = 0.01 \ntotal_cost = price_scallop_shell + price_shiny_gold_shell\ndonald_money = 0.07\n\n# Check if Donald has enough money\nif donald_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"Computers in classrooms\" and then answer a question.\n\nTeacher | Number of computers\nMs. Cohen | 6\nMr. Schmidt | 5\nMr. Lim | 5\nMrs. Rossi | 5\nMiss Murphy | 6\nMrs. Jansen | 8", "question": "The teachers at a middle school counted how many computers they had in their classrooms. What is the range of the numbers?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of computers for each teacher\ncomputers = [6, 5, 5, 5, 6, 8]\n# Calculate the range\nrange_of_computers = max(computers) - min(computers)\nanswer = range_of_computers\n", "prediction": "3\n"}
{"context": "Read the following table regarding \"Apples per tree\" and then answer a question.\n\nStem | Leaf \n3 | 5, 5, 8, 9\n4 | 0, 3, 5, 7\n5 | \n6 | \n7 | 1, 3\n8 | \n9 | 0", "question": "A farmer counted the number of apples on each tree in her orchard. How many trees have exactly 35 apples?", "answer": "2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The stem-and-leaf plot indicates the number of apples on each tree.\n# The stem '3' with leaf '5' indicates 35 apples.\n# Count how many times 35 appears.\ntrees_with_35_apples = 1  # From the stem \"3 | 5\", there is 1 tree with exactly 35 apples.\nanswer = trees_with_35_apples\n", "prediction": "1\n"}
{"context": "Read the following table regarding \"Books per shelf\" and then answer a question.\n\nStem | Leaf \n1 | 8\n2 | 1, 5, 6, 9\n3 | 9\n4 | \n5 | 2, 7\n6 | 1, 2, 4, 6, 7, 9\n7 | 6\n8 | \n9 | 0", "question": "The librarian at the public library counted the number of books on each shelf. What is the smallest number of books?", "answer": "18", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The smallest number of books corresponds to the smallest value in the stem-and-leaf display.\nsmallest_books = 18  # From the stem \"1 | 8\", the value is 18 books.\nanswer = smallest_books\n", "prediction": "18\n"}
{"context": "Read the following table regarding \"Scores on a quiz show\" and then answer a question.\n\nScore | Frequency\n5 | 17\n6 | 14\n7 | 1\n8 | 4\n9 | 12\n10 | 8", "question": "A game show program recorded the scores of its contestants. How many contestants scored more than 8?", "answer": "20", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of scores greater than 8\nfrequency_scores_more_than_8 = 12 + 8  # Scores of 9 and 10\nanswer = frequency_scores_more_than_8\n", "prediction": "20\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\noyster shell | $0.31\nwhole sand dollar | $0.57\npink and white striped shell | $0.79\npolished silver top shell | $0.29", "question": "How much more does a pink and white striped shell cost than a polished silver top shell?", "answer": "0.50", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_pink_white_striped_shell = 0.79 \ncost_polished_silver_top_shell = 0.29 \n# Calculate the difference in cost\ndifference_cost = cost_pink_white_striped_shell - cost_polished_silver_top_shell\nanswer = difference_cost\n", "prediction": "0.5\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbook of crossword puzzles | $5\nmap of the United States | $2\nmap of the world | $7\nbook of brainteasers | $5\nairplane calendar | $6\ncoloring book | $4", "question": "How much money does Layla need to buy a coloring book and a book of crossword puzzles?", "answer": "9", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_coloring_book = 4 \nprice_crossword_puzzles = 5 \n# Total money needed\ntotal_cost = price_coloring_book + price_crossword_puzzles\nanswer = total_cost\n", "prediction": "9\n"}
{"context": "Read the following table regarding \"Minutes spent rehearsing\" and then answer a question.\n\nDay | Minutes\nThursday | 172\nFriday | 127\nSaturday | 117\nSunday | 122", "question": "Logan recalled how many minutes he had spent at theater rehearsal in the past 4 days. On which day did Logan rehearse the most? Choose from the the options: ['Thursday', 'Friday', 'Saturday', 'Sunday']", "answer": "Thursday", "ques_type": "multi_choice", "choices": ["Thursday", "Friday", "Saturday", "Sunday"], "code": "# Python code, return answer \nrehearsal_minutes = {\n    'Thursday': 172,\n    'Friday': 127,\n    'Saturday': 117,\n    'Sunday': 122\n}\n\n# Find the day with the most minutes rehearsed\nmost_minutes_day = max(rehearsal_minutes, key=rehearsal_minutes.get)\nanswer = most_minutes_day\n", "prediction": "Thursday\n"}
{"context": "Read the following table regarding \"Spinning a wheel numbered 1 through 5\" and then answer a question.\n\nNumber spun | Frequency\n1 | 17\n2 | 12\n3 | 10\n4 | 0\n5 | 20", "question": "A game show viewer monitors how often a wheel numbered 1 through 5 stops at each number. How many people spun a number greater than 3?", "answer": "20", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of numbers greater than 3\nfrequency_4 = 0  # Number 4\nfrequency_5 = 20  # Number 5\n# Total number of people who spun a number greater than 3\npeople_spun_greater_than_3 = frequency_4 + frequency_5\nanswer = people_spun_greater_than_3\n", "prediction": "20\n"}
{"context": "Read the following table regarding \"Distribution of plant types\" and then answer a question.\n\nType | Number of plants\nAnnuals | 57\nPerennials | 66\nBiennials | 63", "question": "A plant nursery in Greenville keeps records of how many of its plants are annuals, biennials, and perennials. What fraction of the plants are biennials? Simplify your answer.", "answer": "21/62", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total number of plants\ntotal_plants = 57 + 66 + 63\n# Number of biennial plants\nbiennials = 63\n# Calculate the fraction of plants that are biennials\nfraction_biennials = biennials / total_plants\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_fraction = Fraction(biennials, total_plants).limit_denominator()\nanswer = simplified_fraction\n", "prediction": "21/62\n"}
{"context": "Read the following table regarding \"Running miles\" and then answer a question.\n\nName | Miles\nRuben | 4\nPam | 10\nAdriana | 3\nDeion | 4\nJaylen | 3\nHazel | 6", "question": "The members of the track team compared how many miles they ran last week. What is the mean of the numbers?", "answer": "5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of miles run by each member\nmiles = [4, 10, 3, 4, 3, 6]\n# Calculate the mean\nmean_miles = sum(miles) / len(miles)\nanswer = mean_miles\n", "prediction": "5.0\n"}
{"context": "Read the following table regarding \"Pieces of pepperoni per pizza\" and then answer a question.\n\nStem | Leaf \n0 | 9\n1 | 3, 5\n2 | 1, 1, 3, 8\n3 | 8\n4 | 9", "question": "Tina counted the number of pieces of pepperoni on each pizza she made. What is the largest number of pieces of pepperoni?", "answer": "49", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest number of pieces of pepperoni corresponds to the largest value in the stem-and-leaf display.\nlargest_pepperoni = 49  # From the stem \"4 | 9\", the value is 49 pieces.\nanswer = largest_pepperoni\n", "prediction": "49\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nfleece blanket | $13.00\npillow | $12.00\nyellow bath towel | $18.00\nflannel sheet | $17.00\nquilt | $17.00", "question": "Judy has $66.00. How much money will Judy have left if she buys a yellow bath towel and a fleece blanket?", "answer": "35", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items Judy wants to buy\nprice_yellow_bath_towel = 18.00\nprice_fleece_blanket = 13.00\n# Total cost of the items\ntotal_cost = price_yellow_bath_towel + price_fleece_blanket\n# Judy's initial amount\ninitial_amount = 66.00\n# Calculate the remaining amount\nmoney_left = initial_amount - total_cost\nanswer = money_left\n", "prediction": "35.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n8 | 20\n9 | 10\n10 | 0", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "linear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the slope between consecutive points\npoints = [(8, 20), (9, 10), (10, 0)]\n\n# Calculate slopes between each pair of points\nslopes = []\nfor i in range(len(points) - 1):\n    x1, y1 = points[i]\n    x2, y2 = points[i + 1]\n    slope = (y2 - y1) / (x2 - x1)\n    slopes.append(slope)\n\n# Check if all slopes are the same\nis_linear = all(slope == slopes[0] for slope in slopes)\n\nanswer = 'linear' if is_linear else 'nonlinear'\n", "prediction": "NameError(\"name 'slopes' is not defined\")"}
{"context": "Read the following table regarding \"Dance studio schedule\" and then answer a question.\n\nClass | Begin | End\nsalsa dance | 9:05 A.M. | 9:35 A.M.\nwestern dance | 9:45 A.M. | 11:05 A.M.\nbeginning ballet | 11:15 A.M. | 11:55 A.M.\nintermediate ballet | 12:00 P.M. | 1:10 P.M.\nhip hop dance | 1:25 P.M. | 2:05 P.M.\nswing dance | 2:10 P.M. | 3:15 P.M.", "question": "Look at the following schedule. Which class begins at 2.10 P.M.? Choose from the the options: ['swing dance class', 'hip hop dance class', 'beginning ballet class', 'western dance class']", "answer": "swing dance class", "ques_type": "multi_choice", "choices": ["swing dance class", "hip hop dance class", "beginning ballet class", "western dance class"], "code": "# Python code, return answer \n# Checking the schedule for the class that begins at 2:10 P.M.\nclass_schedule = {\n    'salsa dance': ('9:05 A.M.', '9:35 A.M.'),\n    'western dance': ('9:45 A.M.', '11:05 A.M.'),\n    'beginning ballet': ('11:15 A.M.', '11:55 A.M.'),\n    'intermediate ballet': ('12:00 P.M.', '1:10 P.M.'),\n    'hip hop dance': ('1:25 P.M.', '2:05 P.M.'),\n    'swing dance': ('2:10 P.M.', '3:15 P.M.')\n}\n\n# Identify the class that starts at 2:10 P.M.\nfor dance_class, timings in class_schedule.items():\n    if timings[0] == '2:10 P.M.':\n        answer = dance_class\n        break\n\n", "prediction": "swing dance\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nplane ticket to Tokyo | $971.00\nplane ticket to New York City | $454.00\nplane ticket to San Francisco | $716.00\nplane ticket to London | $599.00", "question": "How much more does a plane ticket to Tokyo cost than a plane ticket to New York City?", "answer": "517", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_tokyo = 971.00 \ncost_nyc = 454.00 \n# Calculate the difference\ndifference = cost_tokyo - cost_nyc\nanswer = difference\n", "prediction": "517.0\n"}
{"context": "Read the following table regarding \"Birds per flock\" and then answer a question.\n\nStem | Leaf \n2 | 0, 0, 0\n3 | 2, 3, 5, 5, 8\n4 | 2, 5, 5, 5\n5 | 0, 2, 3, 6, 6, 7, 9\n6 | 0, 4, 5, 6, 9\n7 | 5", "question": "The bird watcher counted the number of birds in each flock that passed overhead. What is the largest number of birds?", "answer": "75", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest number of birds corresponds to the largest value in the stem-and-leaf display.\nlargest_bird_count = 75  # From the stem \"7 | 5\", the value is 75 birds.\nanswer = largest_bird_count\n", "prediction": "75\n"}
{"context": "Read the following table regarding \"Train tickets sold\" and then answer a question.\n\nDay | Number of tickets\nMonday | 42\nTuesday | 35\nWednesday | 38\nThursday | 43\nFriday | 36\nSaturday | 43\nSunday | 45", "question": "The transportation company tracked the number of train tickets sold in the past 7 days. What is the median of the numbers?", "answer": "42", "ques_type": "free_text", "choices": null, "code": "", "prediction": "ERROR"}
{"context": "Read the following table regarding \"Broken lights per string\" and then answer a question.\n\nStem | Leaf \n2 | 2, 3, 4, 6, 9\n3 | 3, 8, 9\n4 | 0, 2, 7, 9\n5 | 0, 6, 6, 7\n6 | 0, 0, 1, 8, 9\n7 | 3, 8", "question": "While hanging Christmas lights for neighbors, Evan counted the number of broken lights on each string. How many strings had at least 50 broken lights but less than 80 broken lights?", "answer": "11", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Analyzing the stem-and-leaf display to count strings with broken lights between 50 and 79.\nbroken_lights_counts = [\n    22, 23, 24, 26, 29,  # 2 | 2, 3, 4, 6, 9\n    33, 38, 39,          # 3 | 3, 8, 9\n    40, 42, 47, 49,      # 4 | 0, 2, 7, 9\n    50, 56, 56, 57,      # 5 | 0, 6, 6, 7\n    60, 60, 61, 68, 69,  # 6 | 0, 0, 1, 8, 9\n    73, 78               # 7 | 3, 8\n]\n\n# Counting strings with at least 50 but less than 80 broken lights\ncount = sum(1 for lights in broken_lights_counts if 50 <= lights < 80)\nanswer = count\n", "prediction": "11\n"}
{"context": "Read the following table regarding \"People on the bus\" and then answer a question.\n\nDay | Number of people\nSaturday | 97\nSunday | 94\nMonday | 91\nTuesday | 93", "question": "A bus driver paid attention to how many passengers her bus had each day. On which day did the bus have the most passengers? Choose from the the options: ['Saturday', 'Sunday', 'Monday', 'Tuesday']", "answer": "Saturday", "ques_type": "multi_choice", "choices": ["Saturday", "Sunday", "Monday", "Tuesday"], "code": "# Python code, return answer \npassenger_counts = {\n    'Saturday': 97,\n    'Sunday': 94,\n    'Monday': 91,\n    'Tuesday': 93\n}\n# Find the day with the most passengers\nmost_passengers_day = max(passenger_counts, key=passenger_counts.get)\nanswer = most_passengers_day\n", "prediction": "Saturday\n"}
{"context": "Read the following table regarding \"Taking photographs\" and then answer a question.\n\nPhotographs taken | Frequency\n0 | 9\n1 | 0\n2 | 16\n3 | 1\n4 | 18\n5 | 4\n6 | 12", "question": "While compiling photos for an album, Maureen noted the number of photographs taken by each of her friends and family. How many people took more than 1 photograph?", "answer": "51", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of photographs taken\nfrequency = {\n    0: 9,\n    1: 0,\n    2: 16,\n    3: 1,\n    4: 18,\n    5: 4,\n    6: 12\n}\n\n# Calculate the number of people who took more than 1 photograph\npeople_more_than_one = sum(frequency[i] for i in range(2, 7))\nanswer = people_more_than_one\n", "prediction": "NameError(\"name 'frequency' is not defined\")"}
{"context": "Read the following table regarding \"Spinning a wheel numbered 1 through 5\" and then answer a question.\n\nNumber spun | Frequency\n1 | 3\n2 | 14\n3 | 4\n4 | 9\n5 | 0", "question": "A game show viewer monitors how often a wheel numbered 1 through 5 stops at each number. How many people spun a number less than 3?", "answer": "17", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of numbers less than 3\nfrequency_1 = 3  # Number spun 1\nfrequency_2 = 14 # Number spun 2\n# Total frequency for numbers less than 3\ntotal_spun_less_than_3 = frequency_1 + frequency_2\nanswer = total_spun_less_than_3\n", "prediction": "17\n"}
{"context": "Read the following table regarding \"Scarf lengths (centimeters)\" and then answer a question.\n\nStem | Leaf \n6 | 9\n7 | 0, 1, 1, 2, 3, 3, 7, 9\n8 | 0, 0, 3, 6, 7, 9\n9 | 0, 0", "question": "Stefan measured the length of each scarf in the clothing store where he works. How many scarves are at least 60 centimeters but less than 80 centimeters?", "answer": "9", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Counting scarves with lengths between 60 cm (inclusive) and 80 cm (exclusive).\nscarf_lengths = [69, 70, 71, 71, 72, 73, 73, 77, 79, 80, 80, 83, 86, 87, 89, 90, 90]  # Converted from stem-and-leaf\nscarf_count = sum(1 for length in scarf_lengths if 60 <= length < 80)\nanswer = scarf_count\n", "prediction": "9\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nflute | $472\nclarinet | $494\nbanjo | $343\ntrombone | $204\ndrum set | $208\nguitar | $584", "question": "How much more does a guitar cost than a clarinet?", "answer": "90", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_guitar = 584 \ncost_clarinet = 494 \n# Calculate the difference in cost\ncost_difference = cost_guitar - cost_clarinet\nanswer = cost_difference\n", "prediction": "90\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbrisket | $3/lb\nround | $8/lb\nchuck | $10/lb\nshank | $10/lb\nloin | $8/lb\nrib | $5/lb", "question": "Ethan wants to buy 3+1/4 pounds of rib. How much will he spend?", "answer": "16.25", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Price per pound of rib\nprice_per_pound_rib = 5 \n# Amount of rib in pounds\npounds_of_rib = 3 + 1/4 \n# Calculate the total cost\ntotal_cost = price_per_pound_rib * pounds_of_rib\nanswer = total_cost\n", "prediction": "16.25\n"}
{"context": "Read the following table regarding \"Vacant apartments\" and then answer a question.\n\nApartment complex | August | September\nAlameda Apartments | 11 | 17\nCity Apartments | 16 | 20\nDowntown Apartments | 14 | 13\nShadyside Apartments | 5 | 5\nUniversity Apartments | 9 | 12", "question": "Livingston Property Management reviewed the number of vacant apartments at each its apartment complexes over time. In September, which complex had the most vacant apartments? Choose from the the options: ['City Apartments', 'Downtown Apartments', 'University Apartments', 'Alameda Apartments']", "answer": "City Apartments", "ques_type": "multi_choice", "choices": ["City Apartments", "Downtown Apartments", "University Apartments", "Alameda Apartments"], "code": "# Python code, return answer \nvacant_apartments_september = {\n    'Alameda Apartments': 17,\n    'City Apartments': 20,\n    'Downtown Apartments': 13,\n    'Shadyside Apartments': 5,\n    'University Apartments': 12\n}\n# Find the complex with the most vacant apartments in September\nmost_vacant_complex = max(vacant_apartments_september, key=vacant_apartments_september.get)\nanswer = most_vacant_complex\n", "prediction": "City Apartments\n"}
{"context": "Read the following table regarding \"Temperature at noon\" and then answer a question.\n\nDay | Temperature (\u00c2\u00b0C)\nSunday | 4\nMonday | 4\nTuesday | 6\nWednesday | 5\nThursday | 6\nFriday | 4\nSaturday | 5", "question": "Erin graphed the temperature at noon for 7 days. What is the mode of the numbers?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nfrom statistics import mode\n\n# List of temperatures for the week\ntemperatures = [4, 4, 6, 5, 6, 4, 5]\n\n# Calculate the mode\nmode_temperature = mode(temperatures)\nanswer = mode_temperature\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nrabbit | $21.88\npot-bellied pig | $50.88\ntarantula | $25.55\nbearded dragon | $74.21", "question": "How much more does a pot-bellied pig cost than a rabbit?", "answer": "29", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_rabbit = 21.88\ncost_pot_bellied_pig = 50.88\n# Calculate the difference in cost\ndifference_cost = cost_pot_bellied_pig - cost_rabbit\nanswer = difference_cost\n", "prediction": "29.000000000000004\n"}
{"context": "Read the following table regarding \"Silver beads per bracelet\" and then answer a question.\n\nStem | Leaf \n2 | 1, 3, 5, 5, 6, 6, 9\n3 | 0, 1, 2, 5, 6, 7, 8\n4 | 0, 2, 6, 6, 8, 9, 9, 9\n5 | 6, 8, 9", "question": "Sandeep counted the number of silver beads on each bracelet at Booneville Jewelry, the store where he works. How many bracelets had at least 47 silver beads?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Analyzing the stem-and-leaf display to count the number of bracelets with at least 47 silver beads.\n# The values are interpreted as follows:\n# 2 | 1, 3, 5, 5, 6, 6, 9  => 21, 23, 25, 25, 26, 26, 29 (7 values)\n# 3 | 0, 1, 2, 5, 6, 7, 8  => 30, 31, 32, 35, 36, 37, 38 (7 values)\n# 4 | 0, 2, 6, 6, 8, 9, 9, 9  => 40, 42, 46, 46, 48, 49, 49, 49 (8 values)\n# 5 | 6, 8, 9  => 56, 58, 59 (3 values)\n\n# Count the number of values that are at least 47\nbead_counts = [21, 23, 25, 25, 26, 26, 29, \n               30, 31, 32, 35, 36, 37, 38,\n               40, 42, 46, 46, 48, 49, 49, 49,\n               56, 58, 59]\n\n# Count the number of bracelets with at least 47 silver beads\ncount_at_least_47 = sum(1 for count in bead_counts if count >= 47)\nanswer = count_at_least_47\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | A Footlong shoe | A Toes Knows shoe\nDispleased | 3 | 2\nPleased | 2 | 4", "question": "A wilderness retail store asked a consulting company to do an analysis of their hiking shoe customers. The consulting company gathered data from each customer that purchased hiking shoes, and recorded the shoe brand and the customer's level of happiness. What is the probability that a randomly selected customer is pleased and purchased a Footlong shoe? Simplify any fractions.", "answer": "2/11", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total customers in the survey\ndispleased_footlong = 3\npleased_footlong = 2\ndispleased_toes_knows = 2\npleased_toes_knows = 4\n\ntotal_customers = (displeased_footlong + pleased_footlong + \n                   displeased_toes_knows + pleased_toes_knows)\n\n# Customers that are pleased and purchased a Footlong shoe\npleased_footlong_customers = pleased_footlong\n\n# Calculate the probability\nprobability_pleased_footlong = pleased_footlong_customers / total_customers\n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(pleased_footlong_customers, total_customers).limit_denominator()\nanswer = simplified_probability\n", "prediction": "2/11\n"}
{"context": "Read the following table regarding \"Restaurant ratings\" and then answer a question.\n\nStem | Leaf \n0 | 3, 3, 5\n1 | \n2 | 0\n3 | \n4 | 8\n5 | 0", "question": "A food magazine published a listing of local restaurant ratings. How many restaurants were rated exactly 4 points?", "answer": "0", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# From the stem-and-leaf display, the ratings are represented as follows:\n# The stem '4' has one leaf '8', meaning there is one restaurant rated 4 points.\n\n# Count the number of restaurants rated exactly 4 points\nratings_count = 1  # Since the leaf is '8' there is 1 restaurant rated 4 points.\nanswer = ratings_count\n", "prediction": "1\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nstrawberry ice cream | $2.30 per kg\ncherry ice cream | $1.79 per kg\nmint ice cream | $0.95 per kg\ncoffee ice cream | $1.99 per kg", "question": "Kenny bought 4 kilograms of strawberry ice cream and 2 kilograms of cherry ice cream. How much did he spend?", "answer": "12.78", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices per kilogram\nprice_strawberry = 2.30 \nprice_cherry = 1.79 \n\n# Quantities bought\nkg_strawberry = 4 \nkg_cherry = 2 \n\n# Calculate total cost\ntotal_cost = (price_strawberry * kg_strawberry) + (price_cherry * kg_cherry)\nanswer = total_cost\n", "prediction": "12.78\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npiece of black obsidian | $0.59\norange agate | $0.74\npiece of black mica | $0.26\npumice stone | $0.72", "question": "How much money does Anthony need to buy 2 pieces of black obsidian and 7 pumice stones?", "answer": "6.22", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_black_obsidian = 0.59 \nprice_pumice_stone = 0.72 \n# Calculate the total cost\ntotal_cost = (2 * price_black_obsidian) + (7 * price_pumice_stone)\nanswer = total_cost\n", "prediction": "6.22\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nfootball ticket | $83.53\ntennis ticket | $66.87\nsoccer ticket | $89.27\nhockey ticket | $38.10\nbasketball ticket | $92.75", "question": "How much money does Kinsley need to buy a basketball ticket and a football ticket?", "answer": "176.28", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nfootball_ticket_price = 83.53 \nbasketball_ticket_price = 92.75 \n# Total cost for both tickets\ntotal_cost = football_ticket_price + basketball_ticket_price\nanswer = total_cost\n", "prediction": "176.28\n"}
{"context": "Read the following table regarding \"Club membership\" and then answer a question.\n\nClub | Number of members\ngeology club | 185\nphotography club | 118\nart club | 158\nSpanish club | 159", "question": "The local high school found out how many members each club had. Which club has the fewest members? Choose from the the options: ['geology club', 'photography club', 'art club', 'Spanish club']", "answer": "photography club", "ques_type": "multi_choice", "choices": ["geology club", "photography club", "art club", "Spanish club"], "code": "# Python code, return answer \nclubs = {\n    'geology club': 185,\n    'photography club': 118,\n    'art club': 158,\n    'Spanish club': 159\n}\n# Find the club with the fewest members\nfewest_members_club = min(clubs, key=clubs.get)\nanswer = fewest_members_club\n", "prediction": "photography club\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$140 | 16,900 | 12,400\n$190 | 13,000 | 13,600\n$240 | 9,100 | 14,800\n$290 | 5,200 | 16,000\n$340 | 1,300 | 17,200", "question": "Look at the table. Then answer the question. At a price of $190, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "surplus", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \nquantity_demanded_at_190 = 13000\nquantity_supplied_at_190 = 13600\n\n# Determine if there is a shortage or surplus\nif quantity_demanded_at_190 < quantity_supplied_at_190:\n    answer = 'surplus'\nelse:\n    answer = 'shortage'\n\n", "prediction": "surplus\n"}
{"context": "Read the following table regarding \"Lemon-flavored candies per bag\" and then answer a question.\n\nStem | Leaf \n6 | 1, 2, 3, 9\n7 | 8\n8 | 3, 5\n9 | 0", "question": "A machine at the candy factory dispensed different numbers of lemon-flavored candies into various bags. What is the smallest number of lemon-flavored candies?", "answer": "61", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The smallest number of candies corresponds to the smallest value in the stem-and-leaf display.\nsmallest_candies = 61  # From the stem \"6 | 1\", the value is 61 candies.\nanswer = smallest_candies\n", "prediction": "61\n"}
{"context": "Read the following table regarding \"Characters per book\" and then answer a question.\n\nStem | Leaf \n1 | 3, 3, 8, 9\n2 | 1, 2, 3, 3, 7\n3 | 2, 5, 5\n4 | 0, 7\n5 | 0, 2, 2, 5, 9", "question": "Helen kept track of the number of characters in each book she read. How many books had at least 30 characters but fewer than 40 characters?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Extracting the number of characters from the stem-and-leaf display\ncharacters = [13, 13, 18, 19, 21, 22, 23, 23, 27, 32, 35, 35, 40, 47, 50, 52, 52, 55, 59]\n\n# Count the number of books with at least 30 characters but fewer than 40\ncount_books = sum(1 for char in characters if 30 <= char < 40)\nanswer = count_books\n", "prediction": "3\n"}
{"context": "Read the following table regarding \"Balloons sold\" and then answer a question.\n\nDay | Number of balloons\nSaturday | 74\nSunday | 78\nMonday | 74\nTuesday | 71\nWednesday | 72\nThursday | 75", "question": "The manager of a party supply store researched how many balloons it sold in the past 6 days. What is the mean of the numbers?", "answer": "74", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of balloons sold each day\nballoons_sold = [74, 78, 74, 71, 72, 75]\n# Calculate the mean\nmean_balloons = sum(balloons_sold) / len(balloons_sold)\nanswer = mean_balloons\n", "prediction": "74.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | 2010 | 2011\nSpruce wood | 3 | 6\nAsh wood | 3 | 6", "question": "Every summer, Josiah goes on a week-long canoe trip with his childhood camp friends. After the trip, he usually purchases some oars from the destination city. His collection of oars is organized by year and type of wood. What is the probability that a randomly selected oar was made from spruce wood and was purchased in 2010? Simplify any fractions.", "answer": "1/6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total number of oars purchased in each year\nspruce_2010 = 3\nash_2010 = 3\nspruce_2011 = 6\nash_2011 = 6\n\n# Total oars purchased in 2010\ntotal_2010 = spruce_2010 + ash_2010\n# Probability of selecting an oar made from spruce wood purchased in 2010\nprobability_spruce_2010 = spruce_2010 / total_2010\n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(spruce_2010, total_2010).limit_denominator()\nanswer = simplified_probability\n", "prediction": "1/2\n"}
{"context": "Read the following table regarding \"Average waiting time at the DMV\" and then answer a question.\n\nMonth | Waiting time (minutes)\nJune | 36\nJuly | 41\nAugust | 34\nSeptember | 28\nOctober | 36", "question": "An administrator at the Department of Motor Vehicles (DMV) tracked the average wait time from month to month. According to the table, what was the rate of change between July and August?", "answer": "-7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Average waiting times\nwaiting_time_july = 41\nwaiting_time_august = 34\n\n# Calculate the rate of change between July and August\nrate_of_change = waiting_time_august - waiting_time_july\nanswer = rate_of_change\n", "prediction": "-7\n"}
{"context": "Read the following table regarding \"Soccer tournament schedule\" and then answer a question.\n\nGame | Begin | End\nWaves versus Alligators | 10:00 A.M. | 11:30 A.M.\nDolphins versus Bears | 10:40 A.M. | 12:10 P.M.\nThunder versus Eagles | 11:15 A.M. | 12:45 P.M.\nSharks versus Storm | 11:30 A.M. | 1:00 P.M.\nLions versus Blue Jays | 11:45 A.M. | 1:15 P.M.\nLightning versus Coyotes | 12:10 P.M. | 1:40 P.M.\nFire versus Blizzard | 1:05 P.M. | 2:35 P.M.\nHawks versus Jaguars | 1:30 P.M. | 3:00 P.M.\nCardinals versus Cobras | 2:25 P.M. | 3:55 P.M.", "question": "Look at the following schedule. Which game ends at 11.30 A.M.? Choose from the the options: ['Waves versus Alligators game', 'Fire versus Blizzard game', 'Thunder versus Eagles game', 'Dolphins versus Bears game']", "answer": "Waves versus Alligators game", "ques_type": "multi_choice", "choices": ["Waves versus Alligators game", "Fire versus Blizzard game", "Thunder versus Eagles game", "Dolphins versus Bears game"], "code": "# Python code, return answer \n# The game that ends at 11:30 A.M. is the one that we will look for in the schedule.\nend_time_1130 = '11:30 A.M.'\ngames_schedule = {\n    'Waves versus Alligators': ('10:00 A.M.', '11:30 A.M.'),\n    'Dolphins versus Bears': ('10:40 A.M.', '12:10 P.M.'),\n    'Thunder versus Eagles': ('11:15 A.M.', '12:45 P.M.'),\n    'Sharks versus Storm': ('11:30 A.M.', '1:00 P.M.'),\n    'Lions versus Blue Jays': ('11:45 A.M.', '1:15 P.M.'),\n    'Lightning versus Coyotes': ('12:10 P.M.', '1:40 P.M.'),\n    'Fire versus Blizzard': ('1:05 P.M.', '2:35 P.M.'),\n    'Hawks versus Jaguars': ('1:30 P.M.', '3:00 P.M.'),\n    'Cardinals versus Cobras': ('2:25 P.M.', '3:55 P.M.'),\n}\n\n# Find which game ends at 11:30 A.M.\nanswer = [game for game, times in games_schedule.items() if times[1] == end_time_1130]\nanswer = answer[0] if answer else None\n", "prediction": "NameError(\"name 'end_time_1130' is not defined\")"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of branches | Number of flowers\n1 | 5\n2 | 10\n3 | 15\n4 | 20\n5 | 25\n6 | ?", "question": "Each branch has 5 flowers. How many flowers are on 6 branches?", "answer": "30", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nflowers_per_branch = 5 \nnumber_of_branches = 6 \n# Calculate the total number of flowers on 6 branches\ntotal_flowers = flowers_per_branch * number_of_branches\nanswer = total_flowers\n", "prediction": "30\n"}
{"context": "Read the following table regarding \"Eating ice cream last month\" and then answer a question.\n\nTimes eaten | Frequency\n0 | 8\n1 | 17\n2 | 9\n3 | 20\n4 | 0", "question": "Liz's Treats counted how many times its most frequent customers ate ice cream last month. How many customers are there in all?", "answer": "54", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Calculate total number of customers based on frequency table\nfrequency_counts = {\n    0: 8,\n    1: 17,\n    2: 9,\n    3: 20,\n    4: 0\n}\n\ntotal_customers = sum(frequency_counts.values())\nanswer = total_customers\n", "prediction": "54\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nAfrican rice | $4/lb\nbasmati rice | $5/lb\nwhite rice | $7/lb\nbrown rice | $8/lb\nsticky rice | $5/lb", "question": "Valeria buys 3.2 pounds of African rice. What is the total cost?", "answer": "12.80", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_african_rice = 4  # $4 per pound\npounds_bought = 3.2  # 3.2 pounds\n# Calculate total cost\ntotal_cost = price_per_pound_african_rice * pounds_bought\nanswer = total_cost\n", "prediction": "12.8\n"}
{"context": "Read the following table regarding \"Football touchdowns scored last season\" and then answer a question.\n\nTouchdowns scored | Frequency\n0 | 8\n1 | 20\n2 | 15\n3 | 10\n4 | 0\n5 | 1", "question": "Josie, a fantasy football fan, carefully studied the number of touchdowns completed by her favorite players last season. How many players scored at least 1 touchdown last season?", "answer": "46", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total players who scored at least 1 touchdown\nplayers_scoring_at_least_1 = 20 + 15 + 10 + 1  # Adding frequency of touchdowns 1, 2, 3, and 5\nanswer = players_scoring_at_least_1\n", "prediction": "46\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nsilk scraps | $8 per lb\nlace scraps | $12 per lb\ndenim scraps | $9 per lb\nfelt scraps | $10 per lb\ncanvas scraps | $10 per lb", "question": "Lola buys 1.4 pounds of lace scraps. What is the total cost?", "answer": "16.80", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_lb_lace_scraps = 12  # Price per pound for lace scraps\npounds_bought = 1.4  # Pounds of lace scraps bought\n# Calculate total cost\ntotal_cost = price_per_lb_lace_scraps * pounds_bought\nanswer = total_cost\n", "prediction": "16.799999999999997\n"}
{"context": "Read the following table regarding \"Pairs of shoes per store\" and then answer a question.\n\nStem | Leaf \n3 | 5, 6, 6\n4 | 0, 2\n5 | 0, 1, 1, 2, 4\n6 | 3, 3\n7 | 3, 4\n8 | 2, 3, 4, 7, 8\n9 | 0, 0, 0, 0", "question": "Hunter counted the number of pairs of shoes for sale at each of the shoe stores in the mall. How many stores have exactly 90 pairs of shoes?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# From the stem-and-leaf display, we need to find how many stores have exactly 90 pairs of shoes.\n# The stem '9' indicates the tens place, and the leaf '0' repeated four times indicates the units.\nnumber_of_stores_with_90_pairs = 4  # Since there are four '0's in the stem 9.\nanswer = number_of_stores_with_90_pairs\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"Drawing a card between 2 and 8\" and then answer a question.\n\nNumber drawn | Frequency\n2 | 14\n3 | 13\n4 | 0\n5 | 19\n6 | 7\n7 | 12\n8 | 16", "question": "As part of a math lab, Darell tracked the number of times his classmates drew a number between 2 and 8. Which number was drawn the fewest times?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency data for each number drawn\nfrequency = {\n    2: 14,\n    3: 13,\n    4: 0,\n    5: 19,\n    6: 7,\n    7: 12,\n    8: 16\n}\n# Find the number drawn the fewest times\nfewest_drawn_number = min(frequency, key=frequency.get)\nanswer = fewest_drawn_number\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"Class schedule\" and then answer a question.\n\nSubject | Begin | End\nRussian | 8:10 A.M. | 9:40 A.M.\nAncient Civilizations | 10:20 A.M. | 11:45 A.M.\nPlant Biology | 12:20 P.M. | 1:45 P.M.\nAdvanced Algebra | 2:10 P.M. | 3:00 P.M.\nJapanese | 3:40 P.M. | 5:00 P.M.\nEuropean History | 5:10 P.M. | 5:45 P.M.", "question": "Look at the following schedule. Which class ends at 5.45 P.M.? Choose from the the options: ['Plant Biology class', 'Russian class', 'Japanese class', 'European History class']", "answer": "European History class", "ques_type": "multi_choice", "choices": ["Plant Biology class", "Russian class", "Japanese class", "European History class"], "code": "# Python code, return answer \n# The class that ends at 5:45 P.M. is European History.\nending_time = \"5:45 P.M.\"\nanswer = 'European History class'\n", "prediction": "European History class\n"}
{"context": "Read the following table regarding \"Club membership\" and then answer a question.\n\nClub | Number of members\nJapanese club | 9\nfilm club | 9\nhistory club | 8\nspeech club | 9\nFrench club | 8", "question": "The local high school found out how many members each club had. What is the mode of the numbers?", "answer": "9", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nfrom collections import Counter\n\n# Number of members in each club\nmembers_count = [9, 9, 8, 9, 8]\n\n# Calculate the mode\nmode_count = Counter(members_count).most_common(1)[0][0]\nanswer = mode_count\n", "prediction": "9\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nhovercraft | $2,810\ngolf cart | $9,384\ntrailer | $6,652\nhang glider | $9,079\ncanoe | $2,511\nspeedboat | $9,880", "question": "How much money does Brenda need to buy 7 hang gliders?", "answer": "63,553", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_hang_glider = 9079 \nnumber_of_hang_gliders = 7 \n# Calculate total cost\ntotal_cost = price_per_hang_glider * number_of_hang_gliders\nanswer = total_cost\n", "prediction": "63553\n"}
{"context": "Read the following table regarding \"Hockey games won by Franklin High\" and then answer a question.\n\nYear | Games won\n2014 | 19\n2015 | 12\n2016 | 12\n2017 | 17\n2018 | 8", "question": "A pair of Franklin High School hockey fans counted the number of games won by the school each year. According to the table, what was the rate of change between 2015 and 2016?", "answer": "0", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of games won in 2015 and 2016\ngames_won_2015 = 12\ngames_won_2016 = 12\n\n# Calculate the rate of change between 2015 and 2016\nrate_of_change = games_won_2016 - games_won_2015\nanswer = rate_of_change\n", "prediction": "0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nAfrican safari vacation package | $8,630.00\nCaribbean vacation package | $3,920.00\nHawaiian vacation package | $6,637.00\nJamaican vacation package | $9,269.00\nEuropean vacation package | $8,988.00", "question": "How much more does a Jamaican vacation package cost than a Caribbean vacation package?", "answer": "5,349", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncaribbean_cost = 3920.00 \njamaican_cost = 9269.00 \n# Calculate the difference in cost\ncost_difference = jamaican_cost - caribbean_cost\nanswer = cost_difference\n", "prediction": "5349.0\n"}
{"context": "Read the following table regarding \"Plants per garden\" and then answer a question.\n\nStem | Leaf \n3 | 2\n4 | 1, 8\n5 | 1\n6 | 1\n7 | 3", "question": "The members of the local garden club tallied the number of plants in each person's garden. How many gardens have at least 30 plants?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The stem-and-leaf display corresponds to the following number of plants:\n# 32 (3 | 2)\n# 41, 48 (4 | 1, 8)\n# 51 (5 | 1)\n# 61 (6 | 1)\n# 73 (7 | 3)\n\n# Count how many gardens have at least 30 plants\nplants_counts = [32, 41, 48, 51, 61, 73]\ngardens_with_at_least_30_plants = len(plants_counts)  # All gardens have at least 30 plants\nanswer = gardens_with_at_least_30_plants\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ntow truck | $8,991\ncanoe | $3,864\nboxcar | $7,900\njet ski | $5,902", "question": "How much money does Lauren need to buy a boxcar and a jet ski?", "answer": "13,802", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the boxcar and jet ski\nprice_boxcar = 7900\nprice_jet_ski = 5902\n# Total money needed to buy both\ntotal_money_needed = price_boxcar + price_jet_ski\nanswer = total_money_needed\n", "prediction": "13802\n"}
{"context": "Read the following table regarding \"Science articles read\" and then answer a question.\n\nName | Number of science articles\nKaren | 173\nDanny | 682\nLisa | 126\nAlan | 130", "question": "Danny's classmates revealed how many science articles they read. Together, how many science articles did Danny and Lisa read?", "answer": "808", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ndanny_articles = 682 \nlisa_articles = 126 \n# Calculate the total number of science articles read by Danny and Lisa\ntotal_articles_danny_lisa = danny_articles + lisa_articles\nanswer = total_articles_danny_lisa\n", "prediction": "808\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nlemon sours | $1 per pound\nyogurt-covered peanuts | $1 per pound\ngummy bears | $2 per pound\nlicorice | $4 per pound", "question": "How much would it cost to buy 3 pounds of gummy bears, 3 pounds of yogurt-covered peanuts, and 2 pounds of licorice?", "answer": "17", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices per pound\nprice_per_pound_gummy_bears = 2\nprice_per_pound_yogurt_covered_peanuts = 1\nprice_per_pound_licorice = 4\n\n# Pounds to buy\npounds_gummy_bears = 3\npounds_yogurt_covered_peanuts = 3\npounds_licorice = 2\n\n# Calculate total cost\ntotal_cost = (price_per_pound_gummy_bears * pounds_gummy_bears +\n               price_per_pound_yogurt_covered_peanuts * pounds_yogurt_covered_peanuts +\n               price_per_pound_licorice * pounds_licorice)\n\nanswer = total_cost\n", "prediction": "17\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | Bronze status | Silver status\n0 checked bags | 4 | 4\n1 checked bag | 8 | 4", "question": "A flight attendant was counting the number of passengers present to see if any upgrades could be offered. The flight attendant's list contained passengers' Frequent Flyer status as well as number of bags checked. What is the probability that a randomly selected passenger has 1 checked bag and silver status? Simplify any fractions.", "answer": "1/5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total passengers for each category\nbronze_bags_0 = 4\nbronze_bags_1 = 8\nsilver_bags_0 = 4\nsilver_bags_1 = 4\n\n# Total passengers with 0 and 1 checked bag\ntotal_passengers_with_0_bags = bronze_bags_0 + silver_bags_0\ntotal_passengers_with_1_bags = bronze_bags_1 + silver_bags_1\ntotal_passengers = total_passengers_with_0_bags + total_passengers_with_1_bags\n\n# Passengers with 1 checked bag and silver status\npassengers_with_1_bag_and_silver = silver_bags_1\n\n# Calculate the probability\nprobability = passengers_with_1_bag_and_silver / total_passengers\n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(passengers_with_1_bag_and_silver, total_passengers).limit_denominator()\nanswer = simplified_probability\n", "prediction": "1/5\n"}
{"context": "Read the following table regarding \"Scores in a trivia game\" and then answer a question.\n\nScore | Frequency\n5 | 2\n6 | 8\n7 | 4\n8 | 11\n9 | 1\n10 | 14", "question": "The coach of the Academic Bowl recorded the scores in a trivia game to determine who would represent the school at the regional competition. How many people scored more than 9?", "answer": "14", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of scores greater than 9\nscores_above_9_frequency = 0  # Score 10 has frequency of 14\nfrequency_score_10 = 14\nscores_above_9_frequency += frequency_score_10\n\nanswer = scores_above_9_frequency\n", "prediction": "14\n"}
{"context": "Read the following table regarding \"Science articles read\" and then answer a question.\n\nName | Number of science articles\nDylan | 7\nKenji | 5\nNellie | 8\nBraden | 9\nTisha | 10\nMaureen | 9", "question": "Dylan's classmates revealed how many science articles they read. What is the mean of the numbers?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of science articles read by each classmate\narticles_read = [7, 5, 8, 9, 10, 9]\n\n# Calculate the mean\nmean_articles = sum(articles_read) / len(articles_read)\nanswer = mean_articles\n", "prediction": "8.0\n"}
{"context": "Read the following table regarding \"Pizza sales\" and then answer a question.\n\nRestaurant | Cheese pizzas | Vegetarian pizzas\nNew York Slice | $10 | $19\nThe Real Chicago | $17 | $19\nDan's Deep Dish | $6 | $12\nThe Big Cheese | $6 | $16", "question": "A food industry researcher compiled the revenues of several pizzerias. Which restaurant made more from pizzas, New York Slice or The Real Chicago? Choose from the the options: ['The Real Chicago', 'New York Slice']", "answer": "The Real Chicago", "ques_type": "multi_choice", "choices": ["The Real Chicago", "New York Slice"], "code": "# Python code, return answer \n# Revenue calculation for each restaurant\nrevenue_new_york_slice = 10 + 19  # Cheese + Vegetarian\nrevenue_real_chicago = 17 + 19  # Cheese + Vegetarian\n\n# Determine which restaurant made more money from pizzas\nif revenue_real_chicago > revenue_new_york_slice:\n    answer = 'The Real Chicago'\nelse:\n    answer = 'New York Slice'\n\n", "prediction": "The Real Chicago\n"}
{"context": "Read the following table regarding \"Building heights (meters)\" and then answer a question.\n\nStem | Leaf \n1 | 0, 2, 7, 8\n2 | 3\n3 | 3, 4, 9\n4 | 0, 7\n5 | 4, 6, 8\n6 | 8, 9\n7 | 4\n8 | 1", "question": "An architecture student measured the heights of all the buildings downtown. How many buildings are at least 27 meters tall?", "answer": "12", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Extract building heights from the stem-and-leaf display\nbuilding_heights = [10, 12, 17, 18, 23, 33, 34, 39, 40, 47, 54, 56, 58, 68, 69, 74, 81]  # Corresponding heights in meters\n# Count the buildings that are at least 27 meters tall\nbuildings_at_least_27_meters = sum(1 for height in building_heights if height >= 27)\nanswer = buildings_at_least_27_meters\n", "prediction": "12\n"}
{"context": "Read the following table regarding \"Eating ice cream last month\" and then answer a question.\n\nTimes eaten | Frequency\n0 | 3\n1 | 4\n2 | 17\n3 | 7\n4 | 0\n5 | 1", "question": "Perry's Treats counted how many times its most frequent customers ate ice cream last month. How many customers ate ice cream at least 1 time?", "answer": "29", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of customers for each times eaten\nfrequency = {\n    0: 3,\n    1: 4,\n    2: 17,\n    3: 7,\n    4: 0,\n    5: 1\n}\n\n# Calculate the number of customers who ate ice cream at least 1 time\ncustomers_at_least_once = sum(frequency[times] for times in frequency if times > 0)\nanswer = customers_at_least_once\n", "prediction": "NameError(\"name 'frequency' is not defined\")"}
{"context": "Read the following table regarding \"Fish per tank\" and then answer a question.\n\nStem | Leaf \n1 | 0, 0, 2, 3, 4, 5\n2 | 8, 9\n3 | 1, 2, 3, 4, 4, 7\n4 | 8, 8, 8\n5 | 2, 9\n6 | 5, 6, 8", "question": "A pet store owner had his staff count the number of fish in each tank. What is the largest number of fish per tank?", "answer": "68", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest number of fish corresponds to the highest value in the stem-and-leaf display.\nlargest_fish_count = 68  # From the stem \"6 | 5, 6, 8\", the value is 68.\nanswer = largest_fish_count\n", "prediction": "68\n"}
{"context": "Read the following table regarding \"Library schedule\" and then answer a question.\n\nClass | Begin | End\nMr. Harper's class | 7:25 A.M. | 8:20 A.M.\nMrs. Suzuki's class | 8:25 A.M. | 9:30 A.M.\nMrs. Carlson's class | 9:50 A.M. | 10:20 A.M.\nMs. Dyer's class | 10:30 A.M. | 11:10 A.M.\nMr. Mason's class | 11:20 A.M. | 11:55 A.M.\nMrs. McCoy's class | 12:00 P.M. | 12:45 P.M.\nMs. Mueller's class | 1:05 P.M. | 1:55 P.M.\nMs. Hampton's class | 2:00 P.M. | 2:50 P.M.", "question": "Look at the following schedule. When does Ms. Hampton's class begin? Choose from the the options: ['2:50 P.M.', '1:55 P.M.', '9:50 A.M.', '2:00 P.M.']", "answer": "2:00 P.M.", "ques_type": "multi_choice", "choices": ["2:50 P.M.", "1:55 P.M.", "9:50 A.M.", "2:00 P.M."], "code": "# Python code, return answer \n# Ms. Hampton's class begins at 2:00 P.M.\nstart_time_ms_hampton = \"2:00 P.M.\"\noptions = ['2:50 P.M.', '1:55 P.M.', '9:50 A.M.', '2:00 P.M.']\n# Check if start time is in options\nif start_time_ms_hampton in options:\n    answer = start_time_ms_hampton\n", "prediction": "2:00 P.M.\n"}
{"context": "Read the following table regarding \"Ferry fares\" and then answer a question.\n\nFerry | Car | Bicycle\nSouthport-Fort Fisher | $5 | $2\nMukilteu-Clinton | $7 | $5\nOcracoke | $15 | $3\nFauntleroy-Vashon | $15 | $5\nSeattle-Bremerton | $12 | $8", "question": "For an economics project, Jim determined the cost of ferry rides for bicycles and cars. How much higher is the fare for a car on the Seattle-Bremerton ferry than on the Mukilteu-Clinton ferry?", "answer": "5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Ferry fares for the specific routes\nfare_seattle_bremerton_car = 12  # Cost for a car on Seattle-Bremerton ferry\nfare_mukilteu_clinton_car = 7     # Cost for a car on Mukilteu-Clinton ferry\n\n# Calculate the difference\ndifference_fare = fare_seattle_bremerton_car - fare_mukilteu_clinton_car\nanswer = difference_fare\n", "prediction": "5\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ntoy guitar | $25.03\nremote control car | $16.92\nmystery game | $14.34\nmodel airplane | $38.89\nchess board | $12.98\ntrivia game | $31.99", "question": "Danny has $103.16. How much money will Danny have left if he buys a model airplane and a mystery game?", "answer": "49.93", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items Danny wants to buy\nprice_model_airplane = 38.89\nprice_mystery_game = 14.34\n# Total cost of the items\ntotal_cost = price_model_airplane + price_mystery_game\n# Danny's initial amount\ninitial_amount = 103.16\n# Remaining amount after the purchase\nremaining_amount = initial_amount - total_cost\nanswer = remaining_amount\n", "prediction": "49.92999999999999\n"}
{"context": "Read the following table regarding \"Making leaf rubbings\" and then answer a question.\n\nLeaf rubbings made | Frequency\n0 | 20\n1 | 13\n2 | 3\n3 | 11", "question": "After a field trip to the park, students in Mrs. Garcia's art class counted the number of leaf rubbings they had made. How many students made at least 2 leaf rubbings?", "answer": "14", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of leaf rubbings\nfrequency = {\n    0: 20,\n    1: 13,\n    2: 3,\n    3: 11\n}\n# Calculate the number of students who made at least 2 leaf rubbings\nstudents_at_least_2 = frequency[2] + frequency[3]\nanswer = students_at_least_2\n", "prediction": "14\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of toy bins | Number of red blocks\n1 | 2\n2 | 4\n3 | 6\n4 | 8\n5 | ?", "question": "Each toy bin has 2 red blocks. How many red blocks are in 5 toy bins?", "answer": "10", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Each toy bin contains 2 red blocks\nblocks_per_bin = 2\n# Calculate the number of red blocks in 5 toy bins\ntoy_bins = 5\nred_blocks_in_five_bins = blocks_per_bin * toy_bins\nanswer = red_blocks_in_five_bins\n", "prediction": "10\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$35 | 21,100 | 12,300\n$45 | 18,400 | 14,600\n$55 | 15,700 | 16,900\n$65 | 13,000 | 19,200\n$75 | 10,300 | 21,500", "question": "Look at the table. Then answer the question. At a price of $65, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "surplus", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \n# Quantity demanded and supplied at the price of $65\nquantity_demanded_at_65 = 13000\nquantity_supplied_at_65 = 19200\n\n# Determine if there is a shortage or surplus\nif quantity_demanded_at_65 < quantity_supplied_at_65:\n    answer = 'surplus'\nelse:\n    answer = 'shortage'\n\n", "prediction": "surplus\n"}
{"context": "Read the following table regarding \"Quiz show scores\" and then answer a question.\n\nName | Score\nVince | 445\nHerman | 425\nTom | 422\nWesley | 452", "question": "The players on a quiz show received the following scores. Who had the highest score? Choose from the the options: ['Vince', 'Herman', 'Tom', 'Wesley']", "answer": "Wesley", "ques_type": "multi_choice", "choices": ["Vince", "Herman", "Tom", "Wesley"], "code": "# Python code, return answer \nscores = {\n    'Vince': 445,\n    'Herman': 425,\n    'Tom': 422,\n    'Wesley': 452\n}\n# Find the player with the highest score\nhighest_score_player = max(scores, key=scores.get)\nanswer = highest_score_player\n", "prediction": "Wesley\n"}
{"context": "Read the following table regarding \"Trees planted\" and then answer a question.\n\nOrganization | Number of trees planted\nMake it Green | 270\nDreaming Green | 454\nNew Planet | 207\nPlant It | 371", "question": "An environmental agency examined how many trees were planted by different organizations. In all, how many trees were planted by New Planet and Plant It?", "answer": "578", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ntrees_new_planet = 207\ntrees_plant_it = 371\n# Total trees planted by New Planet and Plant It\ntotal_trees = trees_new_planet + trees_plant_it\nanswer = total_trees\n", "prediction": "578\n"}
{"context": "Read the following table regarding \"Students in applied majors\" and then answer a question.\n\nSchool | Intake\nElectronics | 170\nArchitecture | 470\nCivil engineering | 280\nMechanical engineering | 200", "question": "Castroville University offers four applied majors and monitors the number of students in each. What fraction of the students in applied majors are majoring in mechanical engineering? Simplify your answer.", "answer": "5/28", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total students in applied majors\ntotal_students = 170 + 470 + 280 + 200\n# Students majoring in mechanical engineering\nmechanical_engineering_students = 200\n# Calculate the fraction of students in mechanical engineering\nfraction_mechanical_engineering = mechanical_engineering_students / total_students\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_fraction = Fraction(mechanical_engineering_students, total_students).limit_denominator()\nanswer = simplified_fraction\n", "prediction": "5/28\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n15 | 3\n5 | 18\n13 | 0\n11 | 4", "question": "Look at this table. Is this relation a function? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# A relation is a function if each input (x value) is associated with exactly one output (y value).\n# We will check if any x values are repeated.\ndata = {\n    15: 3,\n    5: 18,\n    13: 0,\n    11: 4\n}\n# Check for duplicate x values\nis_function = len(data) == len(set(data.keys()))\nanswer = 'yes' if is_function else 'no'\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n15 | 2\n11 | 8\n1 | 4\n12 | 13", "question": "Look at this table. Is this relation a function? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# A relation is a function if each input (x value) is associated with exactly one output (y value).\n# We will check if any x values are repeated in the table.\n\ndata = [(15, 2), (11, 8), (1, 4), (12, 13)]\nx_values = [x for x, y in data]\n\n# Check for duplicates in x_values\nis_function = len(x_values) == len(set(x_values))\nanswer = 'yes' if is_function else 'no'\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npine nuts | $5.43 per kilogram\nBrazil nuts | $3.93 per kilogram\nchestnuts | $5.14 per kilogram\nmacadamia nuts | $4.00 per kilogram\npistachios | $2.86 per kilogram\npeanuts | $1.95 per kilogram", "question": "If Edwin buys 4 kilograms of chestnuts, 5 kilograms of peanuts, and 5 kilograms of macadamia nuts, how much will he spend?", "answer": "50.31", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices per kilogram\nprice_per_kg_chestnuts = 5.14 \nprice_per_kg_peanuts = 1.95 \nprice_per_kg_macadamia = 4.00 \n\n# Quantities purchased\nkg_chestnuts = 4 \nkg_peanuts = 5 \nkg_macadamia = 5 \n\n# Total cost calculation\ntotal_cost = (price_per_kg_chestnuts * kg_chestnuts + \n               price_per_kg_peanuts * kg_peanuts + \n               price_per_kg_macadamia * kg_macadamia)\n\nanswer = total_cost\n", "prediction": "50.31\n"}
{"context": "Read the following table regarding \"Going to the library last month\" and then answer a question.\n\nNumber of trips | Frequency\n1 | 1\n2 | 12\n3 | 6\n4 | 9\n5 | 13\n6 | 16", "question": "In considering whether to open a new branch, the city council examined the number of times some typical residents went to the library last month. How many people went to the library at least 3 times last month?", "answer": "44", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency data from the table\nfrequency_data = {\n    1: 1,\n    2: 12,\n    3: 6,\n    4: 9,\n    5: 13,\n    6: 16\n}\n\n# Calculate the number of people who went to the library at least 3 times\npeople_at_least_3_times = frequency_data[3] + frequency_data[4] + frequency_data[5] + frequency_data[6]\nanswer = people_at_least_3_times\n", "prediction": "44\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbreakfast burrito | $9\nfried eggs | $3\nbowl of melon | $1\nwaffle with berries | $1", "question": "Nora has $11. Does she have enough to buy fried eggs and a breakfast burrito? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \ncost_fried_eggs = 3\ncost_breakfast_burrito = 9\ntotal_cost = cost_fried_eggs + cost_breakfast_burrito\nnora_money = 11\n\n# Check if Nora has enough money\nif nora_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n12 | 7\n13 | 10\n14 | 13", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "linear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the differences in y-values for equal differences in x-values.\nx_values = [12, 13, 14]\ny_values = [7, 10, 13]\n\n# Calculate the differences\ndifferences = [y_values[i] - y_values[i - 1] for i in range(1, len(y_values))]\n# If the differences are constant, the function is linear.\nis_linear = all(diff == differences[0] for diff in differences)\n\nanswer = 'linear' if is_linear else 'nonlinear'\n", "prediction": "NameError(\"name 'y_values' is not defined\")"}
{"context": "Read the following table regarding \"Broken lights per string\" and then answer a question.\n\nStem | Leaf \n4 | 3, 5\n5 | \n6 | 2\n7 | 5, 6\n8 | \n9 | 0", "question": "While hanging Christmas lights for neighbors, Kelsey counted the number of broken lights on each string. How many strings had at least 50 broken lights?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# From the stem-and-leaf display, we can extract the counts of broken lights.\nbroken_lights_counts = [43, 45, 62, 75, 76, 90]  # Based on the stem and leaves\n\n# Count the number of strings with at least 50 broken lights\ncount_at_least_50 = sum(1 for count in broken_lights_counts if count >= 50)\nanswer = count_at_least_50\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"Cars sold\" and then answer a question.\n\nMonth | Number of cars\nNovember | 268\nDecember | 286\nJanuary | 289\nFebruary | 226", "question": "A car dealership tracked the number of cars sold each month. In which month did the dealership sell the most cars? Choose from the the options: ['November', 'December', 'January', 'February']", "answer": "January", "ques_type": "multi_choice", "choices": ["November", "December", "January", "February"], "code": "# Python code, return answer \ncars_sold = {\n    'November': 268,\n    'December': 286,\n    'January': 289,\n    'February': 226\n}\n# Find the month with the most cars sold\nmost_cars_month = max(cars_sold, key=cars_sold.get)\nanswer = most_cars_month\n", "prediction": "January\n"}
{"context": "Read the following table regarding \"Average waiting time at the DMV\" and then answer a question.\n\nMonth | Waiting time (minutes)\nMarch | 10\nApril | 7\nMay | 40\nJune | 6\nJuly | 50", "question": "An administrator at the Department of Motor Vehicles (DMV) tracked the average wait time from month to month. According to the table, what was the rate of change between May and June?", "answer": "-34", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Waiting times in May and June\nwaiting_time_may = 40\nwaiting_time_june = 6\n# Calculate the rate of change\nrate_of_change = waiting_time_june - waiting_time_may\nanswer = rate_of_change\n", "prediction": "-34\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nlentils | $3/pound\nsunflower seeds | $3/pound\nsoybeans | $1/pound\npumpkin seeds | $3/pound\nflax seeds | $8/pound\nsesame seeds | $5/pound", "question": "Seth went to the store. He bought 1+3/10 pounds of lentils. How much did he spend?", "answer": "3.90", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_lentils = 3  # Price of lentils per pound\npounds_bought = 1 + 3/10  # Total pounds of lentils bought\n# Calculate the total cost\ntotal_cost = price_per_pound_lentils * pounds_bought\nanswer = total_cost\n", "prediction": "3.9000000000000004\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n0 | 20\n1 | 12\n2 | 4", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "linear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the differences in y-values for equal changes in x-values.\ny_values = [20, 12, 4]\nx_values = [0, 1, 2]\n\n# Calculate the differences\ndifference_1 = y_values[1] - y_values[0]  # y(1) - y(0)\ndifference_2 = y_values[2] - y_values[1]  # y(2) - y(1)\n\n# Check if the differences are constant\nif difference_1 == difference_2:\n    answer = 'linear'\nelse:\n    answer = 'nonlinear'\n", "prediction": "linear\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ncoffee mug | $2.93\nglass measuring cup | $5.81\ncookie jar | $5.92\nserving platter | $8.06\nglass bowl | $6.97", "question": "Eddie has $9.50. Does he have enough to buy a coffee mug and a glass bowl? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \ncoffee_mug_price = 2.93\nglass_bowl_price = 6.97\ntotal_cost = coffee_mug_price + glass_bowl_price\neddies_money = 9.50\n\nif eddies_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n5 | 0\n6 | 1\n7 | 4", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "nonlinear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear or nonlinear, we can check the differences in y-values for equal increments of x.\n# Calculate the differences\nx_values = [5, 6, 7]\ny_values = [0, 1, 4]\n\n# Calculate the first differences\nfirst_differences = [y_values[i] - y_values[i - 1] for i in range(1, len(y_values))]\n\n# Check if the first differences are constant\nis_linear = all(diff == first_differences[0] for diff in first_differences)\n\nanswer = 'linear' if is_linear else 'nonlinear'\n", "prediction": "NameError(\"name 'y_values' is not defined\")"}
{"context": "Read the following table regarding \"Train schedule\" and then answer a question.\n\nSpringfield | 11:00 A.M. | 11:15 A.M. | 6:30 P.M. | 8:45 P.M. | 9:00 P.M.\nAshland | 12:00 P.M. | 12:15 P.M. | 7:30 P.M. | 9:45 P.M. | 10:00 P.M.\nLexington | 1:15 P.M. | 1:30 P.M. | 8:45 P.M. | 11:00 P.M. | 11:15 P.M.\nBurlington | 2:45 P.M. | 3:00 P.M. | 10:15 P.M. | 12:30 A.M. | 12:45 A.M.\nNewberry | 4:15 P.M. | 4:30 P.M. | 11:45 P.M. | 2:00 A.M. | 2:15 A.M.\nLancaster | 4:45 P.M. | 5:00 P.M. | 12:15 A.M. | 2:30 A.M. | 2:45 A.M.\nCedarburg | 5:15 P.M. | 5:30 P.M. | 12:45 A.M. | 3:00 A.M. | 3:15 A.M.\nMorristown | 6:00 P.M. | 6:15 P.M. | 1:30 A.M. | 3:45 A.M. | 4:00 A.M.\nNewberg | 7:00 P.M. | 7:15 P.M. | 2:30 A.M. | 4:45 A.M. | 5:00 A.M.", "question": "Look at the following schedule. Nina just missed the 12.15 P.M. train at Ashland. What time is the next train? Choose from the the options: ['3:15 A.M.', '12:45 A.M.', '10:15 P.M.', '7:30 P.M.']", "answer": "7:30 P.M.", "ques_type": "multi_choice", "choices": ["3:15 A.M.", "12:45 A.M.", "10:15 P.M.", "7:30 P.M."], "code": "# Python code, return answer \n# The next train after 12:15 P.M. from Ashland is at 7:30 P.M.\nnext_train_time = \"7:30 P.M.\"\nanswer = next_train_time\n", "prediction": "7:30 P.M.\n"}
{"context": "Read the following table regarding \"Soccer practice\" and then answer a question.\n\nMonth | Number of practices\nNovember | 24\nMarch | 23\nApril | 28\nMay | 22", "question": "Josh looked over his calendar to see how many times he had soccer practice each month. In which month did Josh have the most soccer practices? Choose from the the options: ['November', 'March', 'April', 'May']", "answer": "April", "ques_type": "multi_choice", "choices": ["November", "March", "April", "May"], "code": "# Python code, return answer \npractices = {\n    'November': 24,\n    'March': 23,\n    'April': 28,\n    'May': 22\n}\n# Find the month with the most practices\nmost_practices_month = max(practices, key=practices.get)\nanswer = most_practices_month\n", "prediction": "April\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$280 | 18,300 | 2,400\n$450 | 16,400 | 3,700\n$620 | 14,500 | 5,000\n$790 | 12,600 | 6,300\n$960 | 10,700 | 7,600", "question": "Look at the table. Then answer the question. At a price of $960, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "shortage", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \n# Quantity demanded and supplied at the price of $960\nquantity_demanded = 10700\nquantity_supplied = 7600\n\n# Determine if there is a shortage or surplus\nif quantity_demanded > quantity_supplied:\n    answer = 'shortage'\nelse:\n    answer = 'surplus'\n\n", "prediction": "shortage\n"}
{"context": "Read the following table regarding \"Aid received per capita from the U.S.\" and then answer a question.\n\nCountry | 1980 | 1990\nAlgeria | $9 | $10\nAfghanistan | $2 | $7\nLibya | $5 | $5\nPakistan | $14 | $10", "question": "An economics student recorded the amount of per-capita aid that the U.S. gave to various countries during the 1900s. Per capita, how much more aid did Pakistan receive in 1980 than in 1990?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Aid received by Pakistan in 1980 and 1990\naid_1980_pakistan = 14\naid_1990_pakistan = 10\n# Calculate the difference in aid received\ndifference_aid = aid_1980_pakistan - aid_1990_pakistan\nanswer = difference_aid\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"Law firm hours billed\" and then answer a question.\n\nPartner | Hours billed\nJenna | 690\nMaddie | 950\nJamie | 1,000\nGrayson | 910\nSidney | 890\nMitchell | 890", "question": "A law firm in Weston kept track of how many hours were billed by each partner last year. What fraction of the hours were billed by Jamie? Simplify your answer.", "answer": "100/533", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total hours billed by all partners\ntotal_hours = 690 + 950 + 1000 + 910 + 890 + 890\n# Hours billed by Jamie\njamie_hours = 1000\n# Calculate the fraction of hours billed by Jamie\nfraction_jamie = jamie_hours / total_hours\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_fraction = Fraction(jamie_hours, total_hours).limit_denominator()\nanswer = simplified_fraction\n", "prediction": "100/533\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbead with green and blue swirls | $0.52\nstar-shaped silver bead | $0.47\nshiny metal bead | $0.28\nlong red bead | $0.72\nthick gray bead | $0.44\nwhite bead with black spots | $0.27", "question": "Elena has $0.74. Does she have enough to buy a shiny metal bead and a thick gray bead? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# Prices of the beads\nprice_shiny_metal_bead = 0.28\nprice_thick_gray_bead = 0.44\n\n# Total cost for both beads\ntotal_cost = price_shiny_metal_bead + price_thick_gray_bead\n\n# Amount Elena has\nelena_amount = 0.74\n\n# Check if she has enough money\nif elena_amount >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"Characters per book\" and then answer a question.\n\nStem | Leaf \n2 | 1, 4\n3 | 6\n4 | 0, 0, 2, 3, 7, 8, 9\n5 | 1, 4", "question": "Kamal kept track of the number of characters in each book he read. How many books had at least 30 characters but fewer than 50 characters?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Based on the stem-and-leaf display, we can determine the number of characters in each book.\n# We need to count the books with characters between 30 and 49 (inclusive of 30 and exclusive of 50).\n\n# Books with 30-49 characters:\nbooks = [21, 24, 36, 40, 40, 42, 43, 47, 48, 51, 54]\n\n# Filter the books to find those that have at least 30 but fewer than 50 characters\ncount_books = sum(1 for book in books if 30 <= book < 50)\n\nanswer = count_books\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"Number of birds\" and then answer a question.\n\nDay | Number of birds\nFriday | 2\nSaturday | 6\nSunday | 6\nMonday | 2\nTuesday | 6", "question": "Tyler went on a bird watching trip and jotted down the number of birds he saw each day. What is the mode of the numbers?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nfrom statistics import mode\n\n# List of the number of birds seen each day\nbirds_count = [2, 6, 6, 2, 6]\n\n# Calculate the mode\nanswer = mode(birds_count)\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\napricot | $0.40\nnectarine | $0.33\ntangerine | $0.69\npear | $0.51", "question": "Tammy has $1.06. Does she have enough to buy a tangerine and a nectarine? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \nprice_tangerine = 0.69 \nprice_nectarine = 0.33 \ntotal_cost = price_tangerine + price_nectarine\ntammy_budget = 1.06\n\n# Check if Tammy has enough money\nif tammy_budget >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"Chocolate consumption per capita (kg)\" and then answer a question.\n\nCountry | 2002 | 2005\nAustralia | 4 | 5\nGermany | 10 | 11\nDenmark | 9 | 8\nBelgium | 8 | 11", "question": "Cody's Candies has been studying how much chocolate people have been eating in different countries. In 2002, how much more chocolate did Denmark consume per capita than Australia?", "answer": "5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ndenmark_consumption_2002 = 9  # kg\naustralia_consumption_2002 = 4  # kg\n# Calculate the difference in chocolate consumption\ndifference = denmark_consumption_2002 - australia_consumption_2002\nanswer = difference\n", "prediction": "5\n"}
{"context": "Read the following table regarding \"Ducks per pond\" and then answer a question.\n\nStem | Leaf \n4 | 0, 4, 5, 6\n5 | 2, 4\n6 | 1, 2, 3, 9\n7 | 0, 1, 4, 5, 6, 9", "question": "Damon counted the number of ducks at each pond in the city. How many ponds had at least 50 ducks but fewer than 68 ducks?", "answer": "5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Extract the number of ducks from the stem-and-leaf display\nducks_count = [40, 44, 45, 46, 52, 54, 61, 62, 63, 69, 70, 71, 74, 75, 76, 79]\n\n# Count the number of ponds with at least 50 but fewer than 68 ducks\ncount_of_ponds = sum(1 for ducks in ducks_count if 50 <= ducks < 68)\nanswer = count_of_ponds\n", "prediction": "5\n"}
{"context": "Read the following table regarding \"Scores on the math quiz\" and then answer a question.\n\nScore | Frequency\n5 | 8\n6 | 6\n7 | 2\n8 | 19\n9 | 10\n10 | 13", "question": "Mr. Kerr recorded the scores of his students on the most recent math quiz. How many students scored more than 9?", "answer": "13", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of scores greater than 9\nscores = {\n    5: 8,\n    6: 6,\n    7: 2,\n    8: 19,\n    9: 10,\n    10: 13\n}\n\n# Calculate the number of students who scored more than 9\nstudents_scored_more_than_9 = scores[10]  # Only score of 10 is greater than 9\nanswer = students_scored_more_than_9\n", "prediction": "13\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ncookbook | $3\nbaking dish | $6\ncutting board | $9\nmixing bowl | $9", "question": "How much money does Ernest need to buy a baking dish and a mixing bowl?", "answer": "15", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_baking_dish = 6\nprice_mixing_bowl = 9\n# Total cost for both items\ntotal_cost = price_baking_dish + price_mixing_bowl\nanswer = total_cost\n", "prediction": "15\n"}
{"context": "Read the following table regarding \"Quiz show scores\" and then answer a question.\n\nName | Score\nIsaac | 65\nMitchell | 69\nCharlie | 71\nRoger | 69\nHaley | 65\nTara | 71\nSteven | 69\nDominic | 69", "question": "The players on a quiz show received the following scores. What is the mode of the numbers?", "answer": "69", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nscores = [65, 69, 71, 69, 65, 71, 69, 69]\n# Calculate the mode\nfrom statistics import mode\nanswer = mode(scores)\n", "prediction": "69\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | 1 foot long | 2 feet long\nRed | 4 | 3\nBright orange | 5 | 5", "question": "On a camping trip, Clara kept a log of the types of snakes she saw. She noted their colors and approximate lengths. What is the probability that a randomly selected snake is red and 1 foot long? Simplify any fractions.", "answer": "4/17", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total number of snakes\nred_1ft = 4 \nbright_orange_1ft = 5 \nred_2ft = 3 \nbright_orange_2ft = 5 \n\ntotal_snakes = red_1ft + bright_orange_1ft + red_2ft + bright_orange_2ft\n\n# Probability of selecting a red snake that is 1 foot long\nprobability_red_1ft = red_1ft / total_snakes\n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(red_1ft, total_snakes).limit_denominator()\n\nanswer = simplified_probability\n", "prediction": "4/17\n"}
{"context": "Read the following table regarding \"Children's weights (lbs)\" and then answer a question.\n\nStem | Leaf \n2 | 8\n3 | \n4 | 0\n5 | 4, 9\n6 | 3, 8\n7 | 8\n8 | \n9 | 0", "question": "Dr. Wagner, a pediatrician, weighed all the children who recently visited his office. How many children weighed at least 60 pounds but less than 70 pounds?", "answer": "2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# From the stem-and-leaf display, we identify the weights of the children\nweights = [28, 40, 54, 59, 63, 68, 78, 90]  # Converting stem and leaf to actual weights\n\n# Count the number of children weighing at least 60 pounds but less than 70 pounds\ncount_children = sum(1 for weight in weights if 60 <= weight < 70)\nanswer = count_children\n", "prediction": "2\n"}
{"context": "Read the following table regarding \"Circus schedule\" and then answer a question.\n\nPerformer | Begin | End\nthe jugglers | 4:10 P.M. | 4:15 P.M.\nthe trapeze artists | 4:25 P.M. | 4:45 P.M.\nthe strongman | 5:00 P.M. | 5:05 P.M.\nthe stuntman | 5:15 P.M. | 5:55 P.M.\nthe tightrope walkers | 6:00 P.M. | 6:35 P.M.\nthe magician | 6:40 P.M. | 7:20 P.M.\nthe clowns | 7:35 P.M. | 8:05 P.M.\nthe unicycle rider | 8:10 P.M. | 8:35 P.M.", "question": "Look at the following schedule. When does the unicycle rider's performance begin? Choose from the the options: ['8:10 P.M.', '5:00 P.M.', '8:35 P.M.', '8:05 P.M.']", "answer": "8:10 P.M.", "ques_type": "multi_choice", "choices": ["8:10 P.M.", "5:00 P.M.", "8:35 P.M.", "8:05 P.M."], "code": "# Python code, return answer \nunicycle_rider_begin = '8:10 P.M.'\nanswer = unicycle_rider_begin\n", "prediction": "8:10 P.M.\n"}
{"context": "Read the following table regarding \"Math teachers\" and then answer a question.\n\nHigh school | Number of math teachers\nRiver High | 6\nThompson High | 8\nLincoln High | 10\nNorthside High | 9\nWashington High | 5\nGreen High | 6\nCedar High | 5\nHillview High | 7", "question": "The school district compared how many math teachers each high school has. What is the mean of the numbers?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of math teachers at each high school\nteachers_count = [6, 8, 10, 9, 5, 6, 5, 7]\n# Calculate the mean\nmean_teachers = sum(teachers_count) / len(teachers_count)\nanswer = mean_teachers\n", "prediction": "7.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nDate | Description | Received | Expenses | Available Funds\n | Balance: end of June | | | $450.70\n7/5 | cleaning the Owens' pool | $15.00 | | $465.70\n7/17 | bottle of water | | $1.50 | $464.20\n7/29 | swim trunks | | $16.80 | $447.40", "question": "This is Duncan's complete financial record for July. On July 5, how much money did Duncan make?", "answer": "15", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Amount received by Duncan on July 5\nmoney_made_july_5 = 15.00\nanswer = money_made_july_5\n", "prediction": "15.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbag of birdseed | $9\ndog bowl | $9\nfish bowl | $5\nbox of dog biscuits | $2\ndog leash | $3\nhamster wheel | $3", "question": "How much money does Donald need to buy a fish bowl and a bag of birdseed?", "answer": "14", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_fish_bowl = 5\nprice_birdseed = 9\n# Total cost for a fish bowl and a bag of birdseed\ntotal_cost = price_fish_bowl + price_birdseed\nanswer = total_cost\n", "prediction": "14\n"}
{"context": "Read the following table regarding \"Miles driven\" and then answer a question.\n\nMonth | Miles\nJuly | 3,229\nAugust | 1,075\nSeptember | 5,242", "question": "A taxi cab driver tracked how many miles she drove each month. How many more miles did the taxi cab driver drive in July than in August?", "answer": "2,154", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nmiles_july = 3229 \nmiles_august = 1075 \n# Calculate the difference in miles driven\nmiles_difference = miles_july - miles_august\nanswer = miles_difference\n", "prediction": "2154\n"}
{"context": "Read the following table regarding \"Pairs of shoes per store\" and then answer a question.\n\nStem | Leaf \n4 | 4\n5 | 0, 6\n6 | 0\n7 | \n8 | 4, 9\n9 | 0", "question": "Emilia counted the number of pairs of shoes for sale at each of the shoe stores in the mall. How many stores have at least 60 pairs of shoes but fewer than 100 pairs of shoes?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# From the stem-and-leaf display, we can determine the number of pairs of shoes in each store.\npairs_of_shoes = [\n    44,  # from stem 4 | leaf 4\n    50, 56,  # from stem 5 | leaves 0, 6\n    60,  # from stem 6 | leaf 0\n    84, 89,  # from stem 8 | leaves 4, 9\n    90   # from stem 9 | leaf 0\n]\n\n# Count how many stores have at least 60 pairs and fewer than 100 pairs\ncount_stores = sum(1 for pairs in pairs_of_shoes if 60 <= pairs < 100)\nanswer = count_stores\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"Drawing a card between 4 and 9\" and then answer a question.\n\nNumber drawn | Frequency\n4 | 1\n5 | 9\n6 | 8\n7 | 16\n8 | 11\n9 | 12", "question": "A math textbook explains probability by showing a set of cards numbered 4 through 9 and showing the number of people who might draw each card. How many people are there in all?", "answer": "57", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequencies of cards drawn\nfrequency = {\n    4: 1,\n    5: 9,\n    6: 8,\n    7: 16,\n    8: 11,\n    9: 12\n}\n# Calculate total number of people\ntotal_people = sum(frequency.values())\nanswer = total_people\n", "prediction": "57\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | Apples | Peaches\nOrganic | 3 | 4\nNon-organic | 1 | 3", "question": "Brianna conducted a blind taste test on some of her friends in order to determine if organic fruits tasted different than non-organic fruits. Each friend ate one type of fruit. What is the probability that a randomly selected friend preferred non-organic and tasted apples? Simplify any fractions.", "answer": "1/11", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of friends who tasted each type of fruit\norganic_apples = 3\nnon_organic_apples = 1\norganic_peaches = 4\nnon_organic_peaches = 3\n\n# Total number of friends who tasted non-organic fruits\ntotal_non_organic = non_organic_apples + non_organic_peaches\n\n# Probability that a randomly selected friend preferred non-organic and tasted apples\nprobability_non_organic_apples = non_organic_apples / total_non_organic\n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(non_organic_apples, total_non_organic).limit_denominator()\nanswer = simplified_probability\n", "prediction": "1/4\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nking snake | $119.00\nchameleon | $277.00\nchinchilla | $112.00\nbearded dragon | $118.00", "question": "Matthew has $428.00. How much money will Matthew have left if he buys a king snake and a bearded dragon?", "answer": "191", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the animals\nprice_king_snake = 119.00\nprice_bearded_dragon = 118.00\n\n# Total cost for buying both\ntotal_cost = price_king_snake + price_bearded_dragon\n\n# Money Matthew has\nmatthew_money = 428.00\n\n# Remaining money after purchase\nmoney_left = matthew_money - total_cost\nanswer = money_left\n", "prediction": "191.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of boxes | Number of yogurt pops\n1 | 5\n2 | 10\n3 | 15\n4 | 20\n5 | 25\n6 | ?", "question": "Each box has 5 yogurt pops. How many yogurt pops are in 6 boxes?", "answer": "30", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Each box contains 5 yogurt pops\nyogurt_pops_per_box = 5 \nboxes = 6 \n# Calculate the total number of yogurt pops in 6 boxes\ntotal_yogurt_pops = yogurt_pops_per_box * boxes\nanswer = total_yogurt_pops\n", "prediction": "30\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of shelves | Number of plates\n1 | 10\n2 | 20\n3 | ?", "question": "Each shelf has 10 plates. How many plates are on 3 shelves?", "answer": "30", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nplates_per_shelf = 10\nnumber_of_shelves = 3\n# Calculate the total number of plates\ntotal_plates = plates_per_shelf * number_of_shelves\nanswer = total_plates\n", "prediction": "30\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\norange T-shirt | $7\nlong-sleeved shirt | $4\npair of white socks | $4\npair of shorts | $5", "question": "How much money does Lacey need to buy an orange T-shirt, a pair of white socks, and a pair of shorts?", "answer": "16", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_orange_tshirt = 7\nprice_white_socks = 4\nprice_shorts = 5\n\n# Total cost calculation\ntotal_cost = price_orange_tshirt + price_white_socks + price_shorts\nanswer = total_cost\n", "prediction": "16\n"}
{"context": "Read the following table regarding \"Winning relay times\" and then answer a question.\n\nYear | Winning time (minutes)\n2009 | 38\n2010 | 30\n2011 | 33\n2012 | 35\n2013 | 33", "question": "Every year Ashland has a citywide relay and reports the winning times. According to the table, what was the rate of change between 2010 and 2011?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Winning times for the specified years\ntime_2010 = 30\ntime_2011 = 33\n\n# Calculate the rate of change\nrate_of_change = time_2011 - time_2010\nanswer = rate_of_change\n", "prediction": "3\n"}
{"context": "Read the following table regarding \"Boxes per shipment\" and then answer a question.\n\nStem | Leaf \n1 | 0, 0, 2, 6, 8\n2 | 4, 6\n3 | \n4 | 2, 2, 4, 8, 9\n5 | 1, 3, 6\n6 | 2, 2, 3, 8, 9, 9\n7 | 3, 7", "question": "A shipping company keeps track of the number of boxes in each shipment they send out. How many shipments had at least 10 boxes?", "answer": "23", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The leaf values correspond to the stem values (10-79).\nshipments = [\n    10, 10, 12, 16, 18,  # Stem 1\n    24, 26,              # Stem 2\n    30,                  # Stem 3\n    42, 42, 44, 48, 49,  # Stem 4\n    51, 53, 56,         # Stem 5\n    62, 62, 63, 68, 69, 69,  # Stem 6\n    73, 77               # Stem 7\n]\n\n# Count shipments with at least 10 boxes\ncount_at_least_10 = len(shipments)  # All shipments are at least 10\nanswer = count_at_least_10\n", "prediction": "24\n"}
{"context": "Read the following table regarding \"Donations received\" and then answer a question.\n\nCause | April | May\nHunger | $17 | $2\nParks | $17 | $4\nEducation | $12 | $7\nMedical research | $18 | $9", "question": "A county agency recorded the money donated to several charitable causes over time. In May, which cause raised the least money? Choose from the the options: ['education', 'hunger', 'medical research', 'parks']", "answer": "hunger", "ques_type": "multi_choice", "choices": ["education", "hunger", "medical research", "parks"], "code": "# Python code, return answer \ndonations_may = {\n    'hunger': 2,\n    'parks': 4,\n    'education': 7,\n    'medical research': 9\n}\n# Find the cause that raised the least money in May\nleast_money_cause = min(donations_may, key=donations_may.get)\nanswer = least_money_cause\n", "prediction": "hunger\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | Butterfly | Batwing\nCotton | 1 | 3\nSuede | 4 | 6", "question": "Ernest designs bow ties for a local boutique store. The store manager counted the ties currently on display, tracking them by material and shape. What is the probability that a randomly selected bow tie is made of suede and is shaped like a butterfly? Simplify any fractions.", "answer": "2/7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total number of bow ties\ntotal_bow_ties = 1 + 3 + 4 + 6\n# Number of suede butterfly bow ties\nsue_butterfly_bow_ties = 4\n# Calculate the probability\nprobability_suede_butterfly = sue_butterfly_bow_ties / total_bow_ties\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(sue_butterfly_bow_ties, total_bow_ties).limit_denominator()\nanswer = simplified_probability\n", "prediction": "2/7\n"}
{"context": "Read the following table regarding \"Children's weights (lbs)\" and then answer a question.\n\nStem | Leaf \n1 | 0, 5, 9\n2 | 2, 9, 9, 9\n3 | 2, 3, 9\n4 | 2, 2, 6", "question": "As part of a statistics project, a math class weighed all the children who were willing to participate. What is the weight of the lightest child?", "answer": "10", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The lightest child corresponds to the smallest value in the stem-and-leaf display.\nlightest_child_weight = 10  # From the stem \"1 | 0\", the value is 10 lbs.\nanswer = lightest_child_weight\n", "prediction": "10\n"}
{"context": "Read the following table regarding \"Commute time (minutes)\" and then answer a question.\n\nStem | Leaf \n3 | 0, 8\n4 | 1, 4, 4\n5 | 0, 1, 2, 7, 7\n6 | 2, 5, 7, 9, 9", "question": "A business magazine surveyed its readers about their commute times. How many commutes are less than 51 minutes?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Extracting the commute times from the stem-and-leaf display\ncommute_times = [30, 38, 41, 44, 44, 50, 51, 52, 57, 57, 62, 65, 67, 69, 69]  # 30, 38, 41, 44, 44 (from stem 3 and 4), 50 (from stem 5), not including 51 and above\n# Counting the number of commutes less than 51 minutes\ncount_less_than_51 = sum(1 for time in commute_times if time < 51)\nanswer = count_less_than_51\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"Butterscotch candies per bag\" and then answer a question.\n\nStem | Leaf \n2 | 0, 8\n3 | 5\n4 | 2, 2, 3, 4, 5, 9, 9\n5 | 5, 6\n6 | 1, 3, 5, 8, 9\n7 | 2", "question": "At a candy factory, butterscotch candies were packaged into bags of different sizes. How many bags had at least 29 butterscotch candies but fewer than 77 butterscotch candies?", "answer": "16", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# We will derive the counts of bags based on the stem-and-leaf display\n# Each stem represents the tens digit, and each leaf represents the units digit\nbags_with_candies = [\n    20, 28,  # from stem 2\n    35,      # from stem 3\n    42, 42, 43, 44, 45, 49, 49,  # from stem 4\n    55, 56,  # from stem 5\n    61, 63, 65, 68, 69,  # from stem 6\n    72       # from stem 7\n]\n\n# Count bags with candies in the specified range\ncount_bags = len([candy for candy in bags_with_candies if 29 <= candy < 77])\nanswer = count_bags\n", "prediction": "16\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nloganberries | $5.88 per lb\nblueberries | $2.35 per lb\nstrawberries | $4.04 per lb\nraspberries | $2.08 per lb", "question": "Gabrielle purchased 2 pounds of blueberries, 1 pound of raspberries, and 5 pounds of loganberries. What was the total cost?", "answer": "36.18", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices per pound\nprice_per_lb_blueberries = 2.35 \nprice_per_lb_raspberries = 2.08 \nprice_per_lb_loganberries = 5.88 \n\n# Quantities purchased\nquantity_blueberries = 2 \nquantity_raspberries = 1 \nquantity_loganberries = 5 \n\n# Calculate total cost\ntotal_cost = (price_per_lb_blueberries * quantity_blueberries +\n               price_per_lb_raspberries * quantity_raspberries +\n               price_per_lb_loganberries * quantity_loganberries)\n\nanswer = total_cost\n", "prediction": "36.18\n"}
{"context": "Read the following table regarding \"Quiz scores\" and then answer a question.\n\nStem | Leaf \n4 | 0, 3, 3, 4, 4, 5, 5\n5 | 0, 0, 1, 2, 5, 5, 7, 8\n6 | 3, 4\n7 | 2, 3, 3, 4, 5, 9", "question": "Ms. Cline reported her students' scores on the most recent quiz. How many students scored fewer than 80 points?", "answer": "23", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The scores are represented in a stem-and-leaf display.\n# Counting the scores that are less than 80 points.\nscores = [\n    40, 43, 43, 44, 44, 45, 45,  # scores in the 40s\n    50, 50, 51, 52, 55, 55, 57, 58,  # scores in the 50s\n    63, 64,  # scores in the 60s\n    72, 73, 73, 74, 75, 79  # scores in the 70s\n]\n# Count students with scores less than 80\nstudents_below_80 = len([score for score in scores if score < 80])\nanswer = students_below_80\n", "prediction": "23\n"}
{"context": "Read the following table regarding \"Track team sizes (number of members)\" and then answer a question.\n\nStem | Leaf \n2 | 2, 4, 4\n3 | 3, 4, 8, 9\n4 | 0, 1, 4, 5, 6\n5 | 1, 3, 4, 4, 5, 5, 6, 6", "question": "Mr. Christensen, a track coach, recorded the sizes of all the nearby track teams. How many teams have fewer than 50 members?", "answer": "12", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Extract the sizes from the stem-and-leaf display\nsizes = [22, 24, 24, 33, 34, 38, 39, 40, 41, 44, 45, 46, 51, 53, 54, 54, 55, 55, 56, 56]\n# Count the number of teams with fewer than 50 members\nteams_fewer_than_50 = sum(1 for size in sizes if size < 50)\nanswer = teams_fewer_than_50\n", "prediction": "12\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npecan pie | $6.38\npumpkin pie | $9.74\nchocolate cheesecake | $8.85\nalmond tart | $9.79", "question": "How much money does Lester need to buy 8 chocolate cheesecakes?", "answer": "70.80", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_cheesecake = 8.85  # Price of one chocolate cheesecake\nquantity = 8  # Number of chocolate cheesecakes Lester wants to buy\ntotal_cost = price_per_cheesecake * quantity  # Total cost for 8 cheesecakes\nanswer = total_cost\n", "prediction": "70.8\n"}
{"context": "Read the following table regarding \"Number of birds seen\" and then answer a question.\n\nMonth | Number of birds\nOctober | 125\nNovember | 115\nDecember | 152\nJanuary | 121", "question": "The bird-watching club recorded how many birds its members saw each month. In which month did the club see the most birds? Choose from the the options: ['October', 'November', 'December', 'January']", "answer": "December", "ques_type": "multi_choice", "choices": ["October", "November", "December", "January"], "code": "# Python code, return answer \nbirds_seen = {\n    'October': 125,\n    'November': 115,\n    'December': 152,\n    'January': 121\n}\n# Find the month with the maximum number of birds seen\nmost_birds_month = max(birds_seen, key=birds_seen.get)\nanswer = most_birds_month\n", "prediction": "December\n"}
{"context": "Read the following table regarding \"Spelling bee results\" and then answer a question.\n\nName | Number of words spelled correctly\nTucker | 56\nAnn | 54\nDenise | 54\nNate | 57\nOmar | 54\nMalik | 65\nKimi | 72", "question": "After a spelling bee, some students compared how many words they spelled correctly. What is the range of the numbers?", "answer": "18", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of words spelled correctly by each student\nwords_spelled_correctly = [56, 54, 54, 57, 54, 65, 72]\n# Calculate the range\nrange_of_numbers = max(words_spelled_correctly) - min(words_spelled_correctly)\nanswer = range_of_numbers\n", "prediction": "18\n"}
{"context": "Read the following table regarding \"Quiz show scores\" and then answer a question.\n\nName | Score\nMitch | 9\nGina | 9\nRiley | 4\nAnthony | 7\nBetty | 3\nElise | 8\nJada | 9", "question": "The players on a quiz show received the following scores. What is the mean of the numbers?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nscores = [9, 9, 4, 7, 3, 8, 9]\n# Calculate the mean score\nmean_score = sum(scores) / len(scores)\nanswer = mean_score\n", "prediction": "7.0\n"}
{"context": "Read the following table regarding \"Fire hydrants\" and then answer a question.\n\nStreet | Number of hydrants\nOak Street | 3\nLemon Street | 6\nMaple Street | 3\nPine Street | 3\nCedar Street | 7\nFir Street | 6\nElm Street | 1\nAspen Street | 7", "question": "The city recorded how many fire hydrants there are on each street. What is the mode of the numbers?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nfrom statistics import mode\n\n# Number of hydrants on each street\nhydrant_counts = [3, 6, 3, 3, 7, 6, 1, 7]\n\n# Calculate the mode\nanswer = mode(hydrant_counts)\n", "prediction": "3\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ndenim skirt | $8.47\npair of shoes | $6.12\norange T-shirt | $7.50\npair of sweat pants | $6.93\npurple dress | $5.82", "question": "How much money does Tina need to buy 5 denim skirts and 4 purple dresses?", "answer": "65.63", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_denim_skirt = 8.47\nprice_purple_dress = 5.82\n\n# Calculate the total cost\ntotal_cost = (5 * price_denim_skirt) + (4 * price_purple_dress)\nanswer = total_cost\n", "prediction": "65.63\n"}
{"context": "Read the following table regarding \"Swimming pool schedule\" and then answer a question.\n\nActivity | Begin | End\nfamily swim | 6:45 A.M. | 7:15 A.M.\nswim team practice | 7:25 A.M. | 8:50 A.M.\nintermediate swimming class | 9:00 A.M. | 9:40 A.M.\nbeginning swimming class | 9:50 A.M. | 10:25 A.M.\ndiving club practice | 10:30 A.M. | 11:00 A.M.\nwater polo practice | 11:15 A.M. | 12:50 P.M.\nadvanced swimming class | 1:00 P.M. | 2:20 P.M.\nlap swim | 2:25 P.M. | 3:35 P.M.", "question": "Look at the following schedule. When does lap swim end? Choose from the the options: ['10:25 A.M.', '8:50 A.M.', '2:25 P.M.', '3:35 P.M.']", "answer": "3:35 P.M.", "ques_type": "multi_choice", "choices": ["10:25 A.M.", "8:50 A.M.", "2:25 P.M.", "3:35 P.M."], "code": "# Python code, return answer \n# According to the schedule, lap swim ends at 3:35 P.M.\nlap_swim_end_time = \"3:35 P.M.\"\nanswer = lap_swim_end_time\n", "prediction": "3:35 P.M.\n"}
{"context": "Read the following table regarding \"Broken tiles per shipment\" and then answer a question.\n\nStem | Leaf \n1 | 1\n2 | 1, 7, 9\n3 | 2, 2, 7\n4 | \n5 | 2, 8, 9\n6 | 2, 3, 3, 6, 7\n7 | 7\n8 | 0, 5, 7\n9 | 0", "question": "Winchester Flooring tracked the number of broken tiles in each shipment it received last year. What is the largest number of broken tiles?", "answer": "90", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest number of broken tiles corresponds to the largest value in the stem-and-leaf display.\nlargest_broken_tiles = 90  # From the stem \"9 | 0\", the value is 90 tiles.\nanswer = largest_broken_tiles\n", "prediction": "90\n"}
{"context": "Read the following table regarding \"Daily temperatures (\u00b0C)\" and then answer a question.\n\nStem | Leaf \n1 | 1, 8, 9, 9, 9, 9\n2 | 0, 3, 4\n3 | 3, 7, 8\n4 | 0", "question": "For a science fair project, Oliver tracked the temperature each day. How many temperature readings were exactly 19\u00b0C?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# From the stem-and-leaf display, 19\u00b0C corresponds to the stem \"1\" and leaf \"9\".\n# Thus, there is 1 reading of exactly 19\u00b0C.\ntemperature_readings_19C = 1\nanswer = temperature_readings_19C\n", "prediction": "1\n"}
{"context": "Read the following table regarding \"Apples per tree\" and then answer a question.\n\nStem | Leaf \n4 | 2\n5 | 1, 2, 3\n6 | 0, 1, 1\n7 | 3, 6, 9\n8 | 1, 1, 5, 9\n9 | 0", "question": "A farmer counted the number of apples on each tree in her orchard. How many trees have at least 80 apples?", "answer": "5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Count the number of trees with at least 80 apples\n# From the stem-and-leaf display, we identify the values.\napple_counts = [42, 51, 52, 53, 60, 61, 61, 73, 76, 79, 81, 81, 85, 89, 90]\n\n# Count trees with at least 80 apples\ntrees_with_at_least_80 = sum(1 for count in apple_counts if count >= 80)\nanswer = trees_with_at_least_80\n", "prediction": "5\n"}
{"context": "Read the following table regarding \"Fish per tank\" and then answer a question.\n\nStem | Leaf \n1 | 1, 5, 7\n2 | 2, 4, 6, 7, 8\n3 | 1, 1, 5\n4 | 2, 3, 6, 9\n5 | 7\n6 | 3, 3, 7\n7 | 6, 8\n8 | 1, 3", "question": "A pet store owner had his staff count the number of fish in each tank. What is the smallest number of fish per tank?", "answer": "11", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The smallest number of fish corresponds to the smallest value in the stem-and-leaf display.\nsmallest_fish_count = 11  # From the stem \"1 | 1\", the value is 11 fish.\nanswer = smallest_fish_count\n", "prediction": "11\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nOption | Change in phone price\nAdd an upgrade | $60\nBuy a used phone | -$75", "question": "Eliana is looking at the price of new cell phones online. Her favorite company, OrangeTech, has a special this weekend. Eliana can add an upgrade to a phone for an additional cost, or she can buy a used phone to get a discount. The change in price for each option is shown in the table. Which option results in a greater change in price? Choose from the the options: ['adding an upgrade', 'buying a used phone']", "answer": "buying a used phone", "ques_type": "multi_choice", "choices": ["adding an upgrade", "buying a used phone"], "code": "# Python code, return answer \nchange_upgrade = 60 \nchange_used_phone = -75 \n# Determine which option results in a greater change in price\nif change_upgrade > abs(change_used_phone): \n    answer = 'adding an upgrade'\nelse:\n    answer = 'buying a used phone'\n", "prediction": "buying a used phone\n"}
{"context": "Read the following table regarding \"Push-up competition (number of push-ups)\" and then answer a question.\n\nStem | Leaf \n4 | 8\n5 | 5, 6\n6 | 3, 6, 7, 7\n7 | 1, 3, 3, 5, 7, 7, 8", "question": "Justine's P.E. class participated in a push-up competition, and Justine wrote down how many push-ups each person could do. How many people did at least 60 push-ups?", "answer": "11", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Extract the values from the stem-and-leaf display\npush_ups = [48, 55, 56, 63, 66, 67, 67, 71, 73, 73, 75, 77, 77, 78]  # Corresponding push-up values from the stem and leaf.\n# Count how many people did at least 60 push-ups\ncount_at_least_60 = len([push for push in push_ups if push >= 60])\nanswer = count_at_least_60\n", "prediction": "11\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | Polarized lenses | Regular lenses\nCat eye frames | 2 | 5\nBrowline frames | 4 | 4", "question": "After growing tired of squinting while driving, Erik went shopping for a pair of sunglasses. He tried on glasses with different frames and lenses. What is the probability that a randomly selected pair of sunglasses has browline frames and polarized lenses? Simplify any fractions.", "answer": "4/15", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total pairs of sunglasses\ntotal_pairs = 2 + 5 + 4 + 4 \n# Pairs with browline frames and polarized lenses\nbrowline_polarized_pairs = 4\n# Calculate the probability\nprobability_browline_polarized = browline_polarized_pairs / total_pairs\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(browline_polarized_pairs, total_pairs).limit_denominator()\nanswer = simplified_probability\n", "prediction": "4/15\n"}
{"context": "Read the following table regarding \"Rotten tomatoes per barrel\" and then answer a question.\n\nStem | Leaf \n1 | 1, 6, 8\n2 | \n3 | 2\n4 | \n5 | \n6 | \n7 | 0, 4\n8 | 4\n9 | 0", "question": "The Lexington Soup Company recorded the number of rotten tomatoes in each barrel it received. How many barrels had at least 20 rotten tomatoes?", "answer": "5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Based on the stem-and-leaf display, we can determine the number of barrels with at least 20 rotten tomatoes.\n# Each stem represents the tens digit and each leaf represents the units digit.\n\nbarrels_with_at_least_20 = 0\n\n# Analyzing the display:\n# Stem '1' corresponds to 11, 16, 18 -> all less than 20\n# Stem '2' corresponds to 20 (no leaves, so 0 barrels)\n# Stem '3' corresponds to 32 -> 1 barrel\n# Stem '4' -> 0 barrels\n# Stem '5' -> 0 barrels\n# Stem '6' -> 0 barrels\n# Stem '7' corresponds to 70 and 74 -> 2 barrels\n# Stem '8' corresponds to 84 -> 1 barrel\n# Stem '9' corresponds to 90 -> 1 barrel\n\nbarrels_with_at_least_20 += 1  # for 20 (from stem '2')\nbarrels_with_at_least_20 += 1  # for 32 (from stem '3')\nbarrels_with_at_least_20 += 2  # for 70 and 74 (from stem '7')\nbarrels_with_at_least_20 += 1  # for 84 (from stem '8')\nbarrels_with_at_least_20 += 1  # for 90 (from stem '9')\n\nanswer = barrels_with_at_least_20\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ngreen pipe cleaner | $0.03\nshiny red button | $0.07\nsilver bow | $0.01\norange ribbon | $0.06", "question": "Christina has $0.21. How much money will Christina have left if she buys an orange ribbon and a shiny red button?", "answer": "0.08", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_orange_ribbon = 0.06 \nprice_shiny_red_button = 0.07 \n# Total cost of the items\ntotal_cost = price_orange_ribbon + price_shiny_red_button \n# Initial amount Christina has\ninitial_amount = 0.21 \n# Remaining money after purchases\nremaining_money = initial_amount - total_cost \nanswer = remaining_money\n", "prediction": "0.07999999999999999\n"}
{"context": "Read the following table regarding \"Doing cartwheels\" and then answer a question.\n\nDay | Number of cartwheels\nWednesday | 8\nThursday | 6\nFriday | 10\nSaturday | 7\nSunday | 9", "question": "A gymnast jotted down the number of cartwheels she did each day. What is the mean of the numbers?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of cartwheels each day\ncartwheels = [8, 6, 10, 7, 9]\n# Calculate the mean\nmean_cartwheels = sum(cartwheels) / len(cartwheels)\nanswer = mean_cartwheels\n", "prediction": "8.0\n"}
{"context": "Read the following table regarding \"Children's weights (lbs)\" and then answer a question.\n\nStem | Leaf \n1 | 2, 2, 2, 4, 6, 8, 8\n2 | 2, 2, 3, 9\n3 | 5, 7, 8, 8, 9\n4 | 0, 2, 3, 3, 5, 7, 7", "question": "Dr. Rudd, a pediatrician, weighed all the children who recently visited his office. How many children weighed less than 50 pounds?", "answer": "23", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# We will extract the weights from the stem-and-leaf display and count those less than 50 pounds.\n\n# Extracting weights from the stem-and-leaf table\nweights = [\n    12, 12, 12, 14, 16, 18, 18,  # from stem 1\n    22, 22, 23, 29,              # from stem 2\n    35, 37, 38, 38, 39,          # from stem 3\n    40, 42, 43, 43, 45, 47, 47   # from stem 4\n]\n\n# Count the number of children weighing less than 50 pounds\ncount_less_than_50 = sum(1 for weight in weights if weight < 50)\nanswer = count_less_than_50\n", "prediction": "23\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npotato salad | $3 per pound\nmacaroni salad | $3 per pound\nfruit salad | $4 per pound\negg salad | $5 per pound\ntuna salad | $4 per pound\ngreen salad | $5 per pound", "question": "Mona went to the store and bought 3+3/4 pounds of fruit salad. How much did she spend?", "answer": "15", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_fruit_salad = 4  # Price of fruit salad per pound\npounds_bought = 3 + 3/4  # Total pounds bought by Mona\ntotal_cost = price_per_pound_fruit_salad * pounds_bought  # Total cost calculation\nanswer = total_cost\n", "prediction": "15.0\n"}
{"context": "Read the following table regarding \"Idaho crop prices per cwt\" and then answer a question.\n\nCrop | 2004 | 2005\nCanola | $11 | $10\nTimothy seed | $7 | $7\nApples | $12 | $18\nPeas | $7 | $6\nPotatoes | $4 | $6", "question": "An Idaho farmer has been monitoring crop prices over time. Per cwt, how much did Timothy seed cost in 2005?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Price of Timothy seed in 2005\nprice_timothy_seed_2005 = 7  # from the table\nanswer = price_timothy_seed_2005\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"Vacation days taken by Erin\" and then answer a question.\n\nYear | Vacation days\n2017 | 26\n2018 | 34\n2019 | 26\n2020 | 34\n2021 | 28", "question": "To figure out how many vacation days she had left to use, Erin looked over her old calendars to figure out how many days of vacation she had taken each year. According to the table, what was the rate of change between 2017 and 2018?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nvacation_days_2017 = 26\nvacation_days_2018 = 34\n\n# Calculate the rate of change\nrate_of_change = vacation_days_2018 - vacation_days_2017\nanswer = rate_of_change\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"Going swimming last month\" and then answer a question.\n\nNumber of times | Frequency\n1 | 4\n2 | 8\n3 | 3\n4 | 16\n5 | 7", "question": "Arlington will decide whether to extend its public pool's hours by looking at the number of times its residents visited the pool last month. How many people went swimming at least 2 times?", "answer": "34", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of swimming visits\nfrequency_data = {\n    1: 4,\n    2: 8,\n    3: 3,\n    4: 16,\n    5: 7\n}\n\n# Calculate the total number of people who went swimming at least 2 times\npeople_at_least_2_times = frequency_data[2] + frequency_data[3] + frequency_data[4] + frequency_data[5]\nanswer = people_at_least_2_times\n", "prediction": "34\n"}
{"context": "Read the following table regarding \"Tractors made\" and then answer a question.\n\nMonth | Number of tractors\nJuly | 353\nAugust | 332\nSeptember | 375\nOctober | 357", "question": "A farm equipment company kept a record of the number of tractors made each month. In which month did the company make the most tractors? Choose from the the options: ['July', 'August', 'September', 'October']", "answer": "September", "ques_type": "multi_choice", "choices": ["July", "August", "September", "October"], "code": "# Python code, return answer \ntractors_made = {\n    'July': 353,\n    'August': 332,\n    'September': 375,\n    'October': 357\n}\n# Find the month with the most tractors made\nmost_tractors_month = max(tractors_made, key=tractors_made.get)\nanswer = most_tractors_month\n", "prediction": "September\n"}
{"context": "Read the following table regarding \"Final exam scores\" and then answer a question.\n\nStem | Leaf \n1 | 5\n2 | 2\n3 | 9\n4 | \n5 | 2\n6 | 4\n7 | 1, 6\n8 | 7\n9 | 0", "question": "Mrs. Freeman kept track of her students' scores on last year's final exam. What is the highest score?", "answer": "90", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The highest score corresponds to the largest value in the stem-and-leaf display.\nhighest_score = 90  # From the stem \"9 | 0\", the value is 90.\nanswer = highest_score\n", "prediction": "90\n"}
{"context": "Read the following table regarding \"Broken lights per string\" and then answer a question.\n\nStem | Leaf \n1 | 4, 8, 8\n2 | 8\n3 | 2, 4, 5\n4 | 1, 3, 7\n5 | 3, 7, 9\n6 | 9\n7 | 5, 6", "question": "While hanging Christmas lights for neighbors, Paul counted the number of broken lights on each string. How many strings had at least 10 broken lights but less than 20 broken lights?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Construct the list of broken lights from the stem-and-leaf display\nbroken_lights = [14, 18, 18, 28, 32, 34, 35, 41, 43, 47, 53, 57, 59, 69, 75, 76]\n\n# Count the number of strings with at least 10 but less than 20 broken lights\ncount_at_least_10_less_than_20 = sum(1 for lights in broken_lights if 10 <= lights < 20)\n\nanswer = count_at_least_10_less_than_20\n", "prediction": "3\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n17 | 0\n10 | 11\n6 | 7", "question": "Look at this table. Is this relation a function? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# A relation is a function if each input (x) maps to exactly one output (y).\n# In this case, the x-values are 17, 10, and 6. All x-values are unique.\nis_function = True  # Since no x-values are repeated\nanswer = 'yes' if is_function else 'no'\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nalmonds | $7.23 per lb\nhazelnuts | $10.29 per lb\npecans | $4.77 per lb\npeanuts | $2.41 per lb", "question": "What is the total cost for 5 pounds of hazelnuts?", "answer": "51.45", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_hazelnuts = 10.29 \npounds_bought = 5 \ntotal_cost = price_per_pound_hazelnuts * pounds_bought\nanswer = total_cost\n", "prediction": "51.449999999999996\n"}
{"context": "Read the following table regarding \"Vote breakdown\" and then answer a question.\n\nGrade | Number of votes\nSixth grade | 810\nSeventh grade | 780\nEighth grade | 200", "question": "Robert, who just won the election for student body president at Lakeside Middle School, tallied how many votes he received from each grade. What fraction of his votes were from the eighth grade? Simplify your answer.", "answer": "20/179", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total votes received from all grades\ntotal_votes = 810 + 780 + 200\n# Votes received from eighth grade\neighth_grade_votes = 200\n# Calculate the fraction of votes from eighth grade\nfraction_eighth_grade = eighth_grade_votes / total_votes\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_fraction = Fraction(eighth_grade_votes, total_votes).limit_denominator()\nanswer = simplified_fraction\n", "prediction": "20/179\n"}
{"context": "Read the following table regarding \"Quiz show scores\" and then answer a question.\n\nName | Score\nMalik | 2\nDuncan | 2\nGrace | 6\nNate | 6\nIan | 2", "question": "The players on a quiz show received the following scores. What is the mode of the numbers?", "answer": "2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nfrom statistics import mode\n\n# Scores from the quiz show\nscores = [2, 2, 6, 6, 2]\n\n# Calculate the mode of the scores\nanswer = mode(scores)\n", "prediction": "2\n"}
{"context": "Read the following table regarding \"Phone calls received\" and then answer a question.\n\nDay | Number of calls\nMonday | 454\nTuesday | 442\nWednesday | 452\nThursday | 425", "question": "A technical support line tracked how many calls it received each day. On which day did the support line receive the fewest calls? Choose from the the options: ['Monday', 'Tuesday', 'Wednesday', 'Thursday']", "answer": "Thursday", "ques_type": "multi_choice", "choices": ["Monday", "Tuesday", "Wednesday", "Thursday"], "code": "# Python code, return answer \ncalls_received = {\n    'Monday': 454,\n    'Tuesday': 442,\n    'Wednesday': 452,\n    'Thursday': 425\n}\n# Find the day with the fewest calls\nfewest_calls_day = min(calls_received, key=calls_received.get)\nanswer = fewest_calls_day\n", "prediction": "Thursday\n"}
{"context": "Read the following table regarding \"Trips to an amusement park last year\" and then answer a question.\n\nNumber of trips | Frequency\n1 | 6\n2 | 3\n3 | 9\n4 | 12", "question": "Amy surveyed people at the amusement park where she works and asked them how many times they visited last year. How many people went to an amusement park fewer than 2 times?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency data\nfrequency = {\n    1: 6,\n    2: 3,\n    3: 9,\n    4: 12\n}\n\n# Calculate the number of people who went to the park fewer than 2 times\n# Fewer than 2 times means only those who went 1 time\npeople_fewer_than_2_times = frequency[1]\nanswer = people_fewer_than_2_times\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"Problems per test\" and then answer a question.\n\nStem | Leaf \n1 | 0, 3, 4, 4, 4, 6, 6, 9\n2 | 3, 5, 5\n3 | 4, 5, 7\n4 | 1, 2, 4, 5, 5, 5, 5, 8", "question": "Eli counted the number of problems on each of his tests. What is the largest number of problems?", "answer": "48", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest number of problems corresponds to the highest value in the stem-and-leaf display.\nlargest_problems_count = 48  # From the stem \"4 | 1, 2, 4, 5, 5, 5, 5, 8\", the highest value is 48.\nanswer = largest_problems_count\n", "prediction": "48\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$140 | 14,900 | 5,400\n$150 | 13,700 | 8,800\n$160 | 12,500 | 12,200\n$170 | 11,300 | 15,600\n$180 | 10,100 | 19,000", "question": "Look at the table. Then answer the question. At a price of $160, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "shortage", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \n# Quantity demanded and supplied at the price of $160\nquantity_demanded_at_160 = 12500\nquantity_supplied_at_160 = 12200\n\n# Determine if there is a shortage or surplus\nif quantity_demanded_at_160 < quantity_supplied_at_160:\n    answer = 'surplus'\nelse:\n    answer = 'shortage'\n\n", "prediction": "shortage\n"}
{"context": "Read the following table regarding \"Children's weights (lbs)\" and then answer a question.\n\nStem | Leaf \n1 | 2\n2 | 1, 4, 8, 9\n3 | 1, 1, 2, 2, 4\n4 | 6, 6, 8", "question": "As part of a statistics project, a math class weighed all the children who were willing to participate. How many children weighed at least 19 pounds but less than 35 pounds?", "answer": "9", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Listing the weights based on the stem-and-leaf display\nweights = [12, 21, 24, 28, 29, 31, 31, 32, 32, 34, 36, 36, 38]\n\n# Counting the number of children weighing at least 19 pounds but less than 35 pounds\ncount_children = sum(1 for weight in weights if 19 <= weight < 35)\nanswer = count_children\n", "prediction": "9\n"}
{"context": "Read the following table regarding \"Making finger puppets\" and then answer a question.\n\nFinger puppets made | Frequency\n0 | 5\n1 | 10\n2 | 0\n3 | 13\n4 | 16\n5 | 18\n6 | 1", "question": "The Fairview Art Museum recorded how many finger puppets the children made at last Sunday's art workshop. How many children made more than 5 finger puppets?", "answer": "1", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of children making different numbers of finger puppets\nfrequency = {\n    0: 5,\n    1: 10,\n    2: 0,\n    3: 13,\n    4: 16,\n    5: 18,\n    6: 1\n}\n# Number of children who made more than 5 finger puppets\nchildren_more_than_5 = frequency[6]  # Only 6 puppets made by 1 child\nanswer = children_more_than_5\n", "prediction": "1\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nsoftball glove | $21.00\nswimsuit | $15.00\nbowling ball | $40.00\nbicycle helmet | $16.00\nbicycle | $43.00", "question": "Sue has $54.00. Does she have enough to buy a bicycle and a swimsuit? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \ncost_bicycle = 43.00 \ncost_swimsuit = 15.00 \ntotal_cost = cost_bicycle + cost_swimsuit\n# Check if Sue has enough money\nif total_cost <= 54.00:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"Peanuts per bag of trail mix\" and then answer a question.\n\nStem | Leaf \n2 | 3, 4, 5, 6, 7, 9\n3 | 6\n4 | \n5 | 7, 8", "question": "Megan counted the number of peanuts in each bag of trail mix. What is the largest number of peanuts?", "answer": "58", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest number of peanuts corresponds to the largest value in the stem-and-leaf display.\nlargest_peanuts = 58  # From the stem \"5 | 7, 8\", the value is 58 peanuts.\nanswer = largest_peanuts\n", "prediction": "58\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$20 | 21,900 | 6,400\n$180 | 21,000 | 6,700\n$340 | 20,100 | 7,000\n$500 | 19,200 | 7,300\n$660 | 18,300 | 7,600", "question": "Look at the table. Then answer the question. At a price of $20, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "shortage", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \n# Given values from the table\nquantity_demanded = 21900\nquantity_supplied = 6400\n\n# Determine if there is a shortage or surplus\nif quantity_demanded > quantity_supplied:\n    answer = 'shortage'\nelse:\n    answer = 'surplus'\n\n", "prediction": "shortage\n"}
{"context": "Read the following table regarding \"Movies checked out\" and then answer a question.\n\nDay | Number of movies\nSunday | 96\nMonday | 93\nTuesday | 95\nWednesday | 92\nThursday | 94", "question": "A video store clerk looked up the number of movies checked out each day. What is the mean of the numbers?", "answer": "94", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of movies checked out each day\nmovies_checked_out = [96, 93, 95, 92, 94]\n# Calculate the mean\nmean_movies = sum(movies_checked_out) / len(movies_checked_out)\nanswer = mean_movies\n", "prediction": "94.0\n"}
{"context": "Read the following table regarding \"Band tour gas costs\" and then answer a question.\n\nBand member | Contribution ($)\nVince | 480\nDevon | 690\nTara | 100", "question": "A band from Arlington went on tour over the summer, and each member chipped in for the cost of gas. What fraction of the gas money came from Devon? Simplify your answer.", "answer": "69/127", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total contributions from all band members\ntotal_contributions = 480 + 690 + 100\n# Contribution from Devon\ndevon_contribution = 690\n# Calculate the fraction of the contribution from Devon\nfraction_devon = devon_contribution / total_contributions\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_fraction = Fraction(devon_contribution, total_contributions).limit_denominator()\nanswer = simplified_fraction\n", "prediction": "69/127\n"}
{"context": "Read the following table regarding \"Web pages visited\" and then answer a question.\n\nPerson | Number of Web pages\nNellie | 5\nLouis | 8\nGrayson | 9\nZack | 8\nJasmine | 4\nPerry | 8", "question": "Several people compared how many Web pages they had visited. What is the mean of the numbers?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of Web pages visited by each person\nweb_pages_visited = [5, 8, 9, 8, 4, 8]\n\n# Calculate the mean\nmean_web_pages = sum(web_pages_visited) / len(web_pages_visited)\nanswer = mean_web_pages\n", "prediction": "7.0\n"}
{"context": "Read the following table regarding \"Hours of babysitting\" and then answer a question.\n\nMonth | Hours\nDecember | 23\nJanuary | 22\nFebruary | 29\nMarch | 26", "question": "Helen looked at her calendar to figure out how much time she spent babysitting each month. In which month did Helen babysit the most? Choose from the the options: ['December', 'January', 'February', 'March']", "answer": "February", "ques_type": "multi_choice", "choices": ["December", "January", "February", "March"], "code": "# Python code, return answer \nbabysitting_hours = {\n    'December': 23,\n    'January': 22,\n    'February': 29,\n    'March': 26\n}\n# Find the month with the most babysitting hours\nmax_hours_month = max(babysitting_hours, key=babysitting_hours.get)\nanswer = max_hours_month\n", "prediction": "February\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npepperoni pizza | $13\nbaked ziti | $14\npasta with pesto sauce | $13\nbaked chicken | $20", "question": "How much more does baked chicken cost than a pepperoni pizza?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_baked_chicken = 20 \ncost_pepperoni_pizza = 13 \n# Calculate the difference in cost\ndifference_cost = cost_baked_chicken - cost_pepperoni_pizza\nanswer = difference_cost\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$640 | 21,600 | 2,000\n$690 | 20,200 | 5,700\n$740 | 18,800 | 9,400\n$790 | 17,400 | 13,100\n$840 | 16,000 | 16,800", "question": "Look at the table. Then answer the question. At a price of $840, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "surplus", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \n# Quantity demanded and supplied at the price of $840\nquantity_demanded = 16000\nquantity_supplied = 16800\n\n# Determine if there is a shortage or surplus\nif quantity_demanded < quantity_supplied:\n    answer = 'surplus'\nelse:\n    answer = 'shortage'\n\n", "prediction": "surplus\n"}
{"context": "Read the following table regarding \"Ages\" and then answer a question.\n\nStem | Leaf \n3 | 3, 4, 4\n4 | 2, 5\n5 | \n6 | 4, 4\n7 | 2\n8 | 2", "question": "At their family reunion, the Stanley family recorded everyone's age. How many people are exactly 33 years old?", "answer": "1", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# From the stem-and-leaf display, the stem '3' indicates the tens place, and the leaf '3' indicates the ones place.\n# Therefore, the age '33' corresponds to the stem '3' and leaf '3'.\nnumber_of_people_33_years_old = 1  # There is one leaf '3' in the stem '3'.\nanswer = number_of_people_33_years_old\n", "prediction": "1\n"}
{"context": "Read the following table regarding \"Hotel shuttle bus schedule\" and then answer a question.\n\nairport | 9:45 A.M. | 10:00 A.M. | 10:30 A.M. | 10:45 A.M. | 11:00 A.M.\nboat docks | 10:30 A.M. | 10:45 A.M. | 11:15 A.M. | 11:30 A.M. | 11:45 A.M.\npizza place | 11:15 A.M. | 11:30 A.M. | 12:00 P.M. | 12:15 P.M. | 12:30 P.M.\namusement park | 12:00 P.M. | 12:15 P.M. | 12:45 P.M. | 1:00 P.M. | 1:15 P.M.\ncollege campus | 12:15 P.M. | 12:30 P.M. | 1:00 P.M. | 1:15 P.M. | 1:30 P.M.\nfootball stadium | 12:30 P.M. | 12:45 P.M. | 1:15 P.M. | 1:30 P.M. | 1:45 P.M.\nsoftball field | 1:00 P.M. | 1:15 P.M. | 1:45 P.M. | 2:00 P.M. | 2:15 P.M.\ntrain station | 1:30 P.M. | 1:45 P.M. | 2:15 P.M. | 2:30 P.M. | 2:45 P.M.\nbus station | 2:30 P.M. | 2:45 P.M. | 3:15 P.M. | 3:30 P.M. | 3:45 P.M.", "question": "Look at the following schedule. How long does it take to get from the pizza place to the train station? Choose from the the options: ['2 hours and 15 minutes', '2 hours', '1 hour and 45 minutes', '1 hour and 30 minutes']", "answer": "2 hours and 15 minutes", "ques_type": "multi_choice", "choices": ["2 hours and 15 minutes", "2 hours", "1 hour and 45 minutes", "1 hour and 30 minutes"], "code": "# Python code, return answer \n# Departure time from pizza place to train station\ndeparture_time_pizza_place = \"12:00 PM\"  # the last time listed at pizza place\narrival_time_train_station = \"1:30 PM\"    # first time listed at train station\n\nfrom datetime import datetime\n\n# Calculate the time difference\ndeparture = datetime.strptime(departure_time_pizza_place, \"%I:%M %p\")\narrival = datetime.strptime(arrival_time_train_station, \"%I:%M %p\")\ntime_difference = arrival - departure\n\n# Convert time difference to hours and minutes\nhours, remainder = divmod(time_difference.seconds, 3600)\nminutes = remainder // 60\n\nanswer = f\"{hours} hours and {minutes} minutes\"\n", "prediction": "1 hours and 30 minutes\n"}
{"context": "Read the following table regarding \"Pairs of shoes per store\" and then answer a question.\n\nStem | Leaf \n3 | 4, 6, 8\n4 | 0, 7, 8\n5 | 1, 5, 9\n6 | 6, 6\n7 | 1, 1, 5, 9\n8 | 0, 6, 7, 7\n9 | 0, 0", "question": "Jaylen counted the number of pairs of shoes for sale at each of the shoe stores in the mall. What is the smallest number of pairs of shoes?", "answer": "34", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The smallest number of pairs of shoes corresponds to the smallest value in the stem-and-leaf display.\nsmallest_shoes = 34  # From the stem \"3 | 4\", the value is 34 pairs.\nanswer = smallest_shoes\n", "prediction": "34\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPattern A | add | 3 3 | 6 | 9 | 12\nPattern B | add | 30 30 | 60 | 90 | 120", "question": "Compare pattern A to pattern B. Which statement is true?  Choose from the the options: ['Each term in pattern B is 27 more than the corresponding term in pattern A.', 'Each term in pattern B is 10 times the corresponding term in pattern A.']", "answer": "Each term in pattern B is 10 times the corresponding term in pattern A.", "ques_type": "multi_choice", "choices": ["Each term in pattern B is 27 more than the corresponding term in pattern A.", "Each term in pattern B is 10 times the corresponding term in pattern A."], "code": "# Python code, return answer \n# Analyzing the patterns\npattern_A = [3, 6, 9, 12]  # Terms in Pattern A\npattern_B = [30, 60, 90, 120]  # Terms in Pattern B\n\n# Check the relationship between corresponding terms in the two patterns\nis_ten_times = all(b == 10 * a for a, b in zip(pattern_A, pattern_B))\nis_twenty_seven_more = all(b == a + 27 for a, b in zip(pattern_A, pattern_B))\n\nif is_ten_times:\n    answer = 'Each term in pattern B is 10 times the corresponding term in pattern A.'\nelif is_twenty_seven_more:\n    answer = 'Each term in pattern B is 27 more than the corresponding term in pattern A.'\n\n", "prediction": "Each term in pattern B is 10 times the corresponding term in pattern A.\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nEuropean vacation package | $959.00\nAustralian vacation package | $531.00\nHawaiian vacation package | $741.00\nJamaican vacation package | $637.00\nCaribbean vacation package | $897.00\nAfrican safari vacation package | $538.00", "question": "How much more does a Hawaiian vacation package cost than an Australian vacation package?", "answer": "210", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_hawaiian = 741.00\ncost_australian = 531.00\n# Calculate the difference in cost\ncost_difference = cost_hawaiian - cost_australian\nanswer = cost_difference\n", "prediction": "210.0\n"}
{"context": "Read the following table regarding \"Spinning a wheel numbered 1 through 6\" and then answer a question.\n\nNumber spun | Frequency\n1 | 16\n2 | 3\n3 | 12\n4 | 14\n5 | 11\n6 | 2", "question": "At a school carnival, a curious student volunteer counted the number of times visitors to her booth spun the numbers 1 through 6. How many people spun a number less than 2?", "answer": "16", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of the numbers spun\nfrequency = {\n    1: 16,\n    2: 3,\n    3: 12,\n    4: 14,\n    5: 11,\n    6: 2\n}\n# Count the number of people who spun a number less than 2\npeople_spun_less_than_2 = frequency[1]  # Only the number '1' is less than '2'\nanswer = people_spun_less_than_2\n", "prediction": "16\n"}
{"context": "Read the following table regarding \"Idaho crop prices per cwt\" and then answer a question.\n\nCrop | 2003 | 2004\nTimothy seed | $9 | $7\nPeas | $9 | $7\nLentils | $18 | $14", "question": "An Idaho farmer has been monitoring crop prices over time. Per cwt, how much did Timothy seed cost in 2004?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Timothy seed price in 2004\ntimothy_seed_price_2004 = 7  # dollars per cwt\nanswer = timothy_seed_price_2004\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nmeasuring tape | $4.87\npadlock | $5.07\nhammer | $9.51\nrake | $7.24\nbroom | $4.58\nmop | $8.37", "question": "How much money does Henry need to buy 2 measuring tapes and a rake?", "answer": "16.98", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_measuring_tape = 4.87 \nprice_rake = 7.24 \n# Total cost for 2 measuring tapes and 1 rake\ntotal_cost = (2 * price_measuring_tape) + price_rake\nanswer = total_cost\n", "prediction": "16.98\n"}
{"context": "Read the following table regarding \"Aid received per capita from the U.S.\" and then answer a question.\n\nCountry | 1965 | 1975\nNepal | $2 | $3\nLibya | $4 | $2\nSri Lanka | $1 | $11\nAfghanistan | $5 | $5", "question": "An economist tracked the amount of per-capita aid sent from the U.S. to various countries during the 1900s. Per capita, how much more aid did Libya receive in 1965 than in 1975?", "answer": "2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nlibya_aid_1965 = 4  # in dollars\nlibya_aid_1975 = 2  # in dollars\n# Calculate the difference in aid received by Libya between 1965 and 1975\ndifference_aid_libya = libya_aid_1965 - libya_aid_1975\nanswer = difference_aid_libya\n", "prediction": "2\n"}
{"context": "Read the following table regarding \"Web pages visited\" and then answer a question.\n\nPerson | Number of Web pages\nKenji | 141\nAlexis | 119\nJosh | 147\nSofia | 174", "question": "Several people compared how many Web pages they had visited. Who visited the most Web pages? Choose from the the options: ['Kenji', 'Alexis', 'Josh', 'Sofia']", "answer": "Sofia", "ques_type": "multi_choice", "choices": ["Kenji", "Alexis", "Josh", "Sofia"], "code": "# Python code, return answer \nweb_pages_visited = {\n    'Kenji': 141,\n    'Alexis': 119,\n    'Josh': 147,\n    'Sofia': 174\n}\n# Find the person who visited the most web pages\nmost_web_pages_person = max(web_pages_visited, key=web_pages_visited.get)\nanswer = most_web_pages_person\n", "prediction": "Sofia\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nlong-sleeved shirt | $4.00\ndenim skirt | $9.00\npink sweater | $5.00\nplaid scarf | $3.00\npurple T-shirt | $3.00", "question": "How much more does a denim skirt cost than a purple T-shirt?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_denim_skirt = 9.00 \ncost_purple_tshirt = 3.00 \n# Calculate the difference in cost\ndifference_cost = cost_denim_skirt - cost_purple_tshirt\nanswer = difference_cost\n", "prediction": "6.0\n"}
{"context": "Read the following table regarding \"Convenience store beverage sales\" and then answer a question.\n\nBeverage | Thursday | Friday\nKrazy Kola | $7 | $5\nSweet Sips | $17 | $7\nPearl's Soda | $2 | $12\nNature's Nectar | $1 | $19\nFizzy Fun | $14 | $15", "question": "Josie, an employee at Morgan's Convenience Store, looked at the sales of each of its soda products. On Friday, how much more did the convenience store make from Nature's Nectar sales than from Sweet Sips sales?", "answer": "12", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Sales on Friday for each beverage\nsales_natures_nectar = 19\nsales_sweet_sips = 7\n\n# Calculate the difference in sales\ndifference_in_sales = sales_natures_nectar - sales_sweet_sips\nanswer = difference_in_sales\n", "prediction": "12\n"}
{"context": "Read the following table regarding \"Toys per bin\" and then answer a question.\n\nStem | Leaf \n3 | 5\n4 | 3, 6, 9, 9\n5 | 2\n6 | 0, 5\n7 | 5", "question": "A toy store employee counted the number of toys in each bin in the sale section. What is the smallest number of toys?", "answer": "35", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The smallest number of toys corresponds to the smallest value in the stem-and-leaf display.\nsmallest_toys_count = 35  # From the stem \"3 | 5\", the value is 35 toys.\nanswer = smallest_toys_count\n", "prediction": "35\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nfootball helmet key chain | $1.90\npiano key chain | $2.19\nrainbow key chain | $2.25\nglobe key chain | $1.70\npuppy key chain | $2.69\nsoccer ball key chain | $1.96", "question": "How much money does Walter need to buy a football helmet key chain and a puppy key chain?", "answer": "4.59", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the key chains\nprice_football_helmet = 1.90\nprice_puppy_key_chain = 2.69\n# Calculate the total cost\ntotal_cost = price_football_helmet + price_puppy_key_chain\nanswer = total_cost\n", "prediction": "4.59\n"}
{"context": "Read the following table regarding \"Math teachers\" and then answer a question.\n\nHigh school | Number of math teachers\nLincoln High | 2\nCedar High | 2\nNorthside High | 6\nHillview High | 6\nRiver High | 2\nGreen High | 7\nWestside High | 7", "question": "The school district compared how many math teachers each high school has. What is the mode of the numbers?", "answer": "2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of math teachers for each high school\nmath_teachers = [2, 2, 6, 6, 2, 7, 7]\n\n# Finding the mode\nfrom statistics import mode\nmode_value = mode(math_teachers)\nanswer = mode_value\n", "prediction": "2\n"}
{"context": "Read the following table regarding \"Absences\" and then answer a question.\n\nStudent | 2005 | 2006\nValentina | 2 | 18\nPreston | 13 | 3\nLiz | 14 | 4", "question": "A teacher at Mills Middle School studied the absence rates of her students over the course of a few years. In 2006, which student had the most absences? Choose from the the options: ['Preston', 'Liz', 'Valentina']", "answer": "Valentina", "ques_type": "multi_choice", "choices": ["Preston", "Liz", "Valentina"], "code": "# Python code, return answer \nabsences_2006 = {\n    'Valentina': 18,\n    'Preston': 3,\n    'Liz': 4\n}\n# Find the student with the most absences in 2006\nmost_absences_student = max(absences_2006, key=absences_2006.get)\nanswer = most_absences_student\n", "prediction": "Valentina\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | Patients under 18 years old | Patients 19-60 years old\nRegular cleaning | 4 | 2\nBroken tooth | 4 | 4", "question": "A dentist was making note of his upcoming appointments with different aged patients and the reasons for their visits. What is the probability that a randomly selected appointment is for a broken tooth and is with patients 19-60 years old? Simplify any fractions.", "answer": "2/7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total patients\npatients_under_18 = 4 + 4  # Regular cleaning + Broken tooth\npatients_19_to_60 = 2 + 4  # Regular cleaning + Broken tooth\ntotal_patients = patients_under_18 + patients_19_to_60\n\n# Patients 19-60 years old with broken tooth\nbroken_tooth_19_to_60 = 4\n\n# Probability calculation\nprobability = broken_tooth_19_to_60 / total_patients\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(broken_tooth_19_to_60, total_patients).limit_denominator()\nanswer = simplified_probability\n", "prediction": "2/7\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of train cars | Number of people\n1 | 10\n2 | 20\n3 | 30\n4 | 40\n5 | 50\n6 | ?", "question": "Each train car has 10 people. How many people are in 6 train cars?", "answer": "60", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Each train car has 10 people\npeople_per_car = 10 \n# Number of train cars\nnumber_of_cars = 6 \n# Calculate total number of people\ntotal_people = people_per_car * number_of_cars\nanswer = total_people\n", "prediction": "60\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nsilver coat rack | $796.00\ngrandfather clock | $628.00\ncrystal sculpture | $734.00\nrug | $274.00\ncrystal vase | $464.00\noil painting | $328.00", "question": "How much more does a grandfather clock cost than a crystal vase?", "answer": "164", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_grandfather_clock = 628.00 \ncost_crystal_vase = 464.00 \n# Calculate the difference in cost\ndifference = cost_grandfather_clock - cost_crystal_vase\nanswer = difference\n", "prediction": "164.0\n"}
{"context": "Read the following table regarding \"Photographs taken\" and then answer a question.\n\nDay | Number of photographs\nSunday | 9\nMonday | 8\nTuesday | 9\nWednesday | 2\nThursday | 7", "question": "Megan looked at the dates of the digital photos on her computer to find out how many she had taken in the past 5 days. What is the mean of the numbers?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of photographs taken each day\nphotographs = [9, 8, 9, 2, 7]\n# Calculate the mean\nmean_photographs = sum(photographs) / len(photographs)\nanswer = mean_photographs\n", "prediction": "7.0\n"}
{"context": "Read the following table regarding \"Going swimming last month\" and then answer a question.\n\nNumber of times | Frequency\n1 | 3\n2 | 10\n3 | 17\n4 | 6", "question": "Stamford will decide whether to extend its public pool's hours by looking at the number of times its residents visited the pool last month. How many people went swimming fewer than 2 times?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of swimming visits\nfrequency_1_time = 3  # 1 time\nfrequency_2_times = 10  # 2 times\n\n# Calculate the number of people who went swimming fewer than 2 times\npeople_fewer_than_2_times = frequency_1_time  # Only those who swam 1 time\nanswer = people_fewer_than_2_times\n", "prediction": "3\n"}
{"context": "Read the following table regarding \"Average food preparation time\" and then answer a question.\n\nDay | Food preparation time (minutes)\nTuesday | 36\nWednesday | 37\nThursday | 37\nFriday | 33\nSaturday | 32", "question": "A restaurant's average food preparation time was tracked from day to day as part of an efficiency improvement program. According to the table, what was the rate of change between Thursday and Friday?", "answer": "-4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Food preparation times on Thursday and Friday\nthursday_time = 37 \nfriday_time = 33 \n# Calculate the rate of change\nrate_of_change = friday_time - thursday_time\nanswer = rate_of_change\n", "prediction": "-4\n"}
{"context": "Read the following table regarding \"Clubs\" and then answer a question.\n\nName | Number of clubs\nJared | 5\nLee | 7\nReba | 5\nKamal | 10\nSanjay | 7\nAiden | 7", "question": "Some students compared how many clubs they belong to. What is the mode of the numbers?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nfrom statistics import mode\n\n# List of the number of clubs each student belongs to\nclubs = [5, 7, 5, 10, 7, 7]\n\n# Calculate the mode\nanswer = mode(clubs)\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"Basketball hoops\" and then answer a question.\n\nPark | Number of basketball hoops\nWestfield Park | 10\nRiverfront Park | 6\nMooreland Park | 9\nLinden Park | 5\nCrestview Park | 2\nHeron Park | 4\nPinehurst Park | 3\nKelly Park | 8", "question": "The parks department compared how many basketball hoops there are at each park. What is the range of the numbers?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of basketball hoops at each park\nhoops_count = [10, 6, 9, 5, 2, 4, 3, 8]\n# Calculate the range\nrange_hoops = max(hoops_count) - min(hoops_count)\nanswer = range_hoops\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"Making picture frames\" and then answer a question.\n\nPicture frames made | Frequency\n0 | 2\n1 | 10\n2 | 3\n3 | 18\n4 | 17\n5 | 11\n6 | 19", "question": "The shop teacher, Mr. Johnston, wrote down how many picture frames the students made last week. How many students made exactly 6 picture frames?", "answer": "19", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of students making exactly 6 picture frames\nstudents_made_6_frames = 19\nanswer = students_made_6_frames\n", "prediction": "19\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npiece of gum | $0.17\npiece of mint chocolate | $0.24\ngumball | $0.16\npeanut butter cup | $0.24\nbutterscotch candy | $0.13", "question": "Caleb has $0.34. Does he have enough to buy a piece of mint chocolate and a butterscotch candy? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# Prices of items\nprice_mint_chocolate = 0.24 \nprice_butterscotch_candy = 0.13 \n\n# Total cost for one piece of mint chocolate and one butterscotch candy\ntotal_cost = price_mint_chocolate + price_butterscotch_candy\n\n# Caleb's amount\ncaleb_money = 0.34\n\n# Check if Caleb has enough money\nif caleb_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"Flowers plants\" and then answer a question.\n\nDay | Number of flowers\nTuesday | 22\nWednesday | 39\nThursday | 29\nFriday | 35\nSaturday | 33", "question": "Sean paid attention to how many flowers he planted in the garden during the past 5 days. What is the range of the numbers?", "answer": "17", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of flowers planted each day\nflowers = [22, 39, 29, 35, 33]\n# Calculate the range\nrange_flowers = max(flowers) - min(flowers)\nanswer = range_flowers\n", "prediction": "17\n"}
{"context": "Read the following table regarding \"Scores on a board game\" and then answer a question.\n\nScore | Frequency\n6 | 7\n7 | 6\n8 | 20\n9 | 4\n10 | 19", "question": "Trudy and her friends recorded their scores while playing a board game. How many people scored more than 8?", "answer": "23", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of scores\nscores_frequency = {\n    6: 7,\n    7: 6,\n    8: 20,\n    9: 4,\n    10: 19\n}\n\n# Calculate the total number of people who scored more than 8\npeople_scored_more_than_8 = scores_frequency[9] + scores_frequency[10]\nanswer = people_scored_more_than_8\n", "prediction": "23\n"}
{"context": "Read the following table regarding \"House sales\" and then answer a question.\n\nCity | Number of houses sold\nMelville | 71\nLiberty City | 74\nCenter City | 71\nNew Hamburg | 71\nParville | 74\nFremont | 68\nBriggs Corner | 68", "question": "A real estate agent looked into how many houses were sold in different cities. What is the mode of the numbers?", "answer": "71", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nfrom statistics import mode\n\n# Number of houses sold in each city\nhouses_sold = [71, 74, 71, 71, 74, 68, 68]\n\n# Calculate the mode\nmode_houses_sold = mode(houses_sold)\nanswer = mode_houses_sold\n", "prediction": "71\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ndenim jacket | $17.18\npair of shorts | $27.55\npair of brown pants | $19.92\nblack jacket | $10.33", "question": "Percy has $49.50. Does he have enough to buy a pair of brown pants and a pair of shorts? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \ncost_brown_pants = 19.92 \ncost_shorts = 27.55 \ntotal_cost = cost_brown_pants + cost_shorts \npercy_budget = 49.50 \n\nif total_cost <= percy_budget: \n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbutterfly stamp | $0.30\ntulip stamp | $0.23\nroll of packaging tape | $0.63\nlarge cardboard box | $0.41\nbird postcard | $0.61\nlarge yellow envelope | $0.53", "question": "How much more does a roll of packaging tape cost than a large yellow envelope?", "answer": "0.10", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_packaging_tape = 0.63\ncost_large_yellow_envelope = 0.53\n# Calculate the difference in cost\ncost_difference = cost_packaging_tape - cost_large_yellow_envelope\nanswer = cost_difference\n", "prediction": "0.09999999999999998\n"}
{"context": "Read the following table regarding \"Quiz scores\" and then answer a question.\n\nStem | Leaf \n2 | 0, 2, 6, 9\n3 | 4, 5, 7, 7, 8\n4 | 1, 9\n5 | 1, 8, 8", "question": "Ms. Sherman reported her students' scores on the most recent quiz. How many students scored fewer than 58 points?", "answer": "12", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Count the number of students who scored fewer than 58 points\n# From the stem-and-leaf display, the scores are as follows:\nscores = [20, 22, 26, 29, 34, 35, 37, 37, 38, 41, 49, 51, 58, 58]  # Including the scores represented in the display\nstudents_fewer_than_58 = [score for score in scores if score < 58]\n\n# Count the number of students\nanswer = len(students_fewer_than_58)\n", "prediction": "12\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\njar of olives | $3.08\ncan of mushrooms | $1.37\njar of pickles | $1.55\ncan of fruit cocktail | $2.23", "question": "How much money does Rhianna need to buy a can of fruit cocktail and a jar of pickles?", "answer": "3.78", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_can_fruit_cocktail = 2.23 \nprice_jar_pickles = 1.55 \n# Total cost for both items\ntotal_cost = price_can_fruit_cocktail + price_jar_pickles\nanswer = total_cost\n", "prediction": "3.7800000000000002\n"}
{"context": "Read the following table regarding \"Goals made\" and then answer a question.\n\nDay | Number of goals\nSunday | 5\nMonday | 0\nTuesday | 3\nWednesday | 8\nThursday | 4\nFriday | 10\nSaturday | 9", "question": "Mitchell recalled how many goals he had made in soccer practice each day. What is the median of the numbers?", "answer": "5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of goals made each day\ngoals = [5, 0, 3, 8, 4, 10, 9]\n# Sort the list to find the median\ngoals.sort()\n# Calculate the median\nn = len(goals)\nif n % 2 == 1:\n    median = goals[n // 2]\nelse:\n    median = (goals[n // 2 - 1] + goals[n // 2]) / 2\nanswer = median\n", "prediction": "5\n"}
{"context": "Read the following table regarding \"Watermelons harvested\" and then answer a question.\n\nDay | Number of watermelons\nThursday | 40\nFriday | 49\nSaturday | 42\nSunday | 46", "question": "A farmer recalled how many watermelons were harvested in the past 4 days. On which day were the fewest watermelons harvested? Choose from the the options: ['Thursday', 'Friday', 'Saturday', 'Sunday']", "answer": "Thursday", "ques_type": "multi_choice", "choices": ["Thursday", "Friday", "Saturday", "Sunday"], "code": "# Python code, return answer \nwatermelons = {\n    'Thursday': 40,\n    'Friday': 49,\n    'Saturday': 42,\n    'Sunday': 46\n}\n# Find the day with the fewest watermelons harvested\nfewest_watermelons_day = min(watermelons, key=watermelons.get)\nanswer = fewest_watermelons_day\n", "prediction": "Thursday\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of roofs | Number of seagulls\n1 | 5\n2 | 10\n3 | ?", "question": "Each roof has 5 seagulls. How many seagulls are on 3 roofs?", "answer": "15", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nseagulls_per_roof = 5\nnumber_of_roofs = 3\n# Calculate the total number of seagulls\ntotal_seagulls = seagulls_per_roof * number_of_roofs\nanswer = total_seagulls\n", "prediction": "15\n"}
{"context": "Read the following table regarding \"Basketball hoops\" and then answer a question.\n\nPark | Number of basketball hoops\nPalm Park | 9\nMooreland Park | 8\nCrestview Park | 8\nRiverfront Park | 9\nWestfield Park | 8\nLinden Park | 9\nHeron Park | 2\nOtter Park | 9", "question": "The parks department compared how many basketball hoops there are at each park. What is the mode of the numbers?", "answer": "9", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of basketball hoops at each park\nhoops = [9, 8, 8, 9, 8, 9, 2, 9]\n\n# Finding the mode\nfrom statistics import mode\nanswer = mode(hoops)\n", "prediction": "9\n"}
{"context": "Read the following table regarding \"Brianna's yearly finances\" and then answer a question.\n\nEarnings from job as a birthday party princess | $11,650\nEarnings from acting in children's plays | $13,200\nIncome tax and other payroll taxes | $3,083", "question": "Brianna has two part-time jobs as a children's entertainer. Here are her yearly finances. What is Brianna's gross income for the year?", "answer": "24,850", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Earnings from both jobs\nearnings_birthday_princess = 11650\nearnings_acting = 13200\n# Calculate gross income\ngross_income = earnings_birthday_princess + earnings_acting\nanswer = gross_income\n", "prediction": "24850\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ndesigner handbag | $3,238.00\ndesigner watch | $1,024.00\npair of designer shoes | $4,738.00\ndesigner ball gown | $3,907.00", "question": "How much money does Erica need to buy 5 pairs of designer shoes?", "answer": "23,690", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pair_of_shoes = 4738.00 \nnumber_of_pairs = 5 \n# Calculate the total cost for 5 pairs of designer shoes\ntotal_cost = price_per_pair_of_shoes * number_of_pairs\nanswer = total_cost\n", "prediction": "23690.0\n"}
{"context": "Read the following table regarding \"Addison's summer finances\" and then answer a question.\n\nEarnings from job at the water park | $6,840\nIncome tax and other payroll taxes | $620", "question": "Addison worked at a water park last summer. Here are Addison's finances for the summer. What was Addison's net income last summer?", "answer": "6,220", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nearnings = 6840  # Earnings from job at the water park\ntaxes = 620  # Income tax and other payroll taxes\n# Calculate net income\nnet_income = earnings - taxes\nanswer = net_income\n", "prediction": "6220\n"}
{"context": "Read the following table regarding \"Temperature at noon\" and then answer a question.\n\nDay | Temperature (\u00c2\u00b0C)\nThursday | 6\nFriday | 6\nSaturday | 9\nSunday | 6\nMonday | 9\nTuesday | 7", "question": "Cole graphed the temperature at noon for 6 days. What is the mode of the numbers?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ntemperatures = [6, 6, 9, 6, 9, 7]\n# Finding the mode\nfrom statistics import mode\nmode_temperature = mode(temperatures)\nanswer = mode_temperature\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npackage of purple streamers | $2.58\nbirthday balloon | $1.04\ngreeting card | $3.18\nwhistle | $1.42", "question": "How much money does Rudy need to buy 4 whistles?", "answer": "5.68", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_whistle = 1.42 \nnumber_of_whistles = 4 \n# Calculate total cost for 4 whistles\ntotal_cost = price_per_whistle * number_of_whistles\nanswer = total_cost\n", "prediction": "5.68\n"}
{"context": "Read the following table regarding \"Apples picked\" and then answer a question.\n\nDay | Number of apples\nFriday | 8,131\nSaturday | 4,145\nSunday | 8,137\nMonday | 1,569\nTuesday | 2,068", "question": "The owner of an orchard kept records about how many apples were picked in the past 5 days. How many apples in total were picked on Friday and Saturday?", "answer": "12,276", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Apples picked on Friday and Saturday\napples_friday = 8131\napples_saturday = 4145\n# Total apples picked on Friday and Saturday\ntotal_apples_friday_saturday = apples_friday + apples_saturday\nanswer = total_apples_friday_saturday\n", "prediction": "12276\n"}
{"context": "Read the following table regarding \"Broken crayons per box\" and then answer a question.\n\nStem | Leaf \n1 | 2\n2 | 7, 8\n3 | 0, 3\n4 | \n5 | 0\n6 | \n7 | \n8 | 2, 8\n9 | 0", "question": "A crayon factory monitored the number of broken crayons per box during the past day. What is the smallest number of broken crayons?", "answer": "12", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The smallest number of broken crayons corresponds to the smallest value in the stem-and-leaf display.\nsmallest_broken_crayons = 12  # From the stem \"1 | 2\", the value is 12 broken crayons.\nanswer = smallest_broken_crayons\n", "prediction": "12\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n16 | 2\n17 | 11\n18 | 18", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "nonlinear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the differences in y-values for equal intervals of x-values.\nx_values = [16, 17, 18]\ny_values = [2, 11, 18]\n\n# Calculate the differences\ndifferences = [y_values[i] - y_values[i - 1] for i in range(1, len(y_values))]\n\n# If the differences are not constant, the function is nonlinear.\nis_linear = all(difference == differences[0] for difference in differences)\n\nanswer = 'linear' if is_linear else 'nonlinear'\n", "prediction": "NameError(\"name 'y_values' is not defined\")"}
{"context": "Read the following table regarding \"Quiz scores\" and then answer a question.\n\nStem | Leaf \n2 | 2, 2, 9\n3 | 0, 2, 3\n4 | 1, 5, 8\n5 | 7, 9\n6 | \n7 | 5\n8 | 1, 9", "question": "Ms. McCormick reported her students' scores on the most recent quiz. How many students scored at least 65 points?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Scores from the stem-and-leaf display\nscores = [22, 22, 29, 30, 32, 33, 41, 45, 48, 57, 59, 65, 75, 81, 89]\n\n# Count the number of students who scored at least 65 points\nstudents_scored_at_least_65 = sum(1 for score in scores if score >= 65)\nanswer = students_scored_at_least_65\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of soccer fields | Number of sprinklers\n1 | 5\n2 | 10\n3 | 15\n4 | ?", "question": "Each soccer field has 5 sprinklers. How many sprinklers are on 4 soccer fields?", "answer": "20", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of soccer fields\nsoccer_fields = 4\n# Each soccer field has 5 sprinklers\nsprinklers_per_field = 5\n# Calculate the total number of sprinklers for 4 fields\ntotal_sprinklers = soccer_fields * sprinklers_per_field\nanswer = total_sprinklers\n", "prediction": "20\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nDate | Description | Received | Expenses | Available Funds\n | Balance: end of November | | | $328.20\n12/5 | wrapping paper | | $4.95 | $323.25\n12/16 | watching Ms. Simon's cat | $15.00 | | $338.25\n12/29 | calendar | | $7.80 | $330.45", "question": "This is Sandra's complete financial record for December. How much money did Sandra spend on December 29?", "answer": "7.80", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# From the table, the amount Sandra spent on December 29 is provided directly.\nexpenses_dec_29 = 7.80 \nanswer = expenses_dec_29\n", "prediction": "7.8\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npumpkin pie | $10.53\nalmond tart | $20.72\nbirthday cake | $28.48\nbanana cream pie | $10.94", "question": "How much more does a banana cream pie cost than a pumpkin pie?", "answer": "0.41", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_banana_cream_pie = 10.94\ncost_pumpkin_pie = 10.53\n# Calculate the difference in cost\ndifference_cost = cost_banana_cream_pie - cost_pumpkin_pie\nanswer = difference_cost\n", "prediction": "0.41000000000000014\n"}
{"context": "Read the following table regarding \"Reptiles in zoos\" and then answer a question.\n\nZoo | Turtles | Lizards\nNorthside Zoo | 8 | 12\nEastern Zoo | 14 | 5\nWilderness Zoo | 13 | 18\nSouth Zoo | 5 | 7\nPacific Zoo | 13 | 15", "question": "A zoologist counted the number of reptiles at each of the state's zoos. Are there more reptiles at the Eastern Zoo or the Northside Zoo? Choose from the the options: ['Northside Zoo', 'Eastern Zoo']", "answer": "Northside Zoo", "ques_type": "multi_choice", "choices": ["Northside Zoo", "Eastern Zoo"], "code": "# Python code, return answer \n# Number of reptiles at each zoo\nnorthside_zoo_reptiles = 8 + 12  # Turtles + Lizards\neastern_zoo_reptiles = 14 + 5  # Turtles + Lizards\n\n# Determine which zoo has more reptiles\nif northside_zoo_reptiles > eastern_zoo_reptiles:\n    answer = 'Northside Zoo'\nelse:\n    answer = 'Eastern Zoo'\n\n", "prediction": "Northside Zoo\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbottle of vinegar | $0.81\njar of tomato sauce | $0.94\njar of salsa | $0.95\nbottle of hot sauce | $0.85\nbottle of soy sauce | $0.84\nbottle of mustard | $0.79", "question": "Anna has $2.00. Does she have enough to buy a jar of tomato sauce and a bottle of hot sauce? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# Prices of the items\nprice_tomato_sauce = 0.94\nprice_hot_sauce = 0.85\n# Total cost for both items\ntotal_cost = price_tomato_sauce + price_hot_sauce\n# Anna's available money\nanna_money = 2.00\n# Determine if Anna has enough money\nif anna_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nDate | Description | Received | Expenses | Available Funds\n | Balance: end of November | | | $328.20\n12/5 | wrapping paper | | $4.95 | $323.25\n12/16 | watching Ms. Bowen's cat | $15.00 | | $338.25\n12/29 | calendar | | $7.80 | $330.45", "question": "This is Sandra's complete financial record for December. How much money did Sandra spend on December 29?", "answer": "7.80", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# From the table, the amount Sandra spent on December 29 is provided directly.\nexpenses_dec_29 = 7.80 \nanswer = expenses_dec_29\n", "prediction": "7.8\n"}
{"context": "Read the following table regarding \"Pretzels sold\" and then answer a question.\n\nDay | Number of pretzels\nFriday | 678\nSaturday | 364\nSunday | 476", "question": "A pretzel stand owner kept track of the number of pretzels sold during the past 3 days. How many more pretzels did the stand sell on Friday than on Sunday?", "answer": "202", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \npretzels_friday = 678\npretzels_sunday = 476\n# Calculate the difference in pretzels sold\ndifference = pretzels_friday - pretzels_sunday\nanswer = difference\n", "prediction": "202\n"}
{"context": "Read the following table regarding \"Trips to the mall last month\" and then answer a question.\n\nNumber of trips | Frequency\n0 | 10\n1 | 7\n2 | 11\n3 | 20\n4 | 9\n5 | 5\n6 | 15", "question": "A marketing research firm asked people how many times they visited the mall last month. How many people went to the mall twice last month?", "answer": "11", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of people who went to the mall twice\nfrequency_twice = 11\nanswer = frequency_twice\n", "prediction": "11\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ncream cheese | $2 per lb\ncottage cheese | $5 per lb\nbutter | $2 per lb\nplain yogurt | $4 per lb\nGreek yogurt | $2 per lb", "question": "Justin went to the store. He bought 3.4 pounds of cream cheese. How much did he spend?", "answer": "6.80", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_cream_cheese = 2  # price of cream cheese per pound\npounds_bought = 3.4  # pounds of cream cheese purchased\n# Calculate total cost\ntotal_cost = price_per_pound_cream_cheese * pounds_bought\nanswer = total_cost\n", "prediction": "6.8\n"}
{"context": "Read the following table regarding \"Hockey games won by Sullivan High\" and then answer a question.\n\nYear | Games won\n2011 | 7\n2012 | 5\n2013 | 1\n2014 | 16\n2015 | 9", "question": "A pair of Sullivan High School hockey fans counted the number of games won by the school each year. According to the table, what was the rate of change between 2011 and 2012?", "answer": "-2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of games won in 2011 and 2012\ngames_won_2011 = 7\ngames_won_2012 = 5\n\n# Calculate the rate of change\nrate_of_change = games_won_2012 - games_won_2011\nanswer = rate_of_change\n", "prediction": "-2\n"}
{"context": "Read the following table regarding \"Zoo ticket prices\" and then answer a question.\n\nZoo | Adult | Child\nCentral Park | $10 | $5\nSouthern Nevada | $8 | $6\nCentral Florida | $11 | $7\nBronx | $15 | $11\nBoise | $6 | $3", "question": "Dr. Pratt, a zoo director, researched ticket prices at other zoos around the country. Of the zoos shown, which charges the most for a child ticket? Choose from the the options: ['Bronx', 'Central Florida', 'Central Park', 'Boise']", "answer": "Bronx", "ques_type": "multi_choice", "choices": ["Bronx", "Central Florida", "Central Park", "Boise"], "code": "# Python code, return answer \n# Define the zoo ticket prices for children\nticket_prices = {\n    'Central Park': 5,\n    'Southern Nevada': 6,\n    'Central Florida': 7,\n    'Bronx': 11,\n    'Boise': 3\n}\n# Find the zoo that charges the most for a child ticket\nmost_expensive_child_ticket_zoo = max(ticket_prices, key=ticket_prices.get)\nanswer = most_expensive_child_ticket_zoo\n", "prediction": "Bronx\n"}
{"context": "Read the following table regarding \"Class size\" and then answer a question.\n\nTeacher | Number of students\nMr. Watson | 14\nMr. Chen | 35\nMrs. Truman | 17\nMiss Urban | 27\nMs. Hershfeld | 31\nMrs. King | 19", "question": "Some teachers compared how many students are in their classes. What is the range of the numbers?", "answer": "21", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of students in each class\nclass_sizes = [14, 35, 17, 27, 31, 19]\n# Calculate the range\nrange_of_classes = max(class_sizes) - min(class_sizes)\nanswer = range_of_classes\n", "prediction": "21\n"}
{"context": "Read the following table regarding \"Pages per magazine\" and then answer a question.\n\nStem | Leaf \n2 | 1\n3 | 5, 6\n4 | 2, 2, 9\n5 | 3, 3, 8, 9", "question": "Sadie, a journalism student, counted the number of pages in several major magazines. What is the smallest number of pages?", "answer": "21", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The smallest number of pages corresponds to the smallest value in the stem-and-leaf display.\nsmallest_pages = 21  # From the stem \"2 | 1\", the value is 21 pages.\nanswer = smallest_pages\n", "prediction": "21\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nshirt signed by a famous soccer player | $1,906.00\npainting signed by a famous artist | $1,914.00\nbat signed by a famous baseball player | $6,338.00\nphotograph signed by a famous television star | $4,057.00\njersey signed by a famous basketball player | $3,096.00", "question": "Chloe has $7,949.00. Does she have enough to buy a painting signed by a famous artist and a bat signed by a famous baseball player? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# Prices of the items\nprice_painting = 1914.00\nprice_bat = 6338.00\n# Total cost of both items\ntotal_cost = price_painting + price_bat\n# Chloe's available funds\nchloe_funds = 7949.00\n# Check if Chloe has enough money\nif chloe_funds >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"Pop quiz scores\" and then answer a question.\n\nStem | Leaf \n1 | 2, 2, 5, 7\n2 | 1, 3\n3 | 1, 2, 2, 3, 8\n4 | 6, 6, 7\n5 | 0, 8\n6 | 1\n7 | 5\n8 | 5", "question": "Professor Harrell released the results of yesterday's pop quiz. How many students scored fewer than 63 points?", "answer": "17", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The scores represented in the stem-and-leaf display\nscores = [12, 12, 15, 17, 21, 23, 31, 32, 32, 33, 38, 46, 46, 47, 50, 58, 61, 75, 85, 85]\n\n# Count how many students scored fewer than 63\nfewer_than_63_count = sum(1 for score in scores if score < 63)\nanswer = fewer_than_63_count\n", "prediction": "17\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of packages | Number of pens\n1 | 10\n2 | 20\n3 | 30\n4 | ?", "question": "Each package has 10 pens. How many pens are in 4 packages?", "answer": "40", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \npens_per_package = 10 \nnumber_of_packages = 4 \n# Calculate the total number of pens in 4 packages\ntotal_pens = pens_per_package * number_of_packages\nanswer = total_pens\n", "prediction": "40\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ngreen Anjou pears | $1/lb\nred Anjou pears | $3/lb\nBartlett pears | $4/lb\nConcorde pears | $2/lb\nOsband pears | $3/lb\nBosc pears | $1/lb", "question": "Garrett buys 0.8 pounds of Concorde pears. What is the total cost?", "answer": "1.60", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_concorde = 2  # Price of Concorde pears\npounds_bought = 0.8  # Pounds of pears bought\n# Calculate total cost\ntotal_cost = price_per_pound_concorde * pounds_bought\nanswer = total_cost\n", "prediction": "1.6\n"}
{"context": "Read the following table regarding \"Movie schedule\" and then answer a question.\n\nMovie | Begin | End\nTwo Funny Guys in a Big City | 7:50 A.M. | 10:50 A.M.\nA Mysterious Mystery | 10:20 A.M. | 11:55 A.M.\nWitches and Wizards on Broomsticks | 11:25 A.M. | 12:45 P.M.\nTime Traveler II | 12:10 P.M. | 1:50 P.M.\nCartoon Penguin Adventure | 1:10 P.M. | 4:05 P.M.\nAliens from Outer Space | 3:20 P.M. | 4:45 P.M.\nReturn to Tumbleweed City | 3:50 P.M. | 6:20 P.M.", "question": "Look at the following schedule. Which movie ends at 6.20 P.M.? Choose from the the options: ['Witches and Wizards on Broomsticks', 'A Mysterious Mystery', 'Time Traveler II', 'Return to Tumbleweed City']", "answer": "Return to Tumbleweed City", "ques_type": "multi_choice", "choices": ["Witches and Wizards on Broomsticks", "A Mysterious Mystery", "Time Traveler II", "Return to Tumbleweed City"], "code": "# Python code, return answer \n# The movie that ends at 6:20 P.M.\nanswer = 'Return to Tumbleweed City'\n", "prediction": "Return to Tumbleweed City\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nOption | Change in phone price\nAdd an upgrade | $60\nBuy a used phone | -$75", "question": "Becky is looking at the price of new cell phones online. Her favorite company, OrangeTech, has a special this weekend. Becky can add an upgrade to a phone for an additional cost, or she can buy a used phone to get a discount. The change in price for each option is shown in the table. Which option results in a greater change in price? Choose from the the options: ['adding an upgrade', 'buying a used phone']", "answer": "buying a used phone", "ques_type": "multi_choice", "choices": ["adding an upgrade", "buying a used phone"], "code": "# Python code, return answer \nchange_upgrade = 60 \nchange_used_phone = -75 \n# Compare the changes in price (considering the absolute values for comparison)\nif change_upgrade > abs(change_used_phone): \n    answer = 'adding an upgrade'\nelse:\n    answer = 'buying a used phone'\n", "prediction": "buying a used phone\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nmap of Canada | $9.08\nbook of crossword puzzles | $7.05\nmagazine | $1.89\nmap of the world | $3.06\nbook of piano music | $9.78", "question": "How much money does Damon need to buy 6 magazines?", "answer": "11.34", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_magazine = 1.89 \nnumber_of_magazines = 6 \ntotal_cost = price_per_magazine * number_of_magazines\nanswer = total_cost\n", "prediction": "11.34\n"}
{"context": "Read the following table regarding \"Fish per tank\" and then answer a question.\n\nStem | Leaf \n2 | 5\n3 | 0, 4\n4 | 2, 8, 9\n5 | 5, 7\n6 | 4, 7\n7 | 1, 2, 5\n8 | 2, 6", "question": "A pet store owner had her staff count the number of fish in each tank. How many tanks have at least 28 fish?", "answer": "14", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Listing the number of fish per tank from the stem-and-leaf display\nfish_counts = [25, 30, 34, 42, 48, 49, 55, 57, 64, 67, 71, 72, 75, 82, 86]\n\n# Count how many tanks have at least 28 fish\ntanks_with_at_least_28_fish = len([count for count in fish_counts if count >= 28])\nanswer = tanks_with_at_least_28_fish\n", "prediction": "14\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nLocation | Elevation (m)\nTop of the skyscraper | 275\nBottom of the mine | -260", "question": "Mabel likes watching the show Engineering Marvels. In last night's episode, the engineering team visited a tall skyscraper and a deep mine. A banner at the bottom of the screen showed the elevation of each location the team visited. Which location is closer to sea level? Choose from the the options: ['top of the skyscraper', 'bottom of the mine']", "answer": "bottom of the mine", "ques_type": "multi_choice", "choices": ["top of the skyscraper", "bottom of the mine"], "code": "# Python code, return answer \nelevation_skyscraper = 275  # meters\nelevation_mine = -260  # meters\n\n# Determine which location is closer to sea level (0 meters)\nif elevation_skyscraper > elevation_mine:\n    answer = 'top of the skyscraper'\nelse:\n    answer = 'bottom of the mine'\n    \n", "prediction": "top of the skyscraper\n"}
{"context": "Read the following table regarding \"Quiz show scores\" and then answer a question.\n\nName | Score\nBarbara | 48\nHanson | 45\nEzra | 46\nPatrick | 43", "question": "The players on a quiz show received the following scores. Who had the lowest score? Choose from the the options: ['Barbara', 'Hanson', 'Ezra', 'Patrick']", "answer": "Patrick", "ques_type": "multi_choice", "choices": ["Barbara", "Hanson", "Ezra", "Patrick"], "code": "# Python code, return answer \nscores = {\n    'Barbara': 48,\n    'Hanson': 45,\n    'Ezra': 46,\n    'Patrick': 43\n}\n# Find the player with the lowest score\nlowest_score_player = min(scores, key=scores.get)\nanswer = lowest_score_player\n", "prediction": "Patrick\n"}
{"context": "Read the following table regarding \"Sheep owned\" and then answer a question.\n\nFarmer | Number of sheep\nFarmer Jo | 60\nFarmer Bob | 86\nFarmer Betty | 67\nFarmer Sally | 57\nFarmer Wendy | 76", "question": "Some farmers compared how many sheep were in their flocks. What is the median of the numbers?", "answer": "67", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of sheep owned by each farmer\nsheep_counts = [60, 86, 67, 57, 76]\n# Sort the counts to find the median\nsheep_counts.sort()\n# Calculate the median\nn = len(sheep_counts)\nif n % 2 == 1:\n    median = sheep_counts[n // 2]\nelse:\n    median = (sheep_counts[n // 2 - 1] + sheep_counts[n // 2]) / 2\nanswer = median\n", "prediction": "67\n"}
{"context": "Read the following table regarding \"Push-up competition (number of push-ups)\" and then answer a question.\n\nStem | Leaf \n2 | 3, 3, 7, 8\n3 | 8\n4 | 2, 4, 5\n5 | 0, 0, 6, 6, 8, 9\n6 | 5, 9\n7 | 6\n8 | 3\n9 | 0, 0", "question": "Cassie's P.E. class participated in a push-up competition, and Cassie wrote down how many push-ups each person could do. How many people did fewer than 55 push-ups?", "answer": "10", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Count how many people did fewer than 55 push-ups based on the stem-and-leaf display\n# The stem values represent tens, and the leaves represent units.\npush_ups = [\n    23, 23, 27, 28,  # Stem 2\n    38,              # Stem 3\n    42, 44, 45,     # Stem 4\n    50, 50, 56, 56, 58, 59,  # Stem 5\n    65, 69,         # Stem 6\n    76,             # Stem 7\n    83,             # Stem 8\n    90, 90          # Stem 9\n]\n\n# Count how many did fewer than 55 push-ups\nfewer_than_55 = sum(1 for push_up in push_ups if push_up < 55)\nanswer = fewer_than_55\n", "prediction": "10\n"}
{"context": "Read the following table regarding \"Clubs\" and then answer a question.\n\nName | Number of clubs\nFinn | 8\nSam | 10\nNellie | 10\nKaren | 4\nLuther | 7\nDale | 9\nMason | 2\nWesley | 2", "question": "Some students compared how many clubs they belong to. What is the range of the numbers?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of clubs for each student\nclubs = [8, 10, 10, 4, 7, 9, 2, 2]\n# Calculate the range\nrange_of_clubs = max(clubs) - min(clubs)\nanswer = range_of_clubs\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ncomic book | $1.57\nhistory book | $7.02\ncookbook | $8.95\nmap of Africa | $3.29\ndog calendar | $7.51", "question": "How much more does a cookbook cost than a map of Africa?", "answer": "5.66", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_cookbook = 8.95 \ncost_map_of_africa = 3.29 \n# Calculate the difference in cost\ndifference_in_cost = cost_cookbook - cost_map_of_africa\nanswer = difference_in_cost\n", "prediction": "5.659999999999999\n"}
{"context": "Read the following table regarding \"Stuffed animal collections\" and then answer a question.\n\nName | Number of stuffed animals\nMeg | 263\nBecky | 232\nSavannah | 226\nEvelyn | 236", "question": "Some friends compared the sizes of their stuffed animal collections. Who has the most stuffed animals? Choose from the the options: ['Meg', 'Becky', 'Savannah', 'Evelyn']", "answer": "Meg", "ques_type": "multi_choice", "choices": ["Meg", "Becky", "Savannah", "Evelyn"], "code": "# Python code, return answer \nstuffed_animal_collections = {\n    'Meg': 263,\n    'Becky': 232,\n    'Savannah': 226,\n    'Evelyn': 236\n}\n# Find the friend with the most stuffed animals\nmost_stuffed_animals_friend = max(stuffed_animal_collections, key=stuffed_animal_collections.get)\nanswer = most_stuffed_animals_friend\n", "prediction": "Meg\n"}
{"context": "Read the following table regarding \"Average waiting time at a doctor's office\" and then answer a question.\n\nMonth | Waiting time (minutes)\nMay | 28\nJune | 34\nJuly | 36\nAugust | 33\nSeptember | 22", "question": "Barry, a doctor's office receptionist, tracked the average waiting time at the office each month. According to the table, what was the rate of change between May and June?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nwaiting_time_may = 28\nwaiting_time_june = 34\n\n# Calculate the rate of change\nrate_of_change = waiting_time_june - waiting_time_may\nanswer = rate_of_change\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"Characters per book\" and then answer a question.\n\nStem | Leaf \n1 | 0, 2, 3, 7, 7\n2 | 0, 2, 4\n3 | 0, 4, 5, 6, 6, 8, 9\n4 | 0, 3, 6, 7\n5 | 4, 4, 7, 9", "question": "Reagan kept track of the number of characters in each book she read. How many books had at least 30 characters?", "answer": "15", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Extracting the number of characters from the stem-and-leaf display.\ncharacters = [\n    10, 12, 13, 17, 17,  # From stem 1\n    20, 22, 24,          # From stem 2\n    30, 34, 35, 36, 36, 38, 39,  # From stem 3\n    40, 43, 46, 47,      # From stem 4\n    54, 54, 57, 59       # From stem 5\n]\n\n# Counting how many books had at least 30 characters\ncount_at_least_30 = sum(1 for char in characters if char >= 30)\nanswer = count_at_least_30\n", "prediction": "15\n"}
{"context": "Read the following table regarding \"Hockey games won by Knox High\" and then answer a question.\n\nYear | Games won\n2015 | 10\n2016 | 8\n2017 | 12\n2018 | 15\n2019 | 12", "question": "A pair of Knox High School hockey fans counted the number of games won by the school each year. According to the table, what was the rate of change between 2018 and 2019?", "answer": "-3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of games won in 2018 and 2019\ngames_won_2018 = 15\ngames_won_2019 = 12\n\n# Calculate the rate of change\nrate_of_change = games_won_2019 - games_won_2018\nanswer = rate_of_change\n", "prediction": "-3\n"}
{"context": "Read the following table regarding \"Web pages visited\" and then answer a question.\n\nPerson | Number of Web pages\nTim | 7\nReba | 10\nJustin | 10\nCooper | 9\nValeria | 4\nGrace | 2\nHarry | 8\nEric | 7", "question": "Several people compared how many Web pages they had visited. What is the range of the numbers?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of web pages visited by each person\nweb_pages_visited = [7, 10, 10, 9, 4, 2, 8, 7]\n# Calculate the range\nrange_of_web_pages = max(web_pages_visited) - min(web_pages_visited)\nanswer = range_of_web_pages\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"Ice cream cones sold\" and then answer a question.\n\nDay | Number of ice cream cones\nTuesday | 848\nWednesday | 847\nThursday | 887\nFriday | 878", "question": "An ice cream shop kept track of how many ice cream cones it sold in the past 4 days. On which day did the shop sell the most ice cream cones? Choose from the the options: ['Tuesday', 'Wednesday', 'Thursday', 'Friday']", "answer": "Thursday", "ques_type": "multi_choice", "choices": ["Tuesday", "Wednesday", "Thursday", "Friday"], "code": "# Python code, return answer \nice_cream_sales = {\n    'Tuesday': 848,\n    'Wednesday': 847,\n    'Thursday': 887,\n    'Friday': 878\n}\n# Find the day with the most ice cream cones sold\nmost_cones_day = max(ice_cream_sales, key=ice_cream_sales.get)\nanswer = most_cones_day\n", "prediction": "Thursday\n"}
{"context": "Read the following table regarding \"Game show scores\" and then answer a question.\n\nStem | Leaf \n1 | 1, 4\n2 | 1, 1, 2, 2, 4, 7\n3 | 2, 2, 6, 9\n4 | 0, 3\n5 | 0, 1, 5, 9\n6 | 1, 6\n7 | 1, 3, 5, 6\n8 | 4", "question": "The staff of a game show tracked the performance of all the contestants during the past season. How many people scored at least 45 points but fewer than 70 points?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Extract scores from the stem-and-leaf display for scores between 45 and 69\nscores = [\n    41, 44,   # From stem 1\n    21, 21, 22, 22, 24, 27,  # From stem 2\n    32, 32, 36, 39,  # From stem 3\n    40, 43,  # From stem 4\n    50, 51, 55, 59,  # From stem 5\n    61, 66,  # From stem 6\n    71, 73, 75, 76,  # From stem 7\n    84  # From stem 8\n]\n\n# Count scores that are >= 45 and < 70\ncount_scores = sum(1 for score in scores if 45 <= score < 70)\nanswer = count_scores\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"Coin collections\" and then answer a question.\n\nName | Number of coins\nCora | 76\nHarold | 74\nAntonio | 86\nWayne | 65\nEliana | 65\nShannon | 67\nLogan | 80\nKendra | 71", "question": "Some friends discussed the sizes of their coin collections. What is the range of the numbers?", "answer": "21", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of coins collected by each person\ncoin_counts = [76, 74, 86, 65, 65, 67, 80, 71]\n\n# Calculate the range\nrange_of_coins = max(coin_counts) - min(coin_counts)\nanswer = range_of_coins\n", "prediction": "21\n"}
{"context": "Read the following table regarding \"Web pages visited\" and then answer a question.\n\nPerson | Number of Web pages\nTisha | 7\nWyatt | 7\nShawn | 8\nChristine | 9\nLee | 3\nRafi | 4\nVince | 3\nKamal | 2", "question": "Several people compared how many Web pages they had visited. What is the range of the numbers?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of Web pages visited by each person\nweb_pages_visited = [7, 7, 8, 9, 3, 4, 3, 2]\n\n# Calculate the range\nrange_of_web_pages = max(web_pages_visited) - min(web_pages_visited)\nanswer = range_of_web_pages\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"Zoo ticket prices\" and then answer a question.\n\nZoo | Adult | Child\nLos Angeles | $13 | $8\nHouston | $10 | $6\nCleveland | $10 | $7\nBrookfield | $12 | $8", "question": "Dr. Hatfield, a zoo director, researched ticket prices at other zoos around the country. How much does an adult ticket to the Cleveland Zoo cost?", "answer": "10", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The price of an adult ticket to the Cleveland Zoo\ncleveland_adult_ticket_price = 10  # From the table\nanswer = cleveland_adult_ticket_price\n", "prediction": "10\n"}
{"context": "Read the following table regarding \"Next trip\" and then answer a question.\n\nSeason | Frequency\nfall | 12\nspring | 19\nsummer | 47\nwinter | 13", "question": "Wanderlust Travel Agency asked customers when they plan to take their next trip. This frequency chart shows their answers. How many fewer people said their next trip will be in winter than in summer?", "answer": "34", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of trips planned in winter and summer\nwinter_frequency = 13\nsummer_frequency = 47\n# Calculate the difference\ndifference = summer_frequency - winter_frequency\nanswer = difference\n", "prediction": "34\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nfountain | $987.00\nbarbecue grill | $795.00\niron bench | $493.00\npicnic table | $529.00\nlawn mower | $173.00", "question": "How much money does Mitch need to buy a picnic table, an iron bench, and a lawn mower?", "answer": "1,195", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\npicnic_table_price = 529.00\niron_bench_price = 493.00\nlawn_mower_price = 173.00\n\n# Total amount needed\ntotal_cost = picnic_table_price + iron_bench_price + lawn_mower_price\nanswer = total_cost\n", "prediction": "1195.0\n"}
{"context": "Read the following table regarding \"Games won by the Oakland baseball team\" and then answer a question.\n\nYear | Games won\n2014 | 46\n2015 | 45\n2016 | 42\n2017 | 38\n2018 | 45", "question": "Fans of the Oakland baseball team compared the number of games won by their team each year. According to the table, what was the rate of change between 2016 and 2017?", "answer": "-4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Games won in 2016 and 2017\ngames_won_2016 = 42\ngames_won_2017 = 38\n\n# Rate of change calculation\nrate_of_change = games_won_2017 - games_won_2016\nanswer = rate_of_change\n", "prediction": "-4\n"}
{"context": "Read the following table regarding \"Biking last week\" and then answer a question.\n\nName | Miles\nPaul | 18\nAnthony | 16\nKeith | 12\nLauren | 19", "question": "The members of the cycling club compared how many miles they biked last week. Who biked the fewest miles? Choose from the the options: ['Paul', 'Anthony', 'Keith', 'Lauren']", "answer": "Keith", "ques_type": "multi_choice", "choices": ["Paul", "Anthony", "Keith", "Lauren"], "code": "# Python code, return answer \nmiles_biked = {\n    'Paul': 18,\n    'Anthony': 16,\n    'Keith': 12,\n    'Lauren': 19\n}\n# Find the member who biked the fewest miles\nfewest_miles_member = min(miles_biked, key=miles_biked.get)\nanswer = fewest_miles_member\n", "prediction": "Keith\n"}
{"context": "Read the following table regarding \"Movies checked out\" and then answer a question.\n\nDay | Number of movies\nThursday | 387\nFriday | 122\nSaturday | 546", "question": "A video store clerk looked up the number of movies checked out each day. How many more movies were checked out on Saturday than on Friday?", "answer": "424", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nmovies_checked_out_friday = 122\nmovies_checked_out_saturday = 546\n# Calculate the difference\ndifference = movies_checked_out_saturday - movies_checked_out_friday\nanswer = difference\n", "prediction": "424\n"}
{"context": "Read the following table regarding \"Pages read\" and then answer a question.\n\nMonth | Number of pages\nJune | 60\nJuly | 69\nAugust | 64\nSeptember | 61", "question": "Dalton kept a log of how many pages he read each month. In which month did Dalton read the most pages? Choose from the the options: ['June', 'July', 'August', 'September']", "answer": "July", "ques_type": "multi_choice", "choices": ["June", "July", "August", "September"], "code": "# Python code, return answer \npages_read = {\n    'June': 60,\n    'July': 69,\n    'August': 64,\n    'September': 61\n}\n# Find the month with the most pages read\nmost_pages_month = max(pages_read, key=pages_read.get)\nanswer = most_pages_month\n", "prediction": "July\n"}
{"context": "Read the following table regarding \"Club sizes (number of members)\" and then answer a question.\n\nStem | Leaf \n1 | 2, 4, 6, 7, 7\n2 | 0\n3 | 2\n4 | 2, 4, 6\n5 | 2\n6 | \n7 | 1, 6, 9\n8 | 0, 1, 4, 6, 9", "question": "Warren found out the sizes of all the clubs at his school. How many clubs have exactly 64 members?", "answer": "0", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# To find the number of clubs with exactly 64 members from the stem-and-leaf display\n# The stem '6' represents the tens place, and the leaf '4' represents the ones place.\nclubs_with_64_members = 1  # There is one leaf corresponding to 64 members in the stem '6'\nanswer = clubs_with_64_members\n", "prediction": "1\n"}
{"context": "Read the following table regarding \"Going to the library last month\" and then answer a question.\n\nNumber of trips | Frequency\n1 | 1\n2 | 10\n3 | 19\n4 | 7", "question": "In considering whether to open a new branch, the city council examined the number of times some typical residents went to the library last month. How many people went to the library more than 3 times last month?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of trips to the library\nfrequency = {\n    1: 1,\n    2: 10,\n    3: 19,\n    4: 7\n}\n# Calculate the number of people who went to the library more than 3 times\npeople_more_than_3_times = frequency.get(4, 0)  # Only 4 trips are more than 3\nanswer = people_more_than_3_times\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"Daily low temperature\" and then answer a question.\n\nDay | Temperature (\u00c2\u00b0C)\nWednesday | 5\nThursday | 14\nFriday | 13\nSaturday | 9\nSunday | 6\nMonday | 7", "question": "Dwayne graphed the daily low temperature for 6 days. What is the mean of the numbers?", "answer": "9", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ntemperatures = [5, 14, 13, 9, 6, 7]\n# Calculate the mean temperature\nmean_temperature = sum(temperatures) / len(temperatures)\nanswer = mean_temperature\n", "prediction": "9.0\n"}
{"context": "Read the following table regarding \"Charity donations\" and then answer a question.\n\nMonth | Number of donations\nJuly | 353\nAugust | 331\nSeptember | 358\nOctober | 385", "question": "A charity recorded how many donations it received each month. In which month did the charity receive the most donations? Choose from the the options: ['July', 'August', 'September', 'October']", "answer": "October", "ques_type": "multi_choice", "choices": ["July", "August", "September", "October"], "code": "# Python code, return answer \ndonations = {\n    'July': 353,\n    'August': 331,\n    'September': 358,\n    'October': 385\n}\n# Find the month with the most donations\nmost_donations_month = max(donations, key=donations.get)\nanswer = most_donations_month\n", "prediction": "October\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nfunnel cake stand | $5,293.00\npopsicle stand | $7,784.00\nhot dog stand | $9,372.00\nshaved ice cart | $5,576.00\nice cream truck | $6,382.00", "question": "Amanda has $11,631.00. Does she have enough to buy a funnel cake stand and an ice cream truck? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \nfunnel_cake_stand_price = 5293.00\nice_cream_truck_price = 6382.00\ntotal_cost = funnel_cake_stand_price + ice_cream_truck_price\namanda_budget = 11631.00\n\nif amanda_budget >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"Baseball runs scored last season\" and then answer a question.\n\nRuns scored | Frequency\n0 | 1\n1 | 9\n2 | 12\n3 | 8\n4 | 4", "question": "A statistician analyzed the number of runs scored by players last season. How many players scored at least 3 runs last season?", "answer": "12", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of players scoring runs\nfrequency = {\n    0: 1,\n    1: 9,\n    2: 12,\n    3: 8,\n    4: 4\n}\n\n# Calculate the number of players who scored at least 3 runs\nplayers_at_least_3_runs = frequency[3] + frequency[4]\nanswer = players_at_least_3_runs\n", "prediction": "12\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of offices | Number of stools\n1 | 5\n2 | 10\n3 | 15\n4 | 20\n5 | ?", "question": "Each office has 5 stools. How many stools are in 5 offices?", "answer": "25", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Each office has 5 stools\nstools_per_office = 5 \n# Number of offices\nnumber_of_offices = 5 \n# Total stools in 5 offices\ntotal_stools = stools_per_office * number_of_offices \nanswer = total_stools\n", "prediction": "25\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npopsicle stand | $5,600\npeanut cart | $6,730\nshaved ice cart | $7,510\npretzel stand | $8,591\npopcorn cart | $8,947", "question": "Paula has $13,967. Does she have enough to buy a pretzel stand and a popsicle stand? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \npopsicle_stand_price = 5600\npretzel_stand_price = 8591\ntotal_cost = popsicle_stand_price + pretzel_stand_price\npaula_money = 13967\n\nif paula_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nhockey ticket | $69.12\ngolf ticket | $68.63\nfootball ticket | $16.48\nsoccer ticket | $62.14", "question": "How much more does a hockey ticket cost than a football ticket?", "answer": "52.64", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nhockey_ticket_price = 69.12\nfootball_ticket_price = 16.48\n# Calculate the difference in price\ndifference = hockey_ticket_price - football_ticket_price\nanswer = difference\n", "prediction": "52.64\n"}
{"context": "Read the following table regarding \"Eating macaroni and cheese last month\" and then answer a question.\n\nTimes eaten | Frequency\n0 | 1\n1 | 8\n2 | 19\n3 | 16\n4 | 12\n5 | 10", "question": "A food manufacturer surveyed consumers about their macaroni and cheese consumption. How many people ate macaroni and cheese more than 1 time?", "answer": "57", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of consumption\nfrequency = {\n    0: 1,\n    1: 8,\n    2: 19,\n    3: 16,\n    4: 12,\n    5: 10\n}\n# Calculate the number of people who ate macaroni and cheese more than 1 time\npeople_more_than_once = sum(frequency[times] for times in frequency if times > 1)\nanswer = people_more_than_once\n", "prediction": "NameError(\"name 'frequency' is not defined\")"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n17 | 2\n18 | 11\n19 | 20", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "linear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the differences in y-values for equal differences in x-values.\nx_values = [17, 18, 19]\ny_values = [2, 11, 20]\n\n# Calculate the differences\ndifferences = [y_values[i+1] - y_values[i] for i in range(len(y_values)-1)]\n# Check if the differences are constant\nis_linear = all(diff == differences[0] for diff in differences)\n\n# Determine the type of function\nif is_linear:\n    answer = 'linear'\nelse:\n    answer = 'nonlinear'\n\n", "prediction": "NameError(\"name 'y_values' is not defined\")"}
{"context": "Read the following table regarding \"Blocks from school\" and then answer a question.\n\nName | Number of blocks\nRosa | 6\nCeline | 5\nNaomi | 5\nJake | 7\nHector | 6\nEduardo | 7\nDestiny | 7", "question": "Some students compared how many blocks they live from school. What is the mode of the numbers?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nfrom statistics import mode\n\n# Number of blocks from school for each student\nblocks = [6, 5, 5, 7, 6, 7, 7]\n\n# Calculate the mode\nmode_blocks = mode(blocks)\nanswer = mode_blocks\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbarbecue grill | $548.00\nfountain | $965.00\nwooden bench | $291.00\niron bench | $140.00\npicnic table | $598.00\nlawn mower | $145.00", "question": "Shelley has $272.00. Does she have enough to buy a lawn mower and an iron bench? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# Prices of the lawn mower and iron bench\nlawn_mower_price = 145.00\niron_bench_price = 140.00\n# Total cost\ntotal_cost = lawn_mower_price + iron_bench_price\n# Amount Shelley has\nshelley_amount = 272.00\n# Determine if Shelley has enough money\nif shelley_amount >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"Menu items per restaurant\" and then answer a question.\n\nStem | Leaf \n1 | 0, 0, 2, 6\n2 | 4, 4, 4, 4, 5, 7\n3 | 4\n4 | 0, 2, 5, 6, 8", "question": "A food critic counted the number of menu items at each restaurant in town. How many restaurants have exactly 24 menu items?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The number of restaurants with exactly 24 menu items corresponds to the stem \"2\" with leaves indicating the values.\n# The stem \"2\" corresponds to 20 to 29 items, so we need to find the leaf that indicates 4, which corresponds to 24 items.\n# The stem-and-leaf indicates that there are four \"4\" leaves for the stem \"2\". This represents 24 (2 | 4).\n\n# Therefore, there are 4 restaurants with exactly 24 menu items.\nanswer = 4\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ngreen beads | $3/kilogram\nwhite beads | $2/kilogram\nblue beads | $3/kilogram\npurple beads | $2/kilogram\norange beads | $2/kilogram\nred beads | $2/kilogram\nblack beads | $3/kilogram", "question": "Donald went to the store. He bought 1/2 of a kilogram of purple beads. How much did he spend?", "answer": "1", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_kilogram_purple_beads = 2  # $2 per kilogram for purple beads\nkilograms_bought = 0.5  # 1/2 kilogram\n# Calculate total spent\ntotal_spent = price_per_kilogram_purple_beads * kilograms_bought\nanswer = total_spent\n", "prediction": "1.0\n"}
{"context": "Read the following table regarding \"Schools in each town\" and then answer a question.\n\nTown | Number of schools\nChesterton | 10\nAshland | 10\nWatertown | 7\nRiverside | 4\nMayfield | 6", "question": "The county released data about how many schools there are in each town. What is the range of the numbers?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of schools in each town\nschools_count = [10, 10, 7, 4, 6]\n# Calculate the range\nrange_of_schools = max(schools_count) - min(schools_count)\nanswer = range_of_schools\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nlawn sprinkler | $13.00\nladder | $36.00\nwheelbarrow | $30.00\nwrench | $11.00\nlawn mower | $96.00\ncan of paint | $15.00", "question": "How much money does Kylie need to buy a ladder and a wrench?", "answer": "47", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_ladder = 36.00\nprice_wrench = 11.00\n# Total cost for the ladder and the wrench\ntotal_cost = price_ladder + price_wrench\nanswer = total_cost\n", "prediction": "47.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nticket for a Hawaiian cruise | $7,072.00\nticket for an Australian cruise | $4,739.00\nticket for a South American cruise | $6,857.00\nticket for a Caribbean cruise | $6,039.00", "question": "How much money does Levi need to buy a ticket for a Hawaiian cruise and a ticket for a Caribbean cruise?", "answer": "13,111", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_hawaiian_cruise = 7072.00 \ncost_caribbean_cruise = 6039.00 \n# Calculate total cost for both tickets\ntotal_cost = cost_hawaiian_cruise + cost_caribbean_cruise\nanswer = total_cost\n", "prediction": "13111.0\n"}
{"context": "Read the following table regarding \"Billboards per city\" and then answer a question.\n\nStem | Leaf \n1 | 5\n2 | 2, 6, 8, 8\n3 | 3, 6, 6, 8, 8, 9\n4 | 7\n5 | 0, 0, 3, 9\n6 | 0, 2, 4, 9\n7 | 5\n8 | 7, 7\n9 | 0", "question": "The advertising agency counted the number of billboards in each city in the state. What is the largest number of billboards?", "answer": "90", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest number of billboards corresponds to the largest value in the stem-and-leaf display.\nlargest_billboards = 90  # From the stem \"9 | 0\", the value is 90 billboards.\nanswer = largest_billboards\n", "prediction": "90\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ncumin | $5.12/lb\ncinnamon | $6.60/lb\npaprika | $4.76/lb\ncoriander | $5.39/lb", "question": "Tanner went to the store and bought 5 pounds of cumin and 1 pound of cinnamon. How much did he spend?", "answer": "32.20", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_cumin = 5.12 \nprice_per_pound_cinnamon = 6.60 \n\npounds_cumin = 5 \npounds_cinnamon = 1 \n\n# Calculate total cost\ntotal_cost = (price_per_pound_cumin * pounds_cumin) + (price_per_pound_cinnamon * pounds_cinnamon)\nanswer = total_cost\n", "prediction": "32.2\n"}
{"context": "Read the following table regarding \"Law firm hours billed\" and then answer a question.\n\nPartner | Hours billed\nRudy | 870\nErica | 790\nLucas | 810\nJill | 560\nGordon | 610", "question": "A law firm in Princeton kept track of how many hours were billed by each partner last year. What fraction of the hours were billed by Gordon? Simplify your answer.", "answer": "61/364", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total hours billed by all partners\ntotal_hours = 870 + 790 + 810 + 560 + 610\n# Hours billed by Gordon\ngordon_hours = 610\n# Calculate the fraction of hours billed by Gordon\nfraction_gordon = gordon_hours / total_hours\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_fraction = Fraction(gordon_hours, total_hours).limit_denominator()\nanswer = simplified_fraction\n", "prediction": "61/364\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nphoto album | $45.00\nairplane calendar | $13.00\ndictionary | $16.00\nmap of Africa | $10.00\nmath book | $19.00", "question": "How much money does Destiny need to buy a math book and a dictionary?", "answer": "35", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_math_book = 19.00 \nprice_dictionary = 16.00 \n# Total cost for the math book and the dictionary\ntotal_cost = price_math_book + price_dictionary\nanswer = total_cost\n", "prediction": "35.0\n"}
{"context": "Read the following table regarding \"Cans of food collected\" and then answer a question.\n\nName | Number of cans of food\nAiden | 6\nHaley | 10\nChandler | 9\nTroy | 9\nJared | 10", "question": "Aiden's class recorded how many cans of food each student collected for their canned food drive. What is the median of the numbers?", "answer": "9", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nimport statistics\n\n# List of cans collected by each student\ncans_collected = [6, 10, 9, 9, 10]\n\n# Calculate the median\nmedian_cans = statistics.median(cans_collected)\nanswer = median_cans\n", "prediction": "9\n"}
{"context": "Read the following table regarding \"Tickets sold\" and then answer a question.\n\nDay | Number of tickets\nTuesday | 317\nWednesday | 371\nThursday | 313\nFriday | 337", "question": "Martin tracked the attendance at the school play. On which day did the fewest people attend the play? Choose from the the options: ['Tuesday', 'Wednesday', 'Thursday', 'Friday']", "answer": "Thursday", "ques_type": "multi_choice", "choices": ["Tuesday", "Wednesday", "Thursday", "Friday"], "code": "# Python code, return answer \ntickets_sold = {\n    'Tuesday': 317,\n    'Wednesday': 371,\n    'Thursday': 313,\n    'Friday': 337\n}\n# Find the day with the fewest tickets sold\nfewest_tickets_day = min(tickets_sold, key=tickets_sold.get)\nanswer = fewest_tickets_day\n", "prediction": "Thursday\n"}
{"context": "Read the following table regarding \"Pairs of shoes per store\" and then answer a question.\n\nStem | Leaf \n2 | 9\n3 | 4, 9\n4 | 0, 7, 7\n5 | 7, 9\n6 | 5, 6, 6, 6, 8\n7 | 2, 3, 3, 4, 8\n8 | 0, 4", "question": "Edwin counted the number of pairs of shoes for sale at each of the shoe stores in the mall. How many stores have exactly 66 pairs of shoes?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The value 66 corresponds to the stem \"6\" and the leaf \"6\".\nstores_with_66_pairs = 1  # Only one store has exactly 66 pairs of shoes.\nanswer = stores_with_66_pairs\n", "prediction": "1\n"}
{"context": "Read the following table regarding \"Trips to an amusement park last year\" and then answer a question.\n\nNumber of trips | Frequency\n1 | 13\n2 | 10\n3 | 1\n4 | 16\n5 | 5", "question": "Logan surveyed people at the amusement park where he works and asked them how many times they visited last year. How many people went to an amusement park more than 2 times?", "answer": "22", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of trips greater than 2\nfrequency_data = {\n    1: 13,\n    2: 10,\n    3: 1,\n    4: 16,\n    5: 5\n}\n\n# Calculating the number of people who went more than 2 times\npeople_more_than_2_times = frequency_data[3] + frequency_data[4] + frequency_data[5]\nanswer = people_more_than_2_times\n", "prediction": "22\n"}
{"context": "Read the following table regarding \"Stuffed animal collections\" and then answer a question.\n\nName | Number of stuffed animals\nIsaac | 281\nEdgar | 221\nJustin | 282\nKatie | 218", "question": "Some friends compared the sizes of their stuffed animal collections. Who has the fewest stuffed animals? Choose from the the options: ['Isaac', 'Edgar', 'Justin', 'Katie']", "answer": "Katie", "ques_type": "multi_choice", "choices": ["Isaac", "Edgar", "Justin", "Katie"], "code": "# Python code, return answer \nstuffed_animals = {\n    'Isaac': 281,\n    'Edgar': 221,\n    'Justin': 282,\n    'Katie': 218\n}\n# Find the friend with the fewest stuffed animals\nfewest_animals_friend = min(stuffed_animals, key=stuffed_animals.get)\nanswer = fewest_animals_friend\n", "prediction": "Katie\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nballet ticket | $15\ncar show ticket | $21\norchestra ticket | $38\nopera ticket | $65", "question": "Pedro has $82. Does he have enough to buy a ballet ticket and an opera ticket? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \nballet_ticket_price = 15\nopera_ticket_price = 65\ntotal_cost = ballet_ticket_price + opera_ticket_price\npedro_budget = 82\n\n# Check if Pedro has enough money\nif pedro_budget >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"Dance studio schedule\" and then answer a question.\n\nClass | Begin | End\nhip hop dance | 8:45 A.M. | 9:15 A.M.\nswing dance | 9:25 A.M. | 10:35 A.M.\nmodern dance | 10:40 A.M. | 11:50 A.M.\nballroom dance | 12:05 P.M. | 1:00 P.M.\nadvanced ballet | 1:05 P.M. | 2:15 P.M.\ntap dance | 2:25 P.M. | 3:30 P.M.\nsalsa dance | 3:40 P.M. | 5:15 P.M.\nwestern dance | 5:20 P.M. | 6:55 P.M.", "question": "Look at the following schedule. Which class ends at 3.30 P.M.? Choose from the the options: ['salsa dance class', 'hip hop dance class', 'tap dance class', 'ballroom dance class']", "answer": "tap dance class", "ques_type": "multi_choice", "choices": ["salsa dance class", "hip hop dance class", "tap dance class", "ballroom dance class"], "code": "# Python code, return answer \n# Class that ends at 3:30 P.M. based on the given schedule\nclass_ending_at_330 = 'tap dance'  # According to the schedule\nanswer = class_ending_at_330 + ' class'\n", "prediction": "tap dance class\n"}
{"context": "Read the following table regarding \"Birds per flock\" and then answer a question.\n\nStem | Leaf \n2 | 3, 3, 7\n3 | \n4 | 4\n5 | 4\n6 | \n7 | 3", "question": "The bird watcher counted the number of birds in each flock that passed overhead. How many flocks had exactly 23 birds?", "answer": "2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# From the stem-and-leaf display, we can see that the stem \"2\" corresponds to 20s\n# The leaves are 3, 3, and 7, representing the counts 23, 23, and 27.\n# Therefore, the flocks with exactly 23 birds can be counted.\nflocks_with_23_birds = 2  # There are two '3's in the leaf of stem '2'\nanswer = flocks_with_23_birds\n", "prediction": "2\n"}
{"context": "Read the following table regarding \"Commute time (minutes)\" and then answer a question.\n\nStem | Leaf \n2 | 6\n3 | 5, 8, 9\n4 | 0, 4, 4\n5 | 3, 5\n6 | 3, 5, 9, 9\n7 | 0, 2, 8\n8 | 1, 5, 8\n9 | 0", "question": "A business magazine surveyed its readers about their commute times. What is the longest commute time?", "answer": "90", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The longest commute time corresponds to the largest value in the stem-and-leaf display.\nlongest_commute_time = 90  # From the stem \"9 | 0\", the value is 90 minutes.\nanswer = longest_commute_time\n", "prediction": "90\n"}
{"context": "Read the following table regarding \"Bus schedule\" and then answer a question.\n\nthe grocery store | 9:00 A.M. | 9:15 A.M. | 9:30 A.M. | 9:45 A.M. | 10:30 A.M.\nthe library | 9:15 A.M. | 9:30 A.M. | 9:45 A.M. | 10:00 A.M. | 10:45 A.M.\nthe doctor's office | 10:15 A.M. | 10:30 A.M. | 10:45 A.M. | 11:00 A.M. | 11:45 A.M.\nthe zoo | 10:45 A.M. | 11:00 A.M. | 11:15 A.M. | 11:30 A.M. | 12:15 P.M.\nthe movie theater | 11:45 A.M. | 12:00 P.M. | 12:15 P.M. | 12:30 P.M. | 1:15 P.M.\nthe science museum | 12:15 P.M. | 12:30 P.M. | 12:45 P.M. | 1:00 P.M. | 1:45 P.M.\nthe playground | 1:00 P.M. | 1:15 P.M. | 1:30 P.M. | 1:45 P.M. | 2:30 P.M.", "question": "Look at the following schedule. How long does it take to get from the doctor's office to the playground? Choose from the the options: ['15 minutes', '2 hours and 30 minutes', '1 hour and 45 minutes', '2 hours and 45 minutes']", "answer": "2 hours and 45 minutes", "ques_type": "multi_choice", "choices": ["15 minutes", "2 hours and 30 minutes", "1 hour and 45 minutes", "2 hours and 45 minutes"], "code": "# Python code, return answer \n# The next bus from the doctor's office to the playground\ndeparture_doctors_office = \"10:45 A.M.\" # last bus time from doctor's office\narrival_playground = \"1:00 P.M.\" # first bus time at playground after doctor's office\n\n# Convert times to minutes since the start of the day\ndef time_to_minutes(time_str):\n    period = time_str[-2:]\n    time_parts = time_str[:-3].split(':')\n    hours = int(time_parts[0]) + (12 if period == \"P.M.\" and time_parts[0] != '12' else 0)\n    minutes = int(time_parts[1])\n    return hours * 60 + minutes\n\ndeparture_time = time_to_minutes(departure_doctors_office)\narrival_time = time_to_minutes(arrival_playground)\n\n# Calculate the duration\nduration = arrival_time - departure_time\n\n# Convert duration back to hours and minutes\nhours = duration // 60\nminutes = duration % 60\nanswer = f\"{hours} hours and {minutes} minutes\"\n", "prediction": "ValueError(\"invalid literal for int() with base 10: '45 A'\")"}
{"context": "Read the following table regarding \"Company sizes (number of employees)\" and then answer a question.\n\nStem | Leaf \n0 | 5, 5, 7, 7, 9\n1 | \n2 | 1, 1, 1, 6, 9, 9\n3 | 0, 8, 9\n4 | 2, 5\n5 | 0, 0, 4, 4", "question": "The Lancaster Chamber of Commerce researched the number of employees working at local companies. How many companies have exactly 5 employees?", "answer": "2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# From the stem-and-leaf display, we can see the leaf for stem \"0\" which indicates 0 to 9 employees.\n# The only entry that corresponds to exactly 5 employees is in the stem \"0\" with leaf \"5\".\n\n# Count of companies with exactly 5 employees\ncount_companies_exactly_5 = 2  # There are two '5's in the leaves for stem \"0\".\nanswer = count_companies_exactly_5\n", "prediction": "2\n"}
{"context": "Read the following table regarding \"Fish per tank\" and then answer a question.\n\nStem | Leaf \n2 | 2\n3 | 0, 1, 6\n4 | 2, 3, 3, 3, 3, 4, 6, 7, 7\n5 | 2, 6, 6, 8, 9\n6 | 6, 9\n7 | 0, 7, 8", "question": "A pet store owner had his staff count the number of fish in each tank. How many tanks have exactly 43 fish?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The tanks with exactly 43 fish can be found in the stem-and-leaf display.\ntanks_with_43_fish = 1  # From the stem \"4 | 3\", there is one occurrence of 43 fish.\nanswer = tanks_with_43_fish\n", "prediction": "1\n"}
{"context": "Read the following table regarding \"Company sizes\" and then answer a question.\n\nCompany | Number of employees\nDavidson Insurance | 668\nMadison Corporation | 646\nABC Electronics | 648\nBenson and Blakely | 684", "question": "The board of commerce recorded how many employees work at each company. Which company has the fewest employees? Choose from the the options: ['Davidson Insurance', 'Madison Corporation', 'ABC Electronics', 'Benson and Blakely']", "answer": "Madison Corporation", "ques_type": "multi_choice", "choices": ["Davidson Insurance", "Madison Corporation", "ABC Electronics", "Benson and Blakely"], "code": "# Python code, return answer \ncompanies = {\n    'Davidson Insurance': 668,\n    'Madison Corporation': 646,\n    'ABC Electronics': 648,\n    'Benson and Blakely': 684\n}\n# Find the company with the fewest employees\nfewest_employees_company = min(companies, key=companies.get)\nanswer = fewest_employees_company\n", "prediction": "Madison Corporation\n"}
{"context": "Read the following table regarding \"Spelling bee results\" and then answer a question.\n\nName | Number of words spelled correctly\nErnest | 45\nCooper | 45\nNora | 47\nKylie | 44\nAlexa | 48\nFrank | 47\nBrendan | 44\nLaura | 45", "question": "After a spelling bee, some students compared how many words they spelled correctly. What is the mode of the numbers?", "answer": "45", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nfrom statistics import mode\n\n# List of words spelled correctly by each student\nwords_spelled_correctly = [45, 45, 47, 44, 48, 47, 44, 45]\n\n# Calculate the mode\nmode_value = mode(words_spelled_correctly)\nanswer = mode_value\n", "prediction": "45\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\norange envelope | $0.03\npiece of pink paper | $0.08\npiece of elegant stationery | $0.05\nwhite note card | $0.04\npiece of floral stationery | $0.02", "question": "Mike has $0.04. Does he have enough to buy a piece of floral stationery and a white note card? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# Prices of the items\nprice_floral_stationery = 0.02\nprice_white_note_card = 0.04\n\n# Total cost of both items\ntotal_cost = price_floral_stationery + price_white_note_card\n\n# Amount Mike has\nmike_money = 0.04\n\n# Check if Mike has enough money\nif mike_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"Planet Volume (km3) Primary composition\" and then answer a question.\n\nMercury | 6.08 x | 1010 rock\nVenus | 9.28 x | 1011 rock\nEarth | 1.08 x | 1012 rock\nMars | 1.63 x | 1011 rock\nJupiter | 1.43 x | 1015 gas\nSaturn | 8.27 x | 1014 gas\nUranus | 6.83 x | 1013 ice\nNeptune | 6.25 x | 1013 ice", "question": "Use the data to answer the question below. Is the following statement about our solar system true or false? Three-quarters of the planets are larger than Earth. Choose from the the options: ['true', 'false']", "answer": "false", "ques_type": "multi_choice", "choices": ["true", "false"], "code": "# Python code, return answer\n# Given volumes for the planets in km^3\nplanet_volumes = {\n    'Mercury': 6.08e10,\n    'Venus': 9.28e11,\n    'Earth': 1.08e12,\n    'Mars': 1.63e11,\n    'Jupiter': 1.43e15,\n    'Saturn': 8.27e14,\n    'Uranus': 6.83e13,\n    'Neptune': 6.25e13\n}\n\n# Count how many planets are larger than Earth\nearth_volume = planet_volumes['Earth']\nlarger_than_earth = sum(1 for volume in planet_volumes.values() if volume > earth_volume)\n\n# Total number of planets\ntotal_planets = len(planet_volumes)\n\n# Determine if three-quarters are larger than Earth\nif larger_than_earth > (3/4) * total_planets:\n    answer = 'true'\nelse:\n    answer = 'false'\n\n", "prediction": "NameError(\"name 'earth_volume' is not defined\")"}
{"context": "Read the following table regarding \"Broken crayons per box\" and then answer a question.\n\nStem | Leaf \n0 | 0, 1, 5, 5\n1 | \n2 | 0\n3 | 1, 2, 6, 8\n4 | 2, 8\n5 | 1, 2\n6 | 2, 4\n7 | 1, 5\n8 | 8\n9 | 0, 0", "question": "A crayon factory monitored the number of broken crayons per box during the past day. How many boxes had at least 60 broken crayons?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Extract the values from the stem-and-leaf display\nbroken_crayons = [\n    0, 1, 5, 5,  # Stem 0\n    10,           # Stem 1 (no leaves)\n    20,           # Stem 2\n    31, 32, 36, 38,  # Stem 3\n    42, 48,      # Stem 4\n    51, 52,      # Stem 5\n    62, 64,      # Stem 6\n    71, 75,      # Stem 7\n    88,          # Stem 8\n    90, 90       # Stem 9\n]\n\n# Count boxes with at least 60 broken crayons\ncount_at_least_60 = sum(1 for crayons in broken_crayons if crayons >= 60)\nanswer = count_at_least_60\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"Broken lights per string\" and then answer a question.\n\nStem | Leaf \n2 | 1, 4, 9\n3 | 0, 2\n4 | 1, 3, 4\n5 | 5, 5, 6\n6 | 4, 5, 6, 6, 9\n7 | 2, 5", "question": "While hanging Christmas lights for neighbors, Zach counted the number of broken lights on each string. What is the largest number of broken lights?", "answer": "75", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest number of broken lights corresponds to the highest value in the stem-and-leaf display.\nlargest_broken_lights = 79  # From the stem \"7 | 2, 5\", the value is 75.\nanswer = largest_broken_lights\n", "prediction": "79\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nsoftball glove | $9.69\nbicycle helmet | $8.14\nbaseball | $2.18\ngolf ball | $2.33\nswimsuit | $8.80\nbike horn | $5.86", "question": "How much money does Ben need to buy a golf ball, a bicycle helmet, and a swimsuit?", "answer": "19.27", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items Ben wants to buy\nprice_golf_ball = 2.33\nprice_bicycle_helmet = 8.14\nprice_swimsuit = 8.80\n# Total cost for the items\ntotal_cost = price_golf_ball + price_bicycle_helmet + price_swimsuit\nanswer = total_cost\n", "prediction": "19.270000000000003\n"}
{"context": "Read the following table regarding \"States visited\" and then answer a question.\n\nName | Number of states\nColette | 2\nKayla | 8\nLester | 3\nBrandon | 8\nEdmond | 8\nTammy | 3\nMaddie | 2", "question": "Colette's class recorded how many states each student has visited. What is the mode of the numbers?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nfrom collections import Counter\n\n# List of the number of states visited by each student\nstates_visited = [2, 8, 3, 8, 8, 3, 2]\n\n# Calculate the mode\ncount = Counter(states_visited)\nmode_data = count.most_common()\n\n# The mode is the number with the highest frequency\nmode_value = mode_data[0][0]\nanswer = mode_value\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"Phone calls received\" and then answer a question.\n\nDay | Number of calls\nMonday | 632\nTuesday | 222\nWednesday | 374\nThursday | 825\nFriday | 507", "question": "A technical support line tracked how many calls it received each day. How many more calls did the support line receive on Thursday than on Friday?", "answer": "318", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncalls_thursday = 825\ncalls_friday = 507\n# Calculate the difference in calls received\ndifference = calls_thursday - calls_friday\nanswer = difference\n", "prediction": "318\n"}
{"context": "Read the following table regarding \"Olympic medals\" and then answer a question.\n\nCountry | 2000 | 2004\nBrazil | 12 | 10\nSweden | 12 | 7\nFinland | 4 | 2", "question": "A sports fan decided to examine the pattern of medals won by certain countries at several Olympic games. Which country won fewer medals in 2004, Brazil or Finland? Choose from the the options: ['Finland', 'Brazil']", "answer": "Finland", "ques_type": "multi_choice", "choices": ["Finland", "Brazil"], "code": "# Python code, return answer \nbrazil_medals_2004 = 10\nfinland_medals_2004 = 2\n\n# Compare the number of medals won by Brazil and Finland in 2004\nif finland_medals_2004 < brazil_medals_2004:\n    answer = 'Finland'\nelse:\n    answer = 'Brazil'\n\n", "prediction": "Finland\n"}
{"context": "Read the following table regarding \"Cheese consumption per capita (kg)\" and then answer a question.\n\nCountry | 1996 | 2006\nArgentina | 11 | 11\nGreat Britain | 9 | 10\nAustria | 10 | 17", "question": "An agricultural agency is researching how much cheese people have been eating in different parts of the world. How much cheese was consumed per capita in Austria in 2006?", "answer": "17", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncheese_consumption_austria_2006 = 17  # From the table, the cheese consumption per capita in Austria in 2006\nanswer = cheese_consumption_austria_2006\n", "prediction": "17\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n17 | 20\n18 | 12\n19 | 4", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "linear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear or nonlinear, we can check the differences in y-values for equal increments in x-values.\n\nx_values = [17, 18, 19]\ny_values = [20, 12, 4]\n\n# Calculate the differences\ny_diff_1 = y_values[1] - y_values[0]  # Difference when x goes from 17 to 18\ny_diff_2 = y_values[2] - y_values[1]  # Difference when x goes from 18 to 19\n\n# Check if the differences are constant\nif y_diff_1 != y_diff_2:\n    answer = 'nonlinear'\nelse:\n    answer = 'linear'\n", "prediction": "linear\n"}
{"context": "Read the following table regarding \"Biking last week\" and then answer a question.\n\nName | Miles\nClayton | 58\nLauren | 47\nRoger | 53\nKyle | 46\nBrianna | 57\nMiles | 59\nHarold | 50", "question": "The members of the cycling club compared how many miles they biked last week. What is the median of the numbers?", "answer": "53", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of miles biked by each member\nmiles = [58, 47, 53, 46, 57, 59, 50]\n# Sorting the list to find the median\nmiles.sort()\n\n# Finding the median\nn = len(miles)\nif n % 2 == 1:  # Odd number of elements\n    median = miles[n // 2]\nelse:  # Even number of elements\n    median = (miles[n // 2 - 1] + miles[n // 2]) / 2\n\nanswer = median\n", "prediction": "53\n"}
{"context": "Read the following table regarding \"Tractors made\" and then answer a question.\n\nMonth | Number of tractors\nOctober | 887\nNovember | 848\nDecember | 847\nJanuary | 878", "question": "A farm equipment company kept a record of the number of tractors made each month. In which month did the company make the most tractors? Choose from the the options: ['October', 'November', 'December', 'January']", "answer": "October", "ques_type": "multi_choice", "choices": ["October", "November", "December", "January"], "code": "# Python code, return answer \ntractors_made = {\n    'October': 887,\n    'November': 848,\n    'December': 847,\n    'January': 878\n}\n# Find the month with the most tractors made\nmost_tractors_month = max(tractors_made, key=tractors_made.get)\nanswer = most_tractors_month\n", "prediction": "October\n"}
{"context": "Read the following table regarding \"Going swimming last month\" and then answer a question.\n\nNumber of times | Frequency\n1 | 15\n2 | 2\n3 | 4\n4 | 5", "question": "Cedarburg will decide whether to extend its public pool's hours by looking at the number of times its residents visited the pool last month. How many people went swimming exactly twice last month?", "answer": "2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The frequency of people who went swimming exactly twice\nfrequency_twice = 2\nnumber_of_people_twice = frequency_twice\nanswer = number_of_people_twice\n", "prediction": "2\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n3 | 8\n4 | 12\n5 | 16", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "linear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the differences in y-values for constant x differences.\nx_values = [3, 4, 5]\ny_values = [8, 12, 16]\n\n# Calculate the differences\ndifferences = [y_values[i+1] - y_values[i] for i in range(len(y_values) - 1)]\n# If the differences are constant, it's linear\nis_linear = all(diff == differences[0] for diff in differences)\n\nanswer = 'linear' if is_linear else 'nonlinear'\n", "prediction": "NameError(\"name 'y_values' is not defined\")"}
{"context": "Read the following table regarding \"Record obstacle course completion times\" and then answer a question.\n\nYear | Record time (minutes)\n2007 | 29\n2008 | 27\n2009 | 24\n2010 | 29\n2011 | 30", "question": "Each year, the campers at Keith's summer camp try to set that summer's record for finishing the obstacle course as quickly as possible. According to the table, what was the rate of change between 2010 and 2011?", "answer": "1", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Record times for the years\ntime_2010 = 29\ntime_2011 = 30\n\n# Rate of change calculation\nrate_of_change = time_2011 - time_2010\nanswer = rate_of_change\n", "prediction": "1\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n0 | 5\n7 | 18\n0 | 9\n19 | 7", "question": "Look at this table. Is this relation a function? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# A relation is a function if each input (x value) is associated with exactly one output (y value).\n# We will check if any x value is repeated with different y values.\n\n# Create a dictionary to store x values and their corresponding y values\nrelation = {\n    0: [5, 9],\n    7: [18],\n    19: [7]\n}\n\n# Check if any x value has more than one corresponding y value\nis_function = all(len(values) == 1 for values in relation.values())\n\nanswer = 'yes' if is_function else 'no'\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"Miles hiked\" and then answer a question.\n\nDay | Number of miles\nFriday | 9\nSaturday | 14\nSunday | 20\nMonday | 17\nTuesday | 16\nWednesday | 10", "question": "Sadie went on a camping trip and logged the number of miles she hiked each day. What is the range of the numbers?", "answer": "11", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of miles hiked each day\nmiles_hiked = [9, 14, 20, 17, 16, 10]\n# Calculate the range\nrange_miles = max(miles_hiked) - min(miles_hiked)\nanswer = range_miles\n", "prediction": "11\n"}
{"context": "Read the following table regarding \"Bricks per building\" and then answer a question.\n\nStem | Leaf \n5 | 2, 4, 5\n6 | 5\n7 | 3, 4\n8 | \n9 | 0, 0, 0", "question": "The architecture student counted the number of bricks in each building in her neighborhood. How many buildings have exactly 90 bricks?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# From the stem-and-leaf display, the leaf for stem '9' indicates the number of bricks.\n# The leaf values show that there are three buildings with exactly 90 bricks.\nbuildings_with_90_bricks = 3\nanswer = buildings_with_90_bricks\n", "prediction": "3\n"}
{"context": "Read the following table regarding \"Couches sold\" and then answer a question.\n\nDay | Number of couches\nFriday | 5\nSaturday | 4\nSunday | 10\nMonday | 9\nTuesday | 7", "question": "A furniture store kept a record of how many couches it sold each day. What is the median of the numbers?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of couches sold each day\ncouches_sold = [5, 4, 10, 9, 7]\n\n# Sort the list to find the median\ncouches_sold.sort()\n\n# Calculate the median\nn = len(couches_sold)\nif n % 2 == 1:\n    median = couches_sold[n // 2]\nelse:\n    median = (couches_sold[n // 2 - 1] + couches_sold[n // 2]) / 2\n\nanswer = median\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nlong white envelope | $0.38\nlighthouse postcard | $0.42\ntulip stamp | $0.14\nrobot stamp | $0.42\ndeer postcard | $0.61\nroll of packaging tape | $0.29", "question": "How much money does Gordon need to buy a deer postcard and a roll of packaging tape?", "answer": "0.90", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_deer_postcard = 0.61 \ncost_packaging_tape = 0.29 \n# Total cost for both items\ntotal_cost = cost_deer_postcard + cost_packaging_tape\nanswer = total_cost\n", "prediction": "0.8999999999999999\n"}
{"context": "Read the following table regarding \"Doing cartwheels\" and then answer a question.\n\nDay | Number of cartwheels\nSunday | 11\nMonday | 14\nTuesday | 10\nWednesday | 14\nThursday | 11\nFriday | 11\nSaturday | 10", "question": "A gymnast jotted down the number of cartwheels she did each day. What is the mode of the numbers?", "answer": "11", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of cartwheels done each day\ncartwheels = [11, 14, 10, 14, 11, 11, 10]\n# Finding the mode\nfrom statistics import mode\nmode_cartwheels = mode(cartwheels)\nanswer = mode_cartwheels\n", "prediction": "11\n"}
{"context": "Read the following table regarding \"Chocolate consumption per capita (kg)\" and then answer a question.\n\nCountry | 2002 | 2005\nPoland | 3 | 4\nAustralia | 4 | 5\nAustria | 8 | 9\nSwitzerland | 11 | 10", "question": "Spencer's Candies has been studying how much chocolate people have been eating in different countries. How much chocolate was consumed per capita in Austria in 2005?", "answer": "9", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Chocolate consumption per capita in Austria in 2005\nchocolate_consumption_austria_2005 = 9\nanswer = chocolate_consumption_austria_2005\n", "prediction": "9\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nice cream truck | $7,785\nshaved ice cart | $7,131\nhot dog stand | $6,141\nfunnel cake stand | $7,631", "question": "How much more does an ice cream truck cost than a funnel cake stand?", "answer": "154", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_ice_cream_truck = 7785 \ncost_funnel_cake_stand = 7631 \n# Calculate the difference in cost\ndifference_in_cost = cost_ice_cream_truck - cost_funnel_cake_stand\nanswer = difference_in_cost\n", "prediction": "154\n"}
{"context": "Read the following table regarding \"Vegetables No vegetables Total\" and then answer a question.\n\nMen | 0.15 | 0.25 | 0.40\nWomen | 0.40 | 0.20 | 0.60\nTotal | 0.55 | 0.45 | 1.00", "question": "The manager of Nonno's Pizza asked 40 customers if they prefer to have vegetables or no vegetables on their pizzas. This table shows the relative frequencies from the survey. How many more women than men prefer vegetables on their pizza?", "answer": "10", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total number of customers surveyed\ntotal_customers = 40\n\n# Calculate number of men and women who prefer vegetables\nmen_prefer_vegetables = total_customers * 0.15\nwomen_prefer_vegetables = total_customers * 0.40\n\n# Calculate how many more women prefer vegetables than men\ndifference = women_prefer_vegetables - men_prefer_vegetables\nanswer = difference\n", "prediction": "10.0\n"}
{"context": "Read the following table regarding \"Furniture\" and then answer a question.\n\nType of Wood | Beds | Bookcases\nMaple | 6 | 7\nOak | 10 | 20\nPine | 2 | 18\nMahogany | 19 | 9", "question": "Kim Furniture Exports is shipping pieces of furniture made out of different types of wood. Of which type of wood are the fewest bookcases made? Choose from the the options: ['maple', 'mahogany', 'pine', 'oak']", "answer": "maple", "ques_type": "multi_choice", "choices": ["maple", "mahogany", "pine", "oak"], "code": "# Python code, return answer \n# Define the number of bookcases made from each type of wood\nbookcases = {\n    'maple': 7,\n    'oak': 20,\n    'pine': 18,\n    'mahogany': 9\n}\n\n# Find the type of wood with the fewest bookcases\nfewest_bookcases_wood = min(bookcases, key=bookcases.get)\nanswer = fewest_bookcases_wood\n", "prediction": "maple\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$575 | 17,700 | 15,300\n$695 | 14,300 | 16,800\n$815 | 10,900 | 18,300\n$935 | 7,500 | 19,800\n$1,055 | 4,100 | 21,300", "question": "Look at the table. Then answer the question. At a price of $815, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "surplus", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \nquantity_demanded_at_815 = 10900 \nquantity_supplied_at_815 = 18300 \n\n# Determine if there's a shortage or surplus\nif quantity_demanded_at_815 < quantity_supplied_at_815:\n    answer = 'surplus'\nelse:\n    answer = 'shortage'\n\n", "prediction": "surplus\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of fields | Number of goats\n1 | 10\n2 | 20\n3 | ?", "question": "Each field has 10 goats. How many goats are in 3 fields?", "answer": "30", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ngoats_per_field = 10\nnumber_of_fields = 3\n# Calculate the total number of goats\ntotal_goats = goats_per_field * number_of_fields\nanswer = total_goats\n", "prediction": "30\n"}
{"context": "Read the following table regarding \"Movies checked out\" and then answer a question.\n\nDay | Number of movies\nSunday | 56\nMonday | 58\nTuesday | 58\nWednesday | 60\nThursday | 60\nFriday | 56\nSaturday | 60", "question": "A video store clerk looked up the number of movies checked out each day. What is the mode of the numbers?", "answer": "60", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nfrom statistics import mode\n\n# List of the number of movies checked out each day\nmovies_checked_out = [56, 58, 58, 60, 60, 56, 60]\n\n# Calculate the mode\nanswer = mode(movies_checked_out)\n", "prediction": "60\n"}
{"context": "Read the following table regarding \"Cups of lemonade sold\" and then answer a question.\n\nDay | Number of cups\nFriday | 10\nSaturday | 6\nSunday | 8\nMonday | 8\nTuesday | 8\nWednesday | 9\nThursday | 8", "question": "Devin wrote down how many cups of lemonade he sold in the past 7 days. What is the median of the numbers?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of cups sold each day\ncups_sold = [10, 6, 8, 8, 8, 9, 8]\n\n# Sort the list to find the median\nsorted_cups = sorted(cups_sold)\n\n# Calculate the median\nn = len(sorted_cups)\nif n % 2 == 1:  # Odd number of elements\n    median = sorted_cups[n // 2]\nelse:  # Even number of elements\n    median = (sorted_cups[n // 2 - 1] + sorted_cups[n // 2]) / 2\n\nanswer = median\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"Years of teaching\" and then answer a question.\n\nTeacher | Number of years\nMiss Lim | 9\nMr. Perez | 1\nMs. Chan | 1\nMiss Watson | 9\nMr. Park | 1", "question": "Some teachers compared how many years they have been teaching. What is the mode of the numbers?", "answer": "1", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nyears_of_teaching = [9, 1, 1, 9, 1]\n# Finding the mode\nfrom statistics import mode\nmode_years = mode(years_of_teaching)\nanswer = mode_years\n", "prediction": "1\n"}
{"context": "Read the following table regarding \"Planet Volume (billions of km3) Primary composition\" and then answer a question.\n\nMercury | 60 rock\nVenus | 930 rock\nEarth | 1,090 rock\nMars | 160 rock\nJupiter | 1,431,280 gas\nSaturn | 827,130 gas\nUranus | 68,330 ice\nNeptune | 62,530 ice", "question": "Use the data to answer the question below. Is the following statement about our solar system true or false? 50% of the planets are made mainly of gas. Choose from the the options: ['true', 'false']", "answer": "false", "ques_type": "multi_choice", "choices": ["true", "false"], "code": "# Python code, return answer \n# Count the number of planets and those composed mainly of gas\ntotal_planets = 8\ngas_planets = 4  # Jupiter, Saturn, Uranus, Neptune\n\n# Calculate the percentage of gas planets\npercentage_gas = (gas_planets / total_planets) * 100\n\n# Determine if the statement is true or false\nif percentage_gas == 50:\n    answer = 'true'\nelse:\n    answer = 'false'\n\n", "prediction": "true\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nyellow bath towel | $18\nnavy blue bath mat | $11\nfleece blanket | $10\nbeach blanket | $13", "question": "How much money does Aaron need to buy 8 yellow bath towels and 3 beach blankets?", "answer": "183", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_yellow_towel = 18 \nprice_beach_blanket = 13 \n# Calculate total cost\ntotal_cost = (8 * price_yellow_towel) + (3 * price_beach_blanket)\nanswer = total_cost\n", "prediction": "183\n"}
{"context": "Read the following table regarding \"Band instruments\" and then answer a question.\n\nInstrument | Girls | Boys\nSaxophone | 18 | 17\nClarinet | 15 | 6\nDrums | 6 | 20\nFlute | 19 | 18\nTrumpet | 19 | 9", "question": "Mr. Khan, the band director, counted the number of instruments played by each member of the band. Which instrument do the fewest boys play? Choose from the the options: ['trumpet', 'flute', 'clarinet', 'saxophone']", "answer": "clarinet", "ques_type": "multi_choice", "choices": ["trumpet", "flute", "clarinet", "saxophone"], "code": "# Python code, return answer \n# Number of boys playing each instrument\ninstruments = {\n    'saxophone': 17,\n    'clarinet': 6,\n    'drums': 20,\n    'flute': 18,\n    'trumpet': 9\n}\n\n# Find the instrument with the fewest boys playing\nfewest_boys_instrument = min(instruments, key=instruments.get)\nanswer = fewest_boys_instrument\n", "prediction": "clarinet\n"}
{"context": "Read the following table regarding \"Baseballs hit\" and then answer a question.\n\nDay | Number of baseballs\nTuesday | 5\nWednesday | 3\nThursday | 5\nFriday | 4\nSaturday | 4", "question": "A baseball player paid attention to how many baseballs he hit in practice each day. What is the median of the numbers?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of baseballs hit each day\nbaseballs_hit = [5, 3, 5, 4, 4]\n\n# Sort the list to find the median\nbaseballs_hit.sort()\n\n# Calculate the median\nn = len(baseballs_hit)\nif n % 2 == 1:  # If the number of observations is odd\n    median = baseballs_hit[n // 2]\nelse:           # If the number of observations is even\n    median = (baseballs_hit[n // 2 - 1] + baseballs_hit[n // 2]) / 2\n\nanswer = median\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"Baseballs hit\" and then answer a question.\n\nDay | Number of baseballs\nTuesday | 4\nWednesday | 7\nThursday | 9\nFriday | 8\nSaturday | 5\nSunday | 8\nMonday | 4", "question": "A baseball player paid attention to how many baseballs he hit in practice each day. What is the median of the numbers?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of baseballs hit each day\nbaseballs_hit = [4, 7, 9, 8, 5, 8, 4]\n\n# Sort the list to find the median\nbaseballs_hit.sort()\n\n# Calculate the median\nn = len(baseballs_hit)\nif n % 2 == 0:\n    median = (baseballs_hit[n//2 - 1] + baseballs_hit[n//2]) / 2\nelse:\n    median = baseballs_hit[n//2]\n\nanswer = median\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbook about art | $4.00\nbook about snakes | $7.00\nbook about soccer | $9.00\nbook about cars | $1.00\nbook about South America | $5.00", "question": "How much money does Sally need to buy a book about soccer and a book about South America?", "answer": "14", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_book_soccer = 9.00 \nprice_book_south_america = 5.00 \n# Total cost for both books\ntotal_cost = price_book_soccer + price_book_south_america\nanswer = total_cost\n", "prediction": "14.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nrug | $276\nchandelier | $143\nsilver coat rack | $791\noil painting | $681", "question": "How much money does Kelly need to buy 5 chandeliers and 3 oil paintings?", "answer": "2,758", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_chandelier = 143 \nprice_oil_painting = 681 \n# Calculate total cost for 5 chandeliers and 3 oil paintings\ntotal_cost = (5 * price_chandelier) + (3 * price_oil_painting)\nanswer = total_cost\n", "prediction": "2758\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n7 | 8\n8 | 7\n9 | 3", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "nonlinear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear or nonlinear, we can check the differences in y-values for equal increments of x.\n# Calculate the differences\nx_values = [7, 8, 9]\ny_values = [8, 7, 3]\n\n# Calculate the differences\ny_differences = [y_values[i+1] - y_values[i] for i in range(len(y_values) - 1)]\n# Check if the differences are constant\nis_linear = all(diff == y_differences[0] for diff in y_differences)\n\nanswer = 'linear' if is_linear else 'nonlinear'\n", "prediction": "NameError(\"name 'y_values' is not defined\")"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of tool boxes | Number of nails\n1 | 10\n2 | 20\n3 | ?", "question": "Each tool box has 10 nails. How many nails are in 3 tool boxes?", "answer": "30", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Each tool box contains 10 nails\nnails_per_tool_box = 10 \nnumber_of_tool_boxes = 3 \n# Calculate total nails in 3 tool boxes\ntotal_nails = nails_per_tool_box * number_of_tool_boxes\nanswer = total_nails\n", "prediction": "30\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nKalamata olives | $7/pound\nSpanish olives | $4/pound\nGreek olives | $3/pound\npimento olives | $6/pound\ngreen olives | $5/pound", "question": "Brenda went to the store and bought 1 pound of Spanish olives. How much did she spend?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_spanish_olives = 4  # price of Spanish olives per pound\npounds_bought = 1  # pounds bought by Brenda\nanswer = price_per_pound_spanish_olives * pounds_bought  # total cost\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"Stock prices\" and then answer a question.\n\nCompany | Wednesday | Thursday\nWatson and Partners | $14 | $8\nComputer Data Company | $14 | $11\nWhite and Company | $13 | $15", "question": "A stock broker followed the stock prices of a certain set of companies. On Thursday, how much more did Computer Data Company's stock cost than Watson and Partners's stock?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Stock prices on Thursday\ncomputer_data_price = 11\nwatson_partners_price = 8\n# Calculate the difference\nprice_difference = computer_data_price - watson_partners_price\nanswer = price_difference\n", "prediction": "3\n"}
{"context": "Read the following table regarding \"Time Leroy spent on homework\" and then answer a question.\n\nDay | Minutes\nTuesday | 45\nWednesday | 43\nThursday | 47\nFriday | 45\nSaturday | 38", "question": "Leroy kept track of how long it took to finish his homework each day. According to the table, what was the rate of change between Thursday and Friday?", "answer": "-2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Minutes spent on homework\nthursday_minutes = 47\nfriday_minutes = 45\n# Calculate the rate of change between Thursday and Friday\nrate_of_change = friday_minutes - thursday_minutes\nanswer = rate_of_change\n", "prediction": "-2\n"}
{"context": "Read the following table regarding \"Toy cars\" and then answer a question.\n\nNumber of toy cars | Frequency\n0 | 0\n1 | 7\n2 | 9\n3 | 16\n4 | 2", "question": "In order to complete their model of a futuristic highway, students in Ms. Laura's design class find out how many toy cars each student can bring to class. How many students in the class have exactly 2 toy cars?", "answer": "9", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# From the table, we find the frequency of students with exactly 2 toy cars\nfrequency_of_2_toy_cars = 9\nanswer = frequency_of_2_toy_cars\n", "prediction": "9\n"}
{"context": "Read the following table regarding \"Swimming pool schedule\" and then answer a question.\n\nActivity | Begin | End\ndiving club practice | 8:50 A.M. | 9:20 A.M.\nwater polo practice | 9:30 A.M. | 11:05 A.M.\nwater aerobics | 11:20 A.M. | 12:50 P.M.\nintermediate swimming class | 1:00 P.M. | 2:20 P.M.\nlap swim | 2:25 P.M. | 3:50 P.M.", "question": "Look at the following schedule. Which activity ends at 3.50 P.M.? Choose from the the options: ['water polo practice', 'water aerobics', 'lap swim', 'diving club practice']", "answer": "lap swim", "ques_type": "multi_choice", "choices": ["water polo practice", "water aerobics", "lap swim", "diving club practice"], "code": "# Python code, return answer \n# The ending time of each activity\nactivities = {\n    'diving club practice': '9:20 A.M.',\n    'water polo practice': '11:05 A.M.',\n    'water aerobics': '12:50 P.M.',\n    'intermediate swimming class': '2:20 P.M.',\n    'lap swim': '3:50 P.M.'\n}\n# Identify the activity that ends at 3:50 P.M.\nactivity_ends_at_350 = [activity for activity, end_time in activities.items() if end_time == '3:50 P.M.']\nanswer = activity_ends_at_350[0]  # There is only one activity that ends at this time\n", "prediction": "lap swim\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nsquare washers | $3 per kg\ndock washers | $3 per kg\nlock washers | $3 per kg\nflat washers | $3 per kg", "question": "Tessa went to the store and bought 4+3/4 kilograms of square washers. How much did she spend?", "answer": "14.25", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_kg = 3 \nkilograms_bought = 4 + 3/4 \n# Calculate the total cost\ntotal_cost = price_per_kg * kilograms_bought\nanswer = total_cost\n", "prediction": "14.25\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nshort steel screw | $0.16\nsmall paintbrush | $0.53\npiece of plastic pipe | $0.80\nminiature padlock | $0.17", "question": "How much money does Elizabeth need to buy a miniature padlock and a piece of plastic pipe?", "answer": "0.97", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_miniature_padlock = 0.17 \nprice_plastic_pipe = 0.80 \n# Total cost for both items\ntotal_cost = price_miniature_padlock + price_plastic_pipe\nanswer = total_cost\n", "prediction": "0.9700000000000001\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nspiral snail shell | $0.01\nscallop shell | $0.03\npolished silver top shell | $0.02\noyster shell | $0.06\npink and white striped shell | $0.04", "question": "How much more does an oyster shell cost than a scallop shell?", "answer": "0.03", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_oyster_shell = 0.06 \ncost_scallop_shell = 0.03 \n# Calculate the difference in cost\ndifference = cost_oyster_shell - cost_scallop_shell\nanswer = difference\n", "prediction": "0.03\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of baskets | Number of flowers\n1 | 10\n2 | 20\n3 | 30\n4 | ?", "question": "Each basket has 10 flowers. How many flowers are in 4 baskets?", "answer": "40", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of baskets\nnumber_of_baskets = 4\n# Each basket contains 10 flowers\nflowers_per_basket = 10\n# Calculate total flowers\ntotal_flowers = number_of_baskets * flowers_per_basket\nanswer = total_flowers\n", "prediction": "40\n"}
{"context": "Read the following table regarding \"People interviewed\" and then answer a question.\n\nDay | Number of people\nSaturday | 13\nSunday | 13\nMonday | 14\nTuesday | 13\nWednesday | 15", "question": "A reporter looked through his notebook to remember how many people he had interviewed in the past 5 days. What is the range of the numbers?", "answer": "2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of people interviewed each day\npeople_interviewed = [13, 13, 14, 13, 15]\n# Calculate the range\nrange_people_interviewed = max(people_interviewed) - min(people_interviewed)\nanswer = range_people_interviewed\n", "prediction": "2\n"}
{"context": "Read the following table regarding \"Vacation days taken by Katy\" and then answer a question.\n\nYear | Vacation days\n2015 | 27\n2016 | 30\n2017 | 25\n2018 | 16\n2019 | 25", "question": "To figure out how many vacation days she had left to use, Katy looked over her old calendars to figure out how many days of vacation she had taken each year. According to the table, what was the rate of change between 2017 and 2018?", "answer": "-9", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Vacation days taken in 2017 and 2018\nvacation_days_2017 = 25\nvacation_days_2018 = 16\n# Calculate the rate of change between 2017 and 2018\nrate_of_change = vacation_days_2018 - vacation_days_2017\nanswer = rate_of_change\n", "prediction": "-9\n"}
{"context": "Read the following table regarding \"Cheese consumption per capita (kg)\" and then answer a question.\n\nCountry | 1996 | 2006\nGermany | 12 | 20\nAustralia | 10 | 10\nCanada | 10 | 11\nGreat Britain | 9 | 10\nArgentina | 11 | 11", "question": "An agricultural agency is researching how much cheese people have been eating in different parts of the world. How much cheese was consumed per capita in Argentina in 2006?", "answer": "11", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Cheese consumption per capita in Argentina for the year 2006\ncheese_consumption_argentina_2006 = 11  # kg\nanswer = cheese_consumption_argentina_2006\n", "prediction": "11\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of tool boxes | Number of hammers\n1 | 10\n2 | 20\n3 | 30\n4 | 40\n5 | ?", "question": "Each tool box has 10 hammers. How many hammers are in 5 tool boxes?", "answer": "50", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Each toolbox contains 10 hammers\nhammers_per_toolbox = 10 \n# Number of tool boxes\nnumber_of_tool_boxes = 5 \n# Total number of hammers\ntotal_hammers = hammers_per_toolbox * number_of_tool_boxes\nanswer = total_hammers\n", "prediction": "50\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of shelves | Number of turtleneck sweaters\n1 | 5\n2 | 10\n3 | 15\n4 | ?", "question": "Each shelf has 5 turtleneck sweaters. How many turtleneck sweaters are on 4 shelves?", "answer": "20", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nsweaters_per_shelf = 5\nnumber_of_shelves = 4\n# Calculate the total number of turtleneck sweaters\ntotal_sweaters = sweaters_per_shelf * number_of_shelves\nanswer = total_sweaters\n", "prediction": "20\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ntortillas | $9/kilogram\nrye rolls | $8/kilogram\nFrench rolls | $9/kilogram\nspelt rolls | $5/kilogram\nhamburger buns | $4/kilogram\nhot dog buns | $6/kilogram", "question": "What is the total cost for 9/10 of a kilogram of hamburger buns?", "answer": "3.60", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_kilogram_hamburger_buns = 4 \nkilograms_bought = 9/10 \n# Calculate the total cost\ntotal_cost = price_per_kilogram_hamburger_buns * kilograms_bought\nanswer = total_cost\n", "prediction": "3.6\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of laundry hampers | Number of blouses\n1 | 5\n2 | 10\n3 | 15\n4 | ?", "question": "Each laundry hamper has 5 blouses. How many blouses are in 4 laundry hampers?", "answer": "20", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Given that each laundry hamper has 5 blouses\nblouses_per_hamper = 5\n# Calculate the number of blouses in 4 laundry hampers\nnumber_of_hampers = 4\nanswer = blouses_per_hamper * number_of_hampers\n", "prediction": "20\n"}
{"context": "Read the following table regarding \"Newspapers collected\" and then answer a question.\n\nName | Number of newspapers\nDoug | 85\nXavier | 86\nCarly | 87\nValentina | 86\nEric | 85\nBen | 85\nSam | 86\nMason | 86", "question": "Doug's class tracked how many newspapers each student collected for their recycling project. What is the mode of the numbers?", "answer": "86", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nfrom collections import Counter\n\n# List of newspapers collected by each student\nnewspapers_collected = [85, 86, 87, 86, 85, 85, 86, 86]\n\n# Find the mode\ncounter = Counter(newspapers_collected)\nmode_data = counter.most_common(1)\nmode_value = mode_data[0][0]\n\nanswer = mode_value\n", "prediction": "86\n"}
{"context": "Read the following table regarding \"Web pages visited\" and then answer a question.\n\nPerson | Number of Web pages\nAlexis | 7\nWanda | 7\nRoy | 9\nCharlie | 9\nBetty | 10", "question": "Several people compared how many Web pages they had visited. What is the median of the numbers?", "answer": "9", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of web pages visited by each person\nweb_pages_visited = [7, 7, 9, 9, 10]\n# Sort the list to find the median\nweb_pages_visited.sort()\n\n# Calculate the median\nn = len(web_pages_visited)\nif n % 2 == 0:\n    median = (web_pages_visited[n // 2 - 1] + web_pages_visited[n // 2]) / 2\nelse:\n    median = web_pages_visited[n // 2]\n\nanswer = median\n", "prediction": "9\n"}
{"context": "Read the following table regarding \"Field day schedule\" and then answer a question.\n\nEvent | Begin | End\nparachute ball toss | 11:45 A.M. | 12:15 P.M.\npotato sack race | 12:30 P.M. | 12:55 P.M.\nthree-legged race | 1:00 P.M. | 2:00 P.M.\nobstacle course | 2:15 P.M. | 2:35 P.M.\nhurdles | 2:45 P.M. | 3:10 P.M.\njump rope race | 3:15 P.M. | 3:30 P.M.\nrelay race | 3:45 P.M. | 4:00 P.M.\negg relay | 4:05 P.M. | 4:35 P.M.", "question": "Look at the following schedule. Which event ends at 12.15 P.M.? Choose from the the options: ['relay race', 'jump rope race', 'parachute ball toss', 'egg relay']", "answer": "parachute ball toss", "ques_type": "multi_choice", "choices": ["relay race", "jump rope race", "parachute ball toss", "egg relay"], "code": "# Python code, return answer \n# The event that ends at 12:15 P.M. is from the given table.\nevent_ending_at_1215 = 'parachute ball toss'\nanswer = event_ending_at_1215\n", "prediction": "parachute ball toss\n"}
{"context": "Read the following table regarding \"Olympic medals\" and then answer a question.\n\nCountry | 2004 | 2008\nFinland | 2 | 4\nBrazil | 10 | 15\nSweden | 7 | 5", "question": "A sports fan decided to examine the pattern of medals won by certain countries at several Olympic games. How many more medals did Brazil win in 2008 than in 2004?", "answer": "5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nmedals_2004_brazil = 10\nmedals_2008_brazil = 15\n# Calculate the difference in medals won by Brazil\ndifference_medals = medals_2008_brazil - medals_2004_brazil\nanswer = difference_medals\n", "prediction": "5\n"}
{"context": "Read the following table regarding \"Fourth grade classes\" and then answer a question.\n\nTeacher | Boys | Girls\nMiss Smith | 10 | 17\nMr. Lopez | 19 | 17\nMiss Fisher | 15 | 11\nMrs. Carpenter | 16 | 18", "question": "The principal of Stafford Elementary School released statistics about how many boys and girls were in each fourth grade class at her school. How many more boys are in Mr. Lopez's class than Miss Smith's class?", "answer": "9", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nboys_mr_lopez = 19\nboys_miss_smith = 10\n# Calculate the difference in the number of boys\ndifference = boys_mr_lopez - boys_miss_smith\nanswer = difference\n", "prediction": "9\n"}
{"context": "Read the following table regarding \"Couches sold\" and then answer a question.\n\nDay | Number of couches\nTuesday | 7\nWednesday | 2\nThursday | 2\nFriday | 3\nSaturday | 3\nSunday | 7", "question": "A furniture store kept a record of how many couches it sold each day. What is the range of the numbers?", "answer": "5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of couches sold each day\ncouches_sold = [7, 2, 2, 3, 3, 7]\n# Calculate the range\nrange_of_couches = max(couches_sold) - min(couches_sold)\nanswer = range_of_couches\n", "prediction": "5\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nhair tie | $0.57\nbox of breath mints | $0.94\ntube of toothpaste | $0.97\ncomb | $0.96", "question": "How much money does Naomi need to buy a hair tie, a box of breath mints, and a comb?", "answer": "2.47", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nhair_tie_price = 0.57\nbreath_mints_price = 0.94\ncomb_price = 0.96\n\n# Calculate the total cost\ntotal_cost = hair_tie_price + breath_mints_price + comb_price\nanswer = total_cost\n", "prediction": "2.4699999999999998\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nwooden block | $0.08\nshapes stencil | $0.02\nred kazoo | $0.06\ngreen bouncy ball | $0.04\ngreen marble | $0.04\nblue plastic block | $0.09", "question": "How much money does Brennan need to buy a shapes stencil and a green bouncy ball?", "answer": "0.06", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_shapes_stencil = 0.02\nprice_green_bouncy_ball = 0.04\n# Total cost for both items\ntotal_cost = price_shapes_stencil + price_green_bouncy_ball\nanswer = total_cost\n", "prediction": "0.06\n"}
{"context": "Read the following table regarding \"Phone calls received\" and then answer a question.\n\nDay | Number of calls\nWednesday | 8,383\nThursday | 2,270\nFriday | 1,356\nSaturday | 8,148", "question": "A technical support line tracked how many calls it received each day. How many calls total did the support line receive on Friday and Saturday?", "answer": "9,504", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncalls_friday = 1356 \ncalls_saturday = 8148 \n# Calculate total calls received on Friday and Saturday\ntotal_calls_friday_saturday = calls_friday + calls_saturday\nanswer = total_calls_friday_saturday\n", "prediction": "9504\n"}
{"context": "Read the following table regarding \"Glasses of water\" and then answer a question.\n\nDay | Number of glasses\nThursday | 5\nFriday | 5\nSaturday | 5\nSunday | 10\nMonday | 7\nTuesday | 9\nWednesday | 8", "question": "Reagan wrote down how many glasses of water she drank during the past 7 days. What is the range of the numbers?", "answer": "5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of glasses of water for each day\nglasses = [5, 5, 5, 10, 7, 9, 8]\n\n# Calculate the range\nrange_of_glasses = max(glasses) - min(glasses)\nanswer = range_of_glasses\n", "prediction": "5\n"}
{"context": "Read the following table regarding \"Chocolate consumption per capita (kg)\" and then answer a question.\n\nCountry | 2002 | 2005\nGermany | 10 | 11\nPoland | 3 | 4\nAustralia | 4 | 5", "question": "Marcy's Candies has been studying how much chocolate people have been eating in different countries. In 2005, how much more chocolate did Germany consume per capita than Poland?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Chocolate consumption in 2005\ngermany_consumption_2005 = 11\npoland_consumption_2005 = 4\n# Calculate the difference in consumption\ndifference = germany_consumption_2005 - poland_consumption_2005\nanswer = difference\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"Hitting tennis balls\" and then answer a question.\n\nName | Number of tennis balls\nFred | 76\nRoger | 65\nAdele | 67\nMiranda | 62\nJoy | 63\nTom | 57", "question": "The gym teacher wrote down how many tennis balls his students hit in half an hour. What is the range of the numbers?", "answer": "19", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of tennis balls hit by each student\ntennis_balls = [76, 65, 67, 62, 63, 57]\n\n# Calculate the range\nrange_of_balls = max(tennis_balls) - min(tennis_balls)\nanswer = range_of_balls\n", "prediction": "19\n"}
{"context": "Read the following table regarding \"Red gumdrops per bag\" and then answer a question.\n\nStem | Leaf \n2 | 4, 6, 8, 9\n3 | 1, 2\n4 | 3\n5 | 2, 9, 9\n6 | 0, 1, 4, 6\n7 | 5, 5, 7\n8 | \n9 | 0", "question": "A machine dispensed red gumdrops into bags of various sizes. How many bags had at least 53 red gumdrops but less than 74 red gumdrops?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Extracting values from the stem-and-leaf display to find the number of bags within the specified range (53 to 73)\ngumdrops = [\n    24, 26, 28, 29,  # Stem 2\n    31, 32,          # Stem 3\n    43,              # Stem 4\n    52, 59, 59,      # Stem 5\n    60, 61, 64, 66,  # Stem 6\n    75, 75, 77,      # Stem 7\n    80,              # Stem 8\n    90               # Stem 9\n]\n\n# Count bags with at least 53 but less than 74 red gumdrops\ncount_bags = sum(1 for gumdrop in gumdrops if 53 <= gumdrop < 74)\nanswer = count_bags\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"Students receiving scholarships\" and then answer a question.\n\nYear | Students\n2010 | 21\n2011 | 23\n2012 | 28\n2013 | 25\n2014 | 29", "question": "The financial aid office at Jordan University produced an internal report on the number of students receiving scholarships. According to the table, what was the rate of change between 2012 and 2013?", "answer": "-3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of students receiving scholarships in 2012 and 2013\nstudents_2012 = 28\nstudents_2013 = 25\n# Calculate the rate of change\nrate_of_change = students_2013 - students_2012\nanswer = rate_of_change\n", "prediction": "-3\n"}
{"context": "Read the following table regarding \"Number of cars\" and then answer a question.\n\nDay | Number of cars\nThursday | 324\nFriday | 323\nSaturday | 342\nSunday | 334", "question": "Sue's family went on a road trip and counted the number of cars they saw each day. On which day did they see the fewest cars? Choose from the the options: ['Thursday', 'Friday', 'Saturday', 'Sunday']", "answer": "Friday", "ques_type": "multi_choice", "choices": ["Thursday", "Friday", "Saturday", "Sunday"], "code": "# Python code, return answer \n# Dictionary of the number of cars seen on each day\ncars_count = {\n    'Thursday': 324,\n    'Friday': 323,\n    'Saturday': 342,\n    'Sunday': 334\n}\n# Find the day with the fewest cars\nfewest_cars_day = min(cars_count, key=cars_count.get)\nanswer = fewest_cars_day\n", "prediction": "Friday\n"}
{"context": "Read the following table regarding \"Magazines sold\" and then answer a question.\n\nMonth | Number of magazines\nMarch | 6,337\nApril | 3,287\nMay | 5,123", "question": "A magazine editor looked at her sales figures for the past 3 months. How many more copies were sold in May than in April?", "answer": "1,836", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nmagazines_sold_may = 5123\nmagazines_sold_april = 3287\n# Calculate the difference in copies sold between May and April\ndifference = magazines_sold_may - magazines_sold_april\nanswer = difference\n", "prediction": "1836\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nEmployee | Pay period |\nRaphael Cruz | November |\nTotal earnings | | $2,400.00\nFederal income tax | $266.60 |\nState income tax | $142.00 |\nOther taxes | $183.60 |\nTotal taxes | | ?\nPay after taxes | | ?", "question": "Look at Raphael's pay stub. Raphael lives in a state that has state income tax. How much did Raphael make after taxes?", "answer": "1,807.80", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total earnings before taxes\ntotal_earnings = 2400.00\n# Total taxes calculation\nfederal_income_tax = 266.60\nstate_income_tax = 142.00\nother_taxes = 183.60\ntotal_taxes = federal_income_tax + state_income_tax + other_taxes\n# Calculate pay after taxes\npay_after_taxes = total_earnings - total_taxes\nanswer = pay_after_taxes\n", "prediction": "1807.8\n"}
{"context": "Read the following table regarding \"Hockey games won by Howard High\" and then answer a question.\n\nYear | Games won\n2015 | 11\n2016 | 15\n2017 | 20\n2018 | 15\n2019 | 4", "question": "A pair of Howard High School hockey fans counted the number of games won by the school each year. According to the table, what was the rate of change between 2017 and 2018?", "answer": "-5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of games won in 2017 and 2018\ngames_won_2017 = 20\ngames_won_2018 = 15\n\n# Calculate the rate of change\nrate_of_change = games_won_2018 - games_won_2017\nanswer = rate_of_change\n", "prediction": "-5\n"}
{"context": "Read the following table regarding \"Vehicle sales\" and then answer a question.\n\nDealership | Number of vehicles\nAffordable Cars | 19\nRV City | 19\nTruck City | 13\nLedbetter Auto Mall | 17\nBen's Used Cars | 27\nCars of Pryor Falls | 13", "question": "Some dealerships compared their vehicle sales. What is the range of the numbers?", "answer": "14", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of vehicle sales from each dealership\nvehicle_sales = [19, 19, 13, 17, 27, 13]\n\n# Calculate the range\nrange_sales = max(vehicle_sales) - min(vehicle_sales)\nanswer = range_sales\n", "prediction": "14\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nroll of electrical tape | $0.39\nbrass clip | $0.17\nspool of gold wire | $0.40\nshort steel screw | $0.17\nelastic band | $0.17\ngold tack | $0.18", "question": "Naomi has $0.50. Does she have enough to buy an elastic band and a spool of gold wire? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# Prices of the items\nprice_elastic_band = 0.17\nprice_spool_gold_wire = 0.40\n# Total cost for both items\ntotal_cost = price_elastic_band + price_spool_gold_wire\n# Amount Naomi has\nnaomi_amount = 0.50\n# Determine if Naomi has enough money\nif naomi_amount >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n1 | 16\n2 | 6\n3 | 5", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "nonlinear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear or nonlinear, we can check the ratios of change between x and y.\n\n# Calculate the differences\nx_values = [1, 2, 3]\ny_values = [16, 6, 5]\n\n# Calculate the changes in y for each change in x\nchange_y_1 = y_values[1] - y_values[0]  # from 1 to 2\nchange_y_2 = y_values[2] - y_values[1]  # from 2 to 3\n\n# Calculate the change in x\nchange_x_1 = x_values[1] - x_values[0]  # from 1 to 2\nchange_x_2 = x_values[2] - x_values[1]  # from 2 to 3\n\n# Check if the slope (change in y/change in x) is constant\nslope_1 = change_y_1 / change_x_1\nslope_2 = change_y_2 / change_x_2\n\n# Determine if the function is linear or nonlinear\nif slope_1 == slope_2:\n    answer = 'linear'\nelse:\n    answer = 'nonlinear'\n\n", "prediction": "nonlinear\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of necklaces | Number of pearls\n1 | 5\n2 | 10\n3 | 15\n4 | ?", "question": "Each necklace has 5 pearls. How many pearls are on 4 necklaces?", "answer": "20", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of pearls on 4 necklaces\nnumber_of_pearls_per_necklace = 5\nnumber_of_necklaces = 4\npearls_on_4_necklaces = number_of_pearls_per_necklace * number_of_necklaces\nanswer = pearls_on_4_necklaces\n", "prediction": "20\n"}
{"context": "Read the following table regarding \"Pizza slices sold\" and then answer a question.\n\nRestaurant | Number of slices sold\nAntonio's Pizzeria | 2,364\nPizzas Only | 1,470\nMario's Pizzeria | 1,207\nThe Big Cheese | 1,667", "question": "Some pizza restaurants compared their pizza sales. In all, how many pizza slices did Pizzas Only and Mario's Pizzeria sell?", "answer": "2,677", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nslices_pizzas_only = 1470 \nslices_marios_pizzeria = 1207 \n# Calculate total slices sold by Pizzas Only and Mario's Pizzeria\ntotal_slices = slices_pizzas_only + slices_marios_pizzeria\nanswer = total_slices\n", "prediction": "2677\n"}
{"context": "Read the following table regarding \"Zoo schedule\" and then answer a question.\n\nEvent | Begin | End\nreptile show | 9:10 A.M. | 9:50 A.M.\npenguin feeding | 9:55 A.M. | 11:15 A.M.\ntiger lecture | 11:05 A.M. | 12:10 P.M.\npanda lecture | 12:50 P.M. | 1:20 P.M.\nkoala feeding | 1:50 P.M. | 3:10 P.M.\nbear lecture | 3:15 P.M. | 4:20 P.M.\nbird show | 4:15 P.M. | 4:55 P.M.\ngiraffe feeding | 5:00 P.M. | 6:20 P.M.\nzebra feeding | 6:15 P.M. | 6:55 P.M.", "question": "Look at the following schedule. When does the zebra feeding end? Choose from the the options: ['9:10 A.M.', '4:55 P.M.', '6:15 P.M.', '6:55 P.M.']", "answer": "6:55 P.M.", "ques_type": "multi_choice", "choices": ["9:10 A.M.", "4:55 P.M.", "6:15 P.M.", "6:55 P.M."], "code": "# Python code, return answer \n# The end time of zebra feeding is specified in the schedule.\nzebra_feeding_end = \"6:55 P.M.\"\nanswer = zebra_feeding_end\n", "prediction": "6:55 P.M.\n"}
{"context": "Read the following table regarding \"Pumpkins sold\" and then answer a question.\n\nDay | Number of pumpkins\nMonday | 164\nTuesday | 401\nWednesday | 769\nThursday | 283\nFriday | 544", "question": "A pumpkin patch monitored the number of pumpkins sold each day. How many more pumpkins did the pumpkin patch sell on Wednesday than on Thursday?", "answer": "486", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \npumpkins_wednesday = 769\npumpkins_thursday = 283\n# Calculate the difference in pumpkins sold\ndifference = pumpkins_wednesday - pumpkins_thursday\nanswer = difference\n", "prediction": "486\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of shelves | Number of blocks of cheese\n1 | 2\n2 | 4\n3 | 6\n4 | ?", "question": "Each shelf has 2 blocks of cheese. How many blocks of cheese are on 4 shelves?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of blocks of cheese per shelf\nblocks_per_shelf = 2 \n# Number of shelves\nnumber_of_shelves = 4 \n# Calculate the total number of blocks of cheese\ntotal_blocks = blocks_per_shelf * number_of_shelves\nanswer = total_blocks\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nblue glass bead | $0.08\nbead with green and blue swirls | $0.08\npurple and red clay bead | $0.02\nwhite bead with black spots | $0.06", "question": "Jason has $0.15. Does he have enough to buy a bead with green and blue swirls and a white bead with black spots? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \ncost_green_blue_swirl = 0.08 \ncost_white_black_spots = 0.06 \ntotal_cost = cost_green_blue_swirl + cost_white_black_spots\njason_money = 0.15\n\n# Check if Jason has enough money\nif jason_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$475 | 14,400 | 1,000\n$555 | 11,400 | 5,800\n$635 | 8,400 | 10,600\n$715 | 5,400 | 15,400\n$795 | 2,400 | 20,200", "question": "Look at the table. Then answer the question. At a price of $635, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "surplus", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \n# Given values at a price of $635\nquantity_demanded = 8400\nquantity_supplied = 10600\n\n# Determine if there is a shortage or surplus\nif quantity_demanded < quantity_supplied:\n    answer = 'surplus'\nelse:\n    answer = 'shortage'\n\n", "prediction": "surplus\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of baskets | Number of lilies\n1 | 10\n2 | 20\n3 | 30\n4 | ?", "question": "Each basket has 10 lilies. How many lilies are in 4 baskets?", "answer": "40", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nlilies_per_basket = 10\nnumber_of_baskets = 4\n# Calculate the total number of lilies in 4 baskets\ntotal_lilies = lilies_per_basket * number_of_baskets\nanswer = total_lilies\n", "prediction": "40\n"}
{"context": "Read the following table regarding \"Peppermint candies per jar\" and then answer a question.\n\nStem | Leaf \n1 | 1, 1, 1, 4\n2 | 1, 2, 3, 5, 6\n3 | 3, 4, 6\n4 | 3, 6, 7\n5 | 4, 8", "question": "Sofia, a candy store employee, placed peppermint candies into jars of various sizes. How many jars had at least 10 peppermint candies?", "answer": "17", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Extracting the number of peppermint candies from the stem-and-leaf display\ncandies_per_jar = [\n    11, 11, 11, 14,  # From stem 1\n    21, 22, 23, 25, 26,  # From stem 2\n    33, 34, 36,  # From stem 3\n    43, 46, 47,  # From stem 4\n    54, 58  # From stem 5\n]\n\n# Counting jars with at least 10 peppermint candies\njars_with_at_least_10 = sum(1 for candies in candies_per_jar if candies >= 10)\nanswer = jars_with_at_least_10\n", "prediction": "17\n"}
{"context": "Read the following table regarding \"Building heights (meters)\" and then answer a question.\n\nStem | Leaf \n1 | 0, 1\n2 | \n3 | 6\n4 | 2\n5 | \n6 | 0, 3, 3, 5, 6\n7 | 4, 7\n8 | 5, 6", "question": "An architecture student measured the heights of all the buildings downtown. How many buildings are exactly 77 meters tall?", "answer": "1", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The height of 77 meters corresponds to the stem \"7\" and leaf \"7\".\n# So, there is exactly one building that is 77 meters tall.\nnumber_of_buildings_77_meters = 1\nanswer = number_of_buildings_77_meters\n", "prediction": "1\n"}
{"context": "Read the following table regarding \"Phone calls received\" and then answer a question.\n\nDay | Number of calls\nFriday | 139\nSaturday | 193\nSunday | 192\nMonday | 113", "question": "A technical support line tracked how many calls it received each day. On which day did the support line receive the most calls? Choose from the the options: ['Friday', 'Saturday', 'Sunday', 'Monday']", "answer": "Saturday", "ques_type": "multi_choice", "choices": ["Friday", "Saturday", "Sunday", "Monday"], "code": "# Python code, return answer \ncalls_received = {\n    'Friday': 139,\n    'Saturday': 193,\n    'Sunday': 192,\n    'Monday': 113\n}\n# Find the day with the most calls\nmost_calls_day = max(calls_received, key=calls_received.get)\nanswer = most_calls_day\n", "prediction": "Saturday\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nshiny red bead | $0.05\norange glass bead | $0.06\nsquare yellow bead | $0.06\nbrown cat's eye bead | $0.08\nshiny metal bead | $0.07", "question": "Tracy has $0.14. Does she have enough to buy a brown cat's eye bead and a shiny red bead? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \ncost_brown_cats_eye_bead = 0.08\ncost_shiny_red_bead = 0.05\ntotal_cost = cost_brown_cats_eye_bead + cost_shiny_red_bead\ntracy_money = 0.14\n\n# Check if Tracy has enough money\nif tracy_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"Eating ice cream last month\" and then answer a question.\n\nTimes eaten | Frequency\n0 | 10\n1 | 19\n2 | 15\n3 | 20\n4 | 7\n5 | 2\n6 | 4", "question": "Josiah's Treats counted how many times its most frequent customers ate ice cream last month. How many customers ate ice cream fewer than 2 times?", "answer": "29", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of customers who ate ice cream fewer than 2 times\ncustomers_0_times = 10  # customers who ate ice cream 0 times\ncustomers_1_time = 19   # customers who ate ice cream 1 time\n# Total customers who ate ice cream fewer than 2 times\ncustomers_fewer_than_2 = customers_0_times + customers_1_time\nanswer = customers_fewer_than_2\n", "prediction": "29\n"}
{"context": "Read the following table regarding \"Inn guests\" and then answer a question.\n\nDay | Number of guests\nMonday | 9\nTuesday | 9\nWednesday | 10\nThursday | 9\nFriday | 8", "question": "The owner of a bed and breakfast inn recalled how many guests the inn had hosted each day. What is the mean of the numbers?", "answer": "9", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of guests for each day\nguests = [9, 9, 10, 9, 8]\n# Calculate the mean number of guests\nmean_guests = sum(guests) / len(guests)\nanswer = mean_guests\n", "prediction": "9.0\n"}
{"context": "Read the following table regarding \"Laps swum\" and then answer a question.\n\nDay | Number of laps\nThursday | 5\nFriday | 10\nSaturday | 6\nSunday | 8\nMonday | 10", "question": "Alvin kept track of how many laps he swam during the past 5 days. What is the median of the numbers?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of laps swum each day\nlaps = [5, 10, 6, 8, 10]\n# Sort the laps to find the median\nlaps.sort()\n# Calculate the median\nn = len(laps)\nif n % 2 == 1:\n    median = laps[n // 2]\nelse:\n    median = (laps[n // 2 - 1] + laps[n // 2]) / 2\n\nanswer = median\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"Boxes of cookies sold\" and then answer a question.\n\nType | Frequency\ncoconut caramel | 5\nlemon | ?\nmint chocolate | 11\nmarshmallow | 2\npeanut butter | 9", "question": "Lila sold boxes of cookies to raise money for her scout troop. She used a frequency chart to track her sales. Lila sold 1/3 as many boxes of lemon cookies as peanut butter cookies. How many boxes of lemon cookies did she sell?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Given the frequency of peanut butter cookies\npeanut_butter_cookies = 9\n# Calculate the frequency of lemon cookies\nlemon_cookies = peanut_butter_cookies / 3\nanswer = int(lemon_cookies)  # Convert to an integer\n", "prediction": "3\n"}
{"context": "Read the following table regarding \"Ducks per pond\" and then answer a question.\n\nStem | Leaf \n1 | 6\n2 | 8\n3 | 6\n4 | \n5 | 1, 3\n6 | \n7 | \n8 | 8\n9 | 0", "question": "Michelle counted the number of ducks at each pond in the city. What is the largest number of ducks?", "answer": "90", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest number of ducks corresponds to the largest value in the stem-and-leaf display.\nlargest_ducks_count = 90  # From the stem \"9 | 0\", the value is 90 ducks.\nanswer = largest_ducks_count\n", "prediction": "90\n"}
{"context": "Read the following table regarding \"Club sizes (number of members)\" and then answer a question.\n\nStem | Leaf \n2 | 2, 4\n3 | 9\n4 | 0, 2, 3, 4, 4, 5\n5 | 0, 4, 7, 7\n6 | 0\n7 | 0, 7\n8 | 1, 4\n9 | 0", "question": "Ron found out the sizes of all the clubs at his school. What is the size of the smallest club?", "answer": "22", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The smallest club corresponds to the smallest value in the stem-and-leaf display.\nsmallest_club_size = 22  # From the stem \"2 | 2\", the value is 22 members.\nanswer = smallest_club_size\n", "prediction": "22\n"}
{"context": "Read the following table regarding \"Population per square mile\" and then answer a question.\n\nState | 1990 | 2000\nSouth Dakota | 9 | 10\nNorth Dakota | 9 | 9\nNevada | 10 | 18\nWyoming | 4 | 5\nMontana | 5 | 6", "question": "While looking through an almanac at the library, Tucker noticed some data showing the population density of various states. How many people per square mile lived in South Dakota in 2000?", "answer": "10", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Population per square mile in South Dakota for the year 2000\nsouth_dakota_population_2000 = 10\nanswer = south_dakota_population_2000\n", "prediction": "10\n"}
{"context": "Read the following table regarding \"Broken crayons per box\" and then answer a question.\n\nStem | Leaf \n2 | 3, 4, 5, 5, 8\n3 | 1, 5, 5, 6\n4 | 1, 5, 6\n5 | 6\n6 | 0, 1, 3, 8\n7 | 5, 6, 7\n8 | 8\n9 | 0", "question": "A crayon factory monitored the number of broken crayons per box during the past day. How many boxes had at least 30 broken crayons?", "answer": "17", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The leaf plot represents the number of broken crayons per box.\n# Let's first compile the data into a list of broken crayons per box.\nbroken_crayons = [\n    23, 24, 25, 25, 28,  # 2 | 3, 4, 5, 5, 8\n    31, 35, 35, 36,      # 3 | 1, 5, 5, 6\n    41, 45, 46,          # 4 | 1, 5, 6\n    56,                   # 5 | 6\n    60, 61, 63, 68,      # 6 | 0, 1, 3, 8\n    75, 76, 77,          # 7 | 5, 6, 7\n    88,                   # 8 | 8\n    90                    # 9 | 0\n]\n\n# Count the number of boxes with at least 30 broken crayons\nboxes_with_at_least_30 = sum(1 for count in broken_crayons if count >= 30)\nanswer = boxes_with_at_least_30\n", "prediction": "17\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of shelves | Number of cups\n1 | 2\n2 | 4\n3 | 6\n4 | ?", "question": "Each shelf has 2 cups. How many cups are on 4 shelves?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of cups per shelf\ncups_per_shelf = 2 \n# Number of shelves\nshelves = 4 \n# Calculate total number of cups\ntotal_cups = cups_per_shelf * shelves\nanswer = total_cups\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"Ferry fares\" and then answer a question.\n\nFerry | Car | Bicycle\nFauntleroy-Vashon | $15 | $5\nSeattle-Bremerton | $12 | $8\nMukilteu-Clinton | $7 | $5\nSouthport-Fort Fisher | $5 | $2\nOcracoke | $15 | $3", "question": "For an economics project, Mitch determined the cost of ferry rides for bicycles and cars. How much does it cost to take a bicycle on the Southport-Fort Fisher ferry?", "answer": "2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Cost for taking a bicycle on the Southport-Fort Fisher ferry\ncost_bicycle_southport_fort_fisher = 2\nanswer = cost_bicycle_southport_fort_fisher\n", "prediction": "2\n"}
{"context": "Read the following table regarding \"Festival schedule\" and then answer a question.\n\nEvent | Begin | End\nbanquet | 10:55 A.M. | 12:35 P.M.\nband concert | 12:40 P.M. | 2:00 P.M.\nchoir concert | 1:45 P.M. | 3:55 P.M.\naward ceremony | 3:20 P.M. | 4:30 P.M.\ndance performance | 4:20 P.M. | 5:25 P.M.\ndrumming performance | 5:35 P.M. | 7:55 P.M.", "question": "Look at the following schedule. When does the banquet end? Choose from the the options: ['12:35 P.M.', '7:55 P.M.', '5:25 P.M.', '2:00 P.M.']", "answer": "12:35 P.M.", "ques_type": "multi_choice", "choices": ["12:35 P.M.", "7:55 P.M.", "5:25 P.M.", "2:00 P.M."], "code": "# Python code, return answer \nbanquet_end_time = '12:35 P.M.' \nanswer = banquet_end_time\n", "prediction": "12:35 P.M.\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nruby bracelet | $4,256.00\npearl necklace | $1,622.00\ndiamond pendant | $9,221.00\nopal pendant | $3,234.00\nsapphire pendant | $7,084.00\nemerald ring | $5,419.00", "question": "How much money does Ariana need to buy 3 emerald rings and 7 sapphire pendants?", "answer": "65,845", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_emerald_ring = 5419.00\nprice_sapphire_pendant = 7084.00\n\n# Calculate the total cost for 3 emerald rings and 7 sapphire pendants\ntotal_cost = (3 * price_emerald_ring) + (7 * price_sapphire_pendant)\nanswer = total_cost\n", "prediction": "65845.0\n"}
{"context": "Read the following table regarding \"Quiz scores\" and then answer a question.\n\nStem | Leaf \n1 | 3, 9\n2 | 4, 6, 9\n3 | 2, 3, 6, 6, 7\n4 | 9\n5 | 1, 1, 4, 6, 6, 7, 8\n6 | 0, 1, 7, 7\n7 | 2, 6", "question": "Ms. Lester reported her students' scores on the most recent quiz. What is the lowest score?", "answer": "13", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The lowest score corresponds to the smallest value in the stem-and-leaf display.\nlowest_score = 13  # From the stem \"1 | 3\", the value is 13.\nanswer = lowest_score\n", "prediction": "13\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nmountain-biking adventure package | $733.00\ndeep-sea fishing package | $348.00\nsurfing adventure package | $979.00\nwhale-watching adventure package | $530.00", "question": "How much more does a surfing adventure package cost than a mountain-biking adventure package?", "answer": "246", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_mountain_biking = 733.00 \ncost_surfing_adventure = 979.00 \n# Calculate the difference in cost\ndifference = cost_surfing_adventure - cost_mountain_biking\nanswer = difference\n", "prediction": "246.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n4 | 18\n7 | 17\n8 | 4", "question": "Look at this table. Is this relation a function? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# A relation is a function if each input (x) maps to exactly one output (y).\n# Here, we check the unique x values in the table.\nx_values = [4, 7, 8]\n# Since all x values are unique, the relation is a function\nis_function = len(x_values) == len(set(x_values))\n\nif is_function:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n0 | 7\n1 | 11\n2 | 15", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "linear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the differences in y-values for equal changes in x-values.\ny_values = [7, 11, 15]\nx_values = [0, 1, 2]\n\n# Calculate the differences\ndifferences = [y_values[i+1] - y_values[i] for i in range(len(y_values)-1)]\n# If the differences are constant, it's linear\nis_linear = all(diff == differences[0] for diff in differences)\n\nanswer = 'linear' if is_linear else 'nonlinear'\n", "prediction": "NameError(\"name 'y_values' is not defined\")"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nDVD player | $76.00\nDVD | $12.00\nblender | $20.00\ncalculator | $73.00\ncell phone | $81.00\ncamera | $81.00", "question": "How much money does Myra need to buy a DVD player and a DVD?", "answer": "88", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ndvd_player_price = 76.00\ndvd_price = 12.00\n# Total amount needed to buy both\ntotal_cost = dvd_player_price + dvd_price\nanswer = total_cost\n", "prediction": "88.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nhammock | $99\nfountain | $76\nleaf blower | $80\nrosebush | $32", "question": "How much more does a leaf blower cost than a fountain?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_leaf_blower = 80 \ncost_fountain = 76 \n# Calculate the difference in cost\ndifference = cost_leaf_blower - cost_fountain\nanswer = difference\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"Donations received\" and then answer a question.\n\nCause | May | June\nParks | $2 | $12\nMedical research | $8 | $20\nHunger | $7 | $2\nAnimals | $18 | $4\nEducation | $17 | $1", "question": "A county agency recorded the money donated to several charitable causes over time. In May, how much more money was raised for animals than for medical research?", "answer": "10", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Donations in May for animals and medical research\ndonations_animals_may = 18\ndonations_medical_research_may = 8\n# Calculate the difference\ndifference = donations_animals_may - donations_medical_research_may\nanswer = difference\n", "prediction": "10\n"}
{"context": "Read the following table regarding \"Spelling test scores\" and then answer a question.\n\nStem | Leaf \n3 | 1, 6, 7\n4 | 4, 7, 8\n5 | 0, 2\n6 | 3, 4, 4, 7, 8, 9\n7 | 2\n8 | 1, 2, 6, 8\n9 | 0", "question": "This morning, Mr. Kline released the scores from last week's spelling test. How many students scored at least 55 points?", "answer": "12", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The scores from the stem-and-leaf display are as follows:\nscores = [31, 36, 37, 44, 47, 48, 50, 52, 63, 64, 64, 67, 68, 69, 72, 81, 82, 86, 88, 90]\n\n# Count how many students scored at least 55 points\nstudents_scored_above_55 = sum(score >= 55 for score in scores)\nanswer = students_scored_above_55\n", "prediction": "12\n"}
{"context": "Read the following table regarding \"Winning relay times\" and then answer a question.\n\nYear | Winning time (minutes)\n2016 | 31\n2017 | 35\n2018 | 37\n2019 | 28\n2020 | 34", "question": "Every year Salem has a citywide relay and reports the winning times. According to the table, what was the rate of change between 2016 and 2017?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Winning times for the specified years\ntime_2016 = 31 \ntime_2017 = 35 \n# Calculate the rate of change\nrate_of_change = time_2017 - time_2016\nanswer = rate_of_change\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nwhistle | $0.97\nred balloon | $0.19\nnoisemaker | $0.61\nfancy ribbon | $0.31\nparty hat | $0.64", "question": "How much money does Haley need to buy a fancy ribbon and a red balloon?", "answer": "0.50", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_fancy_ribbon = 0.31 \nprice_red_balloon = 0.19 \n# Calculate total cost\ntotal_cost = price_fancy_ribbon + price_red_balloon\nanswer = total_cost\n", "prediction": "0.5\n"}
{"context": "Read the following table regarding \"Computers in classrooms\" and then answer a question.\n\nTeacher | Number of computers\nMrs. Tan | 11\nMr. Morales | 18\nMr. Watson | 18\nMrs. Jansen | 16\nMr. Schmidt | 13\nMs. Rojas | 16\nMrs. Rossi | 13", "question": "The teachers at a middle school counted how many computers they had in their classrooms. What is the mean of the numbers?", "answer": "15", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of computers for each teacher\ncomputers = [11, 18, 18, 16, 13, 16, 13]\n# Calculate the mean\nmean_computers = sum(computers) / len(computers)\nanswer = mean_computers\n", "prediction": "15.0\n"}
{"context": "Read the following table regarding \"Clarksville arts education budget\" and then answer a question.\n\nYear | Per-student budget\n2016 | $28\n2017 | $23\n2018 | $22\n2019 | $19\n2020 | $25", "question": "In hopes of raising more funds for arts education, some parents in the Clarksville School District publicized the current per-student arts education budget. According to the table, what was the rate of change between 2019 and 2020?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Per-student budget for the years in question\nbudget_2019 = 19\nbudget_2020 = 25\n\n# Calculate the rate of change\nrate_of_change = budget_2020 - budget_2019\nanswer = rate_of_change\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nticket for an Australian cruise | $3,530\nticket for a Mediterranean cruise | $3,996\nticket for a Hawaiian cruise | $9,448\nticket for an Alaskan cruise | $4,136\nticket for a Caribbean cruise | $4,761", "question": "How much money does Aisha need to buy 8 tickets for a Caribbean cruise?", "answer": "38,088", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nticket_price_caribbean = 4761  # price for one Caribbean cruise ticket\nnumber_of_tickets = 8  # number of tickets Aisha wants to buy\ntotal_cost = ticket_price_caribbean * number_of_tickets  # total cost for 8 tickets\nanswer = total_cost\n", "prediction": "38088\n"}
{"context": "Read the following table regarding \"Pieces of pepperoni per pizza\" and then answer a question.\n\nStem | Leaf \n1 | 0, 0, 1, 3, 8, 8\n2 | 0, 1, 1, 2, 9, 9\n3 | 1, 3, 3, 6, 6, 6\n4 | 1, 2, 9", "question": "Grayson counted the number of pieces of pepperoni on each pizza he made. What is the smallest number of pieces of pepperoni?", "answer": "10", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The smallest number of pieces of pepperoni corresponds to the smallest value in the stem-and-leaf display.\nsmallest_pepperoni = 10  # From the stem \"1 | 0\", the value is 10 pieces.\nanswer = smallest_pepperoni\n", "prediction": "10\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nwalnuts | $8/pound\ncashews | $8/pound\nhazelnuts | $4/pound\npecans | $6/pound\nalmonds | $4/pound\npeanuts | $2/pound", "question": "What is the total cost for 1.6 pounds of cashews?", "answer": "12.80", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_cashews = 8 \npounds_bought = 1.6 \n# Calculate total cost\ntotal_cost = price_per_pound_cashews * pounds_bought\nanswer = total_cost\n", "prediction": "12.8\n"}
{"context": "Read the following table regarding \"Train schedule\" and then answer a question.\n\nComfy Pillows Resort | 2:30 A.M. | 11:15 A.M. | 9:00 P.M.\nPleasant River Campground | 3:30 A.M. | 12:15 P.M. | 10:00 P.M.\nFloral Gardens | 4:15 A.M. | 1:00 P.M. | 10:45 P.M.\nMagician Village | 5:00 A.M. | 1:45 P.M. | 11:30 P.M.\nSkyscraper City | 5:45 A.M. | 2:30 P.M. | 12:15 A.M.\nGecko Paradise | 6:30 A.M. | 3:15 P.M. | 1:00 A.M.\nRocky Ravine Town | 7:30 A.M. | 4:15 P.M. | 2:00 A.M.", "question": "Look at the following schedule. Gabby is at Comfy Pillows Resort. If she wants to arrive at Magician Village at 11.30 P.M., what time should she get on the train? Choose from the the options: ['11:30 P.M.', '4:15 P.M.', '12:15 A.M.', '9:00 P.M.']", "answer": "9:00 P.M.", "ques_type": "multi_choice", "choices": ["11:30 P.M.", "4:15 P.M.", "12:15 A.M.", "9:00 P.M."], "code": "# Python code, return answer \n# Gabby is at Comfy Pillows Resort and wants to arrive at Magician Village at 11:30 P.M.\n# Looking for the time she should get on the train from the schedule.\n\n# Train schedule for Comfy Pillows Resort\ntrain_times_comfy_pillows = [\"2:30 A.M.\", \"11:15 A.M.\", \"9:00 P.M.\"]\n\n# From the schedule, the last train time before 11:30 P.M. is 9:00 P.M.\nanswer = '9:00 P.M.'\n", "prediction": "9:00 P.M.\n"}
{"context": "Read the following table regarding \"Broken crayons per box\" and then answer a question.\n\nStem | Leaf \n2 | 2, 3, 7, 8\n3 | 0\n4 | 0, 4\n5 | 1, 2, 2, 5, 9, 9\n6 | 1, 2, 6\n7 | 0, 2, 4, 7\n8 | 0, 1, 3, 9\n9 | 0", "question": "A crayon factory monitored the number of broken crayons per box during the past day. How many boxes had at least 60 broken crayons but fewer than 100 broken crayons?", "answer": "12", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Create a list of the number of broken crayons from the stem-and-leaf display\nbroken_crayons = [\n    22, 23, 27, 28, 30, 40, 40, \n    51, 52, 52, 55, 59, 59, \n    61, 62, 66, \n    70, 72, 74, 77, \n    80, 81, 83, 89, \n    90\n]\n\n# Count the boxes with at least 60 but fewer than 100 broken crayons\ncount_boxes = sum(1 for crayons in broken_crayons if 60 <= crayons < 100)\nanswer = count_boxes\n", "prediction": "12\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npair of shorts | $18.00\npair of khaki pants | $13.00\nwinter jacket | $29.00\npair of jeans | $19.00", "question": "Scott has $31.00. Does he have enough to buy a pair of khaki pants and a pair of jeans? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \ncost_khaki_pants = 13.00 \ncost_jeans = 19.00 \ntotal_cost = cost_khaki_pants + cost_jeans \nscott_money = 31.00 \n\n# Determine if Scott has enough money\nif scott_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"Field day schedule\" and then answer a question.\n\nEvent | Begin | End\nthree-legged race | 9:15 A.M. | 9:25 A.M.\nballoon stomp | 9:35 A.M. | 10:30 A.M.\njump rope race | 10:35 A.M. | 11:15 A.M.\nwater balloon toss | 11:25 A.M. | 12:00 P.M.\nobstacle course | 12:15 P.M. | 12:40 P.M.\nrelay race | 12:50 P.M. | 1:05 P.M.\nbean bag toss | 1:10 P.M. | 1:25 P.M.\nhula hoop contest | 1:30 P.M. | 2:10 P.M.\nhurdles | 2:15 P.M. | 2:25 P.M.\ntug-of-war | 2:30 P.M. | 3:20 P.M.", "question": "Look at the following schedule. Which event begins at 12.50 P.M.? Choose from the the options: ['jump rope race', 'balloon stomp', 'relay race', 'tug-of-war']", "answer": "relay race", "ques_type": "multi_choice", "choices": ["jump rope race", "balloon stomp", "relay race", "tug-of-war"], "code": "# Python code, return answer \n# Define the events with their start times\nschedule = {\n    'three-legged race': '9:15 A.M.',\n    'balloon stomp': '9:35 A.M.',\n    'jump rope race': '10:35 A.M.',\n    'water balloon toss': '11:25 A.M.',\n    'obstacle course': '12:15 P.M.',\n    'relay race': '12:50 P.M.',\n    'bean bag toss': '1:10 P.M.',\n    'hula hoop contest': '1:30 P.M.',\n    'hurdles': '2:15 P.M.',\n    'tug-of-war': '2:30 P.M.'\n}\n\n# Find the event that begins at 12:50 P.M.\nevent_at_noon = [event for event, start_time in schedule.items() if start_time == '12:50 P.M.']\nanswer = event_at_noon[0] if event_at_noon else None\n", "prediction": "relay race\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n7 | 8\n8 | 4\n9 | 0", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "linear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the differences in y-values for equal differences in x-values.\nx_values = [7, 8, 9]\ny_values = [8, 4, 0]\n\n# Calculate the differences\ndifferences = [y_values[i+1] - y_values[i] for i in range(len(y_values)-1)]\n# Check if the differences are constant\nis_linear = all(difference == differences[0] for difference in differences)\n\nanswer = 'linear' if is_linear else 'nonlinear'\n", "prediction": "NameError(\"name 'y_values' is not defined\")"}
{"context": "Read the following table regarding \"Cars in stock\" and then answer a question.\n\nColor | Frequency\nwhite | 13\nblack | 14\nred | 5\nsilver | 23", "question": "Francesca owns a used car dealership. The frequency chart shows the cars she has in stock. How many cars does Francesca have in stock?", "answer": "55", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of cars in stock\ncars_in_stock = 13 + 14 + 5 + 23\nanswer = cars_in_stock\n", "prediction": "55\n"}
{"context": "Read the following table regarding \"Club sizes (number of members)\" and then answer a question.\n\nStem | Leaf \n2 | 3, 3, 5, 6, 8\n3 | 5, 6, 7\n4 | 0, 1, 4, 4, 7\n5 | 4, 5, 6, 7", "question": "Martha found out the sizes of all the clubs at her school. What is the size of the largest club?", "answer": "57", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest club corresponds to the largest value in the stem-and-leaf display.\nlargest_club_size = 67  # From the stem \"5 | 4, 5, 6, 7\", the value is 67 members.\nanswer = largest_club_size\n", "prediction": "67\n"}
{"context": "Read the following table regarding \"Broken plates per shipment\" and then answer a question.\n\nStem | Leaf \n1 | 0, 1, 4, 5\n2 | 5\n3 | 0, 0, 2, 3, 4, 7\n4 | 2, 2", "question": "A pottery factory kept track of the number of broken plates per shipment last week. What is the largest number of broken plates?", "answer": "42", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest number corresponds to the largest value in the stem-and-leaf display.\nlargest_broken_plates = 42  # From the stem \"4 | 2, 2\", the value is 42.\nanswer = largest_broken_plates\n", "prediction": "42\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\noats | $1.39/lb\ncouscous | $1.22/lb\nbarley | $2.34/lb\nrye | $2.84/lb\nrice | $1.49/lb", "question": "Isaac buys 1 pound of rye. What is the total cost?", "answer": "2.84", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_rye = 2.84 \npounds_bought = 1 \ntotal_cost = price_per_pound_rye * pounds_bought\nanswer = total_cost\n", "prediction": "2.84\n"}
{"context": "Read the following table regarding \"Spelling test scores\" and then answer a question.\n\nStem | Leaf \n1 | 0, 8\n2 | 6, 7, 7\n3 | 3, 3, 4, 4, 5, 6\n4 | 0, 3, 4\n5 | 1, 3, 3, 3, 8\n6 | 7, 7, 9\n7 | 4", "question": "This morning, Mr. Davidson released the scores from last week's spelling test. How many students scored fewer than 80 points?", "answer": "23", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Scores are represented in a stem-and-leaf format\nscores = [\n    10, 18,   # Stem 1\n    26, 27, 27,  # Stem 2\n    33, 33, 34, 34, 35, 36,  # Stem 3\n    40, 43, 44,  # Stem 4\n    51, 53, 53, 53, 58,  # Stem 5\n    67, 67, 69,  # Stem 6\n    74   # Stem 7\n]\n\n# Count students who scored fewer than 80 points\nstudents_fewer_than_80 = sum(1 for score in scores if score < 80)\nanswer = students_fewer_than_80\n", "prediction": "23\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | Slow heart rate (<100 bpm) | Fast heart rate (>100 bpm)\nBrown eyes | 6 | 2\nBlue eyes | 3 | 4", "question": "Spencer is a pediatrics nurse who conducts the first neonatal exam on newborn patients. He makes note of the newborns' height, weight, eye color, and heart rate, among other things. What is the probability that a randomly selected baby has brown eyes and has a fast heart rate (>100 bpm)? Simplify any fractions.", "answer": "2/15", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total newborns\ntotal_newborns = 6 + 2 + 3 + 4\n\n# Newborns with brown eyes and fast heart rate\nbrown_eyes_fast_heart_rate = 2\n\n# Probability calculation\nprobability = brown_eyes_fast_heart_rate / total_newborns\n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(brown_eyes_fast_heart_rate, total_newborns).limit_denominator()\nanswer = simplified_probability\n", "prediction": "2/15\n"}
{"context": "Read the following table regarding \"Sheep owned\" and then answer a question.\n\nFarmer | Number of sheep\nFarmer Anne | 8\nFarmer Mike | 9\nFarmer Wendy | 6\nFarmer Betty | 8\nFarmer Sally | 5", "question": "Some farmers compared how many sheep were in their flocks. What is the median of the numbers?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of sheep owned by each farmer\nsheep_counts = [8, 9, 6, 8, 5]\n# Sort the counts to find the median\nsheep_counts.sort()\n# Calculate the median\nn = len(sheep_counts)\nif n % 2 == 0:\n    median = (sheep_counts[n//2 - 1] + sheep_counts[n//2]) / 2\nelse:\n    median = sheep_counts[n//2]\nanswer = median\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$555 | 14,200 | 1,800\n$675 | 13,200 | 3,100\n$795 | 12,200 | 4,400\n$915 | 11,200 | 5,700\n$1,035 | 10,200 | 7,000", "question": "Look at the table. Then answer the question. At a price of $915, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "shortage", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \nquantity_demanded_at_915 = 11200 \nquantity_supplied_at_915 = 5700 \n\n# Determine if there's a shortage or surplus\nif quantity_demanded_at_915 > quantity_supplied_at_915:\n    answer = 'shortage'\nelse:\n    answer = 'surplus'\n\n", "prediction": "shortage\n"}
{"context": "Read the following table regarding \"Stop signs\" and then answer a question.\n\nStreet | Number of stop signs\nSmith Street | 12\nWalker Street | 8\nJackson Street | 12\nPeabody Street | 8\nMason Street | 12", "question": "The town council reported on how many stop signs there are on each street. What is the mode of the numbers?", "answer": "12", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of stop signs on each street\nstop_signs = [12, 8, 12, 8, 12]\n# Calculate the mode\nfrom statistics import mode\nmode_stop_signs = mode(stop_signs)\nanswer = mode_stop_signs\n", "prediction": "12\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | Under age 12 | 13 to 30 years old\nTennis shoes | 6 | 3\nHigh heels | 1 | 5", "question": "Monica entered her sister into their town's Smelly Shoe Competition. Monica observed contestants of all ages proudly strutting around wearing different kinds of smelly shoes. What is the probability that a randomly selected contestant is wearing high heels and is under age 12? Simplify any fractions.", "answer": "1/15", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of contestants wearing high heels under age 12\nhigh_heels_under_12 = 1 \n# Total number of contestants\ntotal_contestants = 6 + 3 + 1 + 5 \n\n# Calculate the probability\nprobability = high_heels_under_12 / total_contestants \n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(high_heels_under_12, total_contestants).limit_denominator()\nanswer = simplified_probability\n", "prediction": "1/15\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ncanoe | $694.00\nmotorcycle | $968.00\nsailboat | $534.00\nkayak | $584.00", "question": "How much more does a motorcycle cost than a canoe?", "answer": "274", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_canoe = 694.00 \ncost_motorcycle = 968.00 \n# Calculate the difference in cost\ndifference_cost = cost_motorcycle - cost_canoe\nanswer = difference_cost\n", "prediction": "274.0\n"}
{"context": "Read the following table regarding \"Fire hydrants\" and then answer a question.\n\nStreet | Number of hydrants\nOak Street | 2\nAspen Street | 5\nMaple Street | 2\nLemon Street | 4\nCherry Street | 3\nRose Street | 1\nFir Street | 4\nElm Street | 3", "question": "The city recorded how many fire hydrants there are on each street. What is the mean of the numbers?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of fire hydrants on each street\nhydrants = [2, 5, 2, 4, 3, 1, 4, 3]\n# Calculate the mean\nmean_hydrants = sum(hydrants) / len(hydrants)\nanswer = mean_hydrants\n", "prediction": "3.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbearded dragon | $243.00\nchinchilla | $138.00\nhedgehog | $172.00\ncockatoo | $143.00", "question": "How much money does Jake need to buy a cockatoo and a bearded dragon?", "answer": "386", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_cockatoo = 143.00 \nprice_bearded_dragon = 243.00 \n# Calculate the total amount needed\ntotal_cost = price_cockatoo + price_bearded_dragon\nanswer = total_cost\n", "prediction": "386.0\n"}
{"context": "Read the following table regarding \"Taking photographs\" and then answer a question.\n\nPhotographs taken | Frequency\n0 | 15\n1 | 16\n2 | 12\n3 | 8\n4 | 7\n5 | 2\n6 | 14", "question": "While compiling photos for an album, Andrew noted the number of photographs taken by each of his friends and family. How many people are there in all?", "answer": "74", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of each category of photographs taken\nfrequency = {\n    0: 15,\n    1: 16,\n    2: 12,\n    3: 8,\n    4: 7,\n    5: 2,\n    6: 14\n}\n\n# Calculate the total number of people\ntotal_people = sum(frequency.values())\nanswer = total_people\n", "prediction": "74\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nRusset Burbank potatoes | $1.75/kg\nKing Edward potatoes | $1.69/kg\nRed Pontiac potatoes | $0.63/kg\nGolden Wonder potatoes | $1.78/kg\nYukon Gold potatoes | $0.40/kg", "question": "Jerry went to the store. He bought 4 kilograms of King Edward potatoes. How much did he spend?", "answer": "6.76", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_kilogram_king_edward = 1.69 \nkilograms_bought = 4 \nanswer = price_per_kilogram_king_edward * kilograms_bought\n", "prediction": "6.76\n"}
{"context": "Read the following table regarding \"Tickets sold\" and then answer a question.\n\nDay | Number of tickets\nTuesday | 70\nWednesday | 71\nThursday | 72\nFriday | 75", "question": "The aquarium's records showed how many tickets were sold in the past 4 days. On which day did the aquarium sell the most tickets? Choose from the the options: ['Tuesday', 'Wednesday', 'Thursday', 'Friday']", "answer": "Friday", "ques_type": "multi_choice", "choices": ["Tuesday", "Wednesday", "Thursday", "Friday"], "code": "# Python code, return answer \ntickets_sold = {\n    'Tuesday': 70,\n    'Wednesday': 71,\n    'Thursday': 72,\n    'Friday': 75\n}\n# Find the day with the most tickets sold\nmost_tickets_day = max(tickets_sold, key=tickets_sold.get)\nanswer = most_tickets_day\n", "prediction": "Friday\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of tool boxes | Number of screwdrivers\n1 | 5\n2 | 10\n3 | 15\n4 | 20\n5 | ?", "question": "Each tool box has 5 screwdrivers. How many screwdrivers are in 5 tool boxes?", "answer": "25", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Each toolbox has 5 screwdrivers\nscrewdrivers_per_toolbox = 5\n# Number of toolboxes\nnumber_of_toolboxes = 5\n# Calculate the total number of screwdrivers\ntotal_screwdrivers = screwdrivers_per_toolbox * number_of_toolboxes\nanswer = total_screwdrivers\n", "prediction": "25\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$305 | 18,000 | 17,300\n$365 | 14,400 | 18,300\n$425 | 10,800 | 19,300\n$485 | 7,200 | 20,300\n$545 | 3,600 | 21,300", "question": "Look at the table. Then answer the question. At a price of $485, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "surplus", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \n# Quantity demanded and supplied at the price of $485\nquantity_demanded = 7200\nquantity_supplied = 20300\n\n# Determine if there is a shortage or surplus\nif quantity_demanded < quantity_supplied:\n    answer = 'surplus'\nelse:\n    answer = 'shortage'\n\n", "prediction": "surplus\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nrabbit | $105\nchameleon | $136\npot-bellied pig | $230\ncockatoo | $124\niguana | $138", "question": "Akira has $271. Does she have enough to buy a cockatoo and an iguana? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \ncost_cockatoo = 124\ncost_iguana = 138\ntotal_cost = cost_cockatoo + cost_iguana\nakira_money = 271\n# Determine if Akira has enough money\nif akira_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of branches | Number of caterpillars\n1 | 2\n2 | 4\n3 | 6\n4 | 8\n5 | 10\n6 | ?", "question": "Each branch has 2 caterpillars. How many caterpillars are on 6 branches?", "answer": "12", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nnumber_of_branches = 6\ncaterpillars_per_branch = 2\n# Calculate the total number of caterpillars\ntotal_caterpillars = number_of_branches * caterpillars_per_branch\nanswer = total_caterpillars\n", "prediction": "12\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ngarlic peanuts | $1.38 per lb\nsalted peanuts | $2.54 per lb\nhoney roasted peanuts | $2.27 per lb\nunshelled peanuts | $1.58 per lb", "question": "How much would it cost to buy 5 pounds of unshelled peanuts?", "answer": "7.90", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_unshelled_peanuts = 1.58 \npounds_bought = 5 \n# Calculate total cost\ntotal_cost = price_per_pound_unshelled_peanuts * pounds_bought\nanswer = total_cost\n", "prediction": "7.9\n"}
{"context": "Read the following table regarding \"Smoothies sold\" and then answer a question.\n\nDay | Number of smoothies\nWednesday | 87\nThursday | 83\nFriday | 85\nSaturday | 85\nSunday | 86", "question": "A juice shop tracked how many smoothies it sold in the past 5 days. What is the median of the numbers?", "answer": "85", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nsmoothies_sold = [87, 83, 85, 85, 86]\n\n# Sort the list to find the median\nsorted_smoothies = sorted(smoothies_sold)\n\n# Calculate the median\nn = len(sorted_smoothies)\nif n % 2 == 1:\n    median = sorted_smoothies[n // 2]  # Middle value for odd number of elements\nelse:\n    median = (sorted_smoothies[n // 2 - 1] + sorted_smoothies[n // 2]) / 2  # Average of two middle values for even\n\nanswer = median\n", "prediction": "85\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n18 | 19\n19 | 11\n20 | 3", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "linear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the differences in y-values for equal differences in x-values.\nx_values = [18, 19, 20]\ny_values = [19, 11, 3]\n\n# Calculate the differences\ndifferences = [y_values[i+1] - y_values[i] for i in range(len(y_values)-1)]\n# Check if the differences are constant\nis_linear = all(difference == differences[0] for difference in differences)\n\nanswer = 'linear' if is_linear else 'nonlinear'\n", "prediction": "NameError(\"name 'y_values' is not defined\")"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nspinach omelette | $3.00\nbowl of melon | $3.00\nbreakfast burrito | $6.00\negg sandwich | $7.00", "question": "How much money does Ezra need to buy an egg sandwich, a bowl of melon, and a spinach omelette?", "answer": "13", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_egg_sandwich = 7.00\nprice_bowl_of_melon = 3.00\nprice_spinach_omelette = 3.00\n\n# Total amount needed\ntotal_cost = price_egg_sandwich + price_bowl_of_melon + price_spinach_omelette\nanswer = total_cost\n", "prediction": "13.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbox of paper clips | $0.90\neraser | $0.41\npencil sharpener | $0.31\ndry erase marker | $0.65", "question": "How much money does Isaac need to buy a dry erase marker and an eraser?", "answer": "1.06", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_dry_erase_marker = 0.65 \nprice_eraser = 0.41 \n# Calculate the total amount needed\ntotal_cost = price_dry_erase_marker + price_eraser\nanswer = total_cost\n", "prediction": "1.06\n"}
{"context": "Read the following table regarding \"Roller coasters per amusement park\" and then answer a question.\n\nStem | Leaf \n1 | 3, 4, 7, 9\n2 | 0, 1, 7, 9\n3 | 6, 8, 8\n4 | 4, 4, 6, 7, 8, 8", "question": "Owen found a list of the number of roller coasters at each amusement park in the state. How many amusement parks have at least 31 roller coasters but fewer than 47 roller coasters?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Extracting the values from the stem-and-leaf display\nroller_coasters = [13, 14, 17, 19, 20, 21, 27, 29, 36, 38, 38, 44, 44, 46, 47, 48, 48]\n\n# Count the number of amusement parks with at least 31 and fewer than 47 roller coasters\ncount_parks = sum(1 for coasters in roller_coasters if 31 <= coasters < 47)\n\nanswer = count_parks\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"Election results\" and then answer a question.\n\nCandidate | Votes\nDevon | 930\nMartha | 450\nShelby | 720\nJared | 380", "question": "In a recent election at Cline University, four people ran for student body president. What fraction of votes were for Jared? Simplify your answer.", "answer": "19/124", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total votes collected by all candidates\ntotal_votes = 930 + 450 + 720 + 380\n# Votes for Jared\njared_votes = 380\n# Calculate the fraction of votes for Jared\nfraction_jared = jared_votes / total_votes\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_fraction = Fraction(jared_votes, total_votes).limit_denominator()\nanswer = simplified_fraction\n", "prediction": "19/124\n"}
{"context": "Read the following table regarding \"Scores on a board game\" and then answer a question.\n\nScore | Frequency\n6 | 3\n7 | 14\n8 | 11\n9 | 0\n10 | 6", "question": "Susan and her friends recorded their scores while playing a board game. How many people are there in all?", "answer": "34", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of scores\nfrequency = {\n    6: 3,\n    7: 14,\n    8: 11,\n    9: 0,\n    10: 6\n}\n\n# Calculate total number of people\ntotal_people = sum(frequency.values())\nanswer = total_people\n", "prediction": "34\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nkidney beans | $1.78/pound\nsoybeans | $1.29/pound\ngarbanzo beans | $2.75/pound\nlima beans | $2.28/pound", "question": "Darnel buys 2 pounds of soybeans, 4 pounds of garbanzo beans, and 1 pound of kidney beans. What is the total cost?", "answer": "15.36", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices per pound\nprice_soybeans = 1.29\nprice_garbanzo = 2.75\nprice_kidney = 1.78\n\n# Quantities purchased\nquantity_soybeans = 2\nquantity_garbanzo = 4\nquantity_kidney = 1\n\n# Calculate total cost\ntotal_cost = (price_soybeans * quantity_soybeans) + (price_garbanzo * quantity_garbanzo) + (price_kidney * quantity_kidney)\nanswer = total_cost\n", "prediction": "15.36\n"}
{"context": "Read the following table regarding \"Quiz show scores\" and then answer a question.\n\nStem | Leaf \n1 | 0, 3, 5, 5, 8, 9, 9, 9\n2 | 7, 9\n3 | 7\n4 | 8, 9\n5 | 0, 7, 8, 9\n6 | 0, 1, 3, 3, 6", "question": "For a math assignment, Cora researched the scores of the people competing on her favorite quiz show. How many people scored at least 10 points but fewer than 30 points?", "answer": "10", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Extracting scores from the stem-and-leaf display\nscores = [\n    10, 13, 15, 15, 18, 19, 19, 19,  # scores in the '1' stem\n    27, 29,                         # scores in the '2' stem\n    30,                             # score in the '3' stem\n    48, 49,                         # scores in the '4' stem\n    50, 57, 58, 59,                # scores in the '5' stem\n    60, 61, 63, 63, 66             # scores in the '6' stem\n]\n\n# Count scores that are at least 10 and fewer than 30\ncount_scores = sum(1 for score in scores if 10 <= score < 30)\nanswer = count_scores\n", "prediction": "10\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nquartz crystal | $0.95\npiece of smoky quartz | $0.78\nsmooth piece of sea glass | $0.65\npiece of black mica | $0.31\npiece of fool's gold | $0.54", "question": "How much more does a piece of smoky quartz cost than a piece of fool's gold?", "answer": "0.24", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_smoky_quartz = 0.78 \ncost_fools_gold = 0.54 \n# Calculate the difference in cost\ndifference_cost = cost_smoky_quartz - cost_fools_gold\nanswer = difference_cost\n", "prediction": "0.24\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ncottonseed oil | $2 per kilogram\nsunflower seed oil | $2 per kilogram\npeanut oil | $2 per kilogram\ncanola oil | $2 per kilogram\nolive oil | $2 per kilogram", "question": "Victoria bought 4 kilograms of olive oil, 4 kilograms of peanut oil, and 5 kilograms of sunflower seed oil. How much did she spend?", "answer": "26", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Price per kilogram for all oils\nprice_per_kilogram = 2 \n# Amounts of each oil purchased\nolive_oil_kilograms = 4 \npeanut_oil_kilograms = 4 \nsunflower_seed_oil_kilograms = 5 \n# Total cost calculation\ntotal_cost = (olive_oil_kilograms + peanut_oil_kilograms + sunflower_seed_oil_kilograms) * price_per_kilogram\nanswer = total_cost\n", "prediction": "26\n"}
{"context": "Read the following table regarding \"Bottles collected\" and then answer a question.\n\nName | Number of bottles\nSharon | 798\nDarren | 747\nJayce | 779\nRichard | 749", "question": "Sharon's class paid attention to how many bottles each student collected for their recycling project. Who collected the fewest bottles? Choose from the the options: ['Sharon', 'Darren', 'Jayce', 'Richard']", "answer": "Darren", "ques_type": "multi_choice", "choices": ["Sharon", "Darren", "Jayce", "Richard"], "code": "# Python code, return answer \nbottles_collected = {\n    'Sharon': 798,\n    'Darren': 747,\n    'Jayce': 779,\n    'Richard': 749\n}\n# Find the student with the fewest bottles collected\nfewest_bottles_student = min(bottles_collected, key=bottles_collected.get)\nanswer = fewest_bottles_student\n", "prediction": "Darren\n"}
{"context": "Read the following table regarding \"Ice cream cones sold\" and then answer a question.\n\nDay | Number of ice cream cones\nThursday | 52\nFriday | 59\nSaturday | 51\nSunday | 54", "question": "An ice cream shop kept track of how many ice cream cones it sold in the past 4 days. On which day did the shop sell the most ice cream cones? Choose from the the options: ['Thursday', 'Friday', 'Saturday', 'Sunday']", "answer": "Friday", "ques_type": "multi_choice", "choices": ["Thursday", "Friday", "Saturday", "Sunday"], "code": "# Python code, return answer \nice_cream_sales = {\n    'Thursday': 52,\n    'Friday': 59,\n    'Saturday': 51,\n    'Sunday': 54\n}\n# Find the day with the most ice cream cones sold\nmost_sales_day = max(ice_cream_sales, key=ice_cream_sales.get)\nanswer = most_sales_day\n", "prediction": "Friday\n"}
{"context": "Read the following table regarding \"Time Hugo spent on homework\" and then answer a question.\n\nDay | Minutes\nSunday | 25\nMonday | 22\nTuesday | 25\nWednesday | 19\nThursday | 17", "question": "Hugo kept track of how long it took to finish his homework each day. According to the table, what was the rate of change between Tuesday and Wednesday?", "answer": "-6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Minutes spent on homework\ntuesday_minutes = 25\nwednesday_minutes = 19\n# Calculate the rate of change between Tuesday and Wednesday\nrate_of_change = wednesday_minutes - tuesday_minutes\nanswer = rate_of_change\n", "prediction": "-6\n"}
{"context": "Read the following table regarding \"Phone calls\" and then answer a question.\n\nCompany | Number of phone calls\nNature Now | 8,467\nBrave New Day Corporation | 1,817\nHenderson Co. | 7,007", "question": "Some companies compared how many phone calls they made. In all, how many phone calls did Brave New Day Corporation and Henderson Co. make?", "answer": "8,824", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of phone calls made by each company\ncalls_brave_new_day = 1817\ncalls_henderson_co = 7007\n# Total phone calls made by both companies\ntotal_calls = calls_brave_new_day + calls_henderson_co\nanswer = total_calls\n", "prediction": "8824\n"}
{"context": "Read the following table regarding \"Bricks per building\" and then answer a question.\n\nStem | Leaf \n2 | 7, 7, 9\n3 | \n4 | 4, 7\n5 | 1, 1, 3, 8\n6 | \n7 | 0, 3, 4, 8\n8 | 0, 3, 3\n9 | 0", "question": "The architecture student counted the number of bricks in each building in her neighborhood. How many buildings have at least 66 bricks but fewer than 93 bricks?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Extracting values from the stem-and-leaf display\nbricks = [\n    27, 27, 29,  # Stem 2\n    # Stem 3 has no values\n    44, 47,      # Stem 4\n    51, 51, 53, 58,  # Stem 5\n    # Stem 6 has no values\n    70, 73, 74, 78,  # Stem 7\n    80, 83, 83,     # Stem 8\n    90               # Stem 9\n]\n\n# Count buildings with at least 66 but fewer than 93 bricks\ncount_buildings = sum(1 for brick in bricks if 66 <= brick < 93)\nanswer = count_buildings\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"Balloons sold\" and then answer a question.\n\nDay | Number of balloons\nThursday | 888\nFriday | 838\nSaturday | 843\nSunday | 834", "question": "The manager of a party supply store researched how many balloons it sold in the past 4 days. On which day did the store sell the fewest balloons? Choose from the the options: ['Thursday', 'Friday', 'Saturday', 'Sunday']", "answer": "Sunday", "ques_type": "multi_choice", "choices": ["Thursday", "Friday", "Saturday", "Sunday"], "code": "# Python code, return answer \nballoons_sold = {\n    'Thursday': 888,\n    'Friday': 838,\n    'Saturday': 843,\n    'Sunday': 834\n}\n# Find the day with the fewest balloons sold\nfewest_balloons_day = min(balloons_sold, key=balloons_sold.get)\nanswer = fewest_balloons_day\n", "prediction": "Sunday\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of boxes | Number of pumpkin scones\n1 | 5\n2 | 10\n3 | 15\n4 | 20\n5 | ?", "question": "Each box has 5 pumpkin scones. How many pumpkin scones are in 5 boxes?", "answer": "25", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Each box contains 5 pumpkin scones\nscones_per_box = 5 \n# Number of boxes\nnumber_of_boxes = 5 \n# Calculate total pumpkin scones in 5 boxes\ntotal_scones = scones_per_box * number_of_boxes\nanswer = total_scones\n", "prediction": "25\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nflower erasers | $3 per lb\nheart erasers | $6 per lb\nrectangular erasers | $3 per lb\nanimal erasers | $3 per lb\nalphabet erasers | $5 per lb", "question": "Monica went to the store and bought 1.9 pounds of rectangular erasers . How much did she spend?", "answer": "5.70", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_rectangular_erasers = 3  # price per pound for rectangular erasers\npounds_bought = 1.9  # pounds bought by Monica\n# Calculate total cost\ntotal_cost = price_per_pound_rectangular_erasers * pounds_bought\nanswer = total_cost\n", "prediction": "5.699999999999999\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nsteamed broccoli | $7\ngrilled eggplant | $4\npasta with tomato sauce | $5\npasta with white sauce | $4", "question": "Caleb has $8. Does he have enough to buy pasta with white sauce and grilled eggplant? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \nprice_pasta_white_sauce = 4 \nprice_grilled_eggplant = 4 \n# Total cost for both items\ntotal_cost = price_pasta_white_sauce + price_grilled_eggplant\ncaleb_budget = 8 \n\n# Determine if Caleb has enough money\nif total_cost <= caleb_budget:\n    answer = 'yes'\nelse:\n    answer = 'no'\n\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"Push-up competition (number of push-ups)\" and then answer a question.\n\nStem | Leaf \n4 | 6, 7, 8\n5 | 2, 6\n6 | 1, 2, 6, 8\n7 | 1, 7, 8", "question": "Connor's P.E. class participated in a push-up competition, and Connor wrote down how many push-ups each person could do. How many people did at least 43 push-ups but fewer than 63 push-ups?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Extracting the values from the stem-and-leaf display\npush_ups = [\n    46, 47, 48,  # From stem 4\n    52, 56,      # From stem 5\n    61, 62, 66, 68,  # From stem 6\n    71, 77, 78   # From stem 7\n]\n\n# Count how many did at least 43 but fewer than 63\ncount = sum(1 for x in push_ups if 43 < x < 63)\nanswer = count\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of trains | Number of cars\n1 | 2\n2 | 4\n3 | 6\n4 | 8\n5 | 10\n6 | ?", "question": "Each train has 2 cars. How many cars are on 6 trains?", "answer": "12", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nnumber_of_trains = 6\ncars_per_train = 2\n# Calculate the total number of cars\ntotal_cars = number_of_trains * cars_per_train\nanswer = total_cars\n", "prediction": "12\n"}
{"context": "Read the following table regarding \"Cracked window panes per shipment\" and then answer a question.\n\nStem | Leaf \n1 | 0, 8\n2 | 5, 6\n3 | \n4 | 9\n5 | \n6 | 6\n7 | 9\n8 | 1", "question": "The employees at Jeremiah's Construction monitored the number of cracked window panes in each shipment they received. How many shipments had at least 10 cracked window panes but less than 90 cracked window panes?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# From the stem-and-leaf display, we will extract the values and count the shipments\nshipments = [\n    10, 18, 25, 26, 30, 40, 50, 60, 66, 79, 81  # 10, 18, 25, 26, 40, 66, 79, 81 extracted from stem-and-leaf\n]\n\n# Count how many shipments had at least 10 and less than 90 cracked window panes\ncount_shipments = sum(1 for x in shipments if 10 <= x < 90)\nanswer = count_shipments\n", "prediction": "11\n"}
{"context": "Read the following table regarding \"Boxes per shipment\" and then answer a question.\n\nStem | Leaf \n1 | 9\n2 | 6\n3 | 4, 9\n4 | 1, 9\n5 | 0, 3, 9\n6 | 4, 8", "question": "A shipping company keeps track of the number of boxes in each shipment they send out. How many shipments had exactly 56 boxes?", "answer": "0", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# In the given stem-and-leaf display, we look for the stem \"5\" and the leaf \"6\" which represents the number 56.\n# Since no other leaf corresponds to 56 in the display, we can conclude that there is only 1 shipment with exactly 56 boxes.\n\n# Number of shipments with exactly 56 boxes\nshipments_with_56_boxes = 1\nanswer = shipments_with_56_boxes\n", "prediction": "1\n"}
{"context": "Read the following table regarding \"Pizza sales\" and then answer a question.\n\nRestaurant | Pepperoni pizzas | Cheese pizzas\nPizzas Only | $19 | $8\nPizzeria Italiano | $8 | $18\nPizza Italia | $12 | $9\nTaste of New York | $13 | $17", "question": "A food industry researcher compiled the revenues of several pizzerias. How much more did Pizzas Only make from pepperoni pizza sales than from cheese pizza sales?", "answer": "11", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Revenue from pepperoni and cheese pizza sales at Pizzas Only\npepperoni_sales_pizzas_only = 19 \ncheese_sales_pizzas_only = 8 \n# Calculate the difference in revenue\ndifference_in_revenue = pepperoni_sales_pizzas_only - cheese_sales_pizzas_only\nanswer = difference_in_revenue\n", "prediction": "11\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ncoyote stamp | $0.05\nrobot stamp | $0.01\nbutterfly stamp | $0.01\nflag stamp | $0.09", "question": "Oliver has $0.05. Does he have enough to buy a robot stamp and a coyote stamp? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# Prices of the stamps\nprice_robot_stamp = 0.01\nprice_coyote_stamp = 0.05\n# Total cost of both stamps\ntotal_cost = price_robot_stamp + price_coyote_stamp\n# Amount Oliver has\noliver_money = 0.05\n# Check if Oliver has enough money\nif oliver_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n12 | 11\n13 | 15\n14 | 19", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "linear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the differences in y-values for equal intervals of x-values.\ny_values = [11, 15, 19]\nx_values = [12, 13, 14]\n\n# Calculate the differences\ndifference_1 = y_values[1] - y_values[0]  # 15 - 11\ndifference_2 = y_values[2] - y_values[1]  # 19 - 15\n\n# Check if the differences are constant\nif difference_1 == difference_2:\n    answer = 'linear'\nelse:\n    answer = 'nonlinear'\n\n", "prediction": "linear\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nwater heater | $599\nbarbecue grill | $202\nwashing machine | $145\nclothes dryer | $645", "question": "Isaiah has $836. Does he have enough to buy a clothes dryer and a barbecue grill? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \ncost_clothes_dryer = 645 \ncost_barbecue_grill = 202 \ntotal_cost = cost_clothes_dryer + cost_barbecue_grill\n\n# Check if Isaiah has enough money\nisaiah_budget = 836 \nif isaiah_budget >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"Tractors\" and then answer a question.\n\nFarmer | Number of tractors\nFarmer Andy | 8\nFarmer Alex | 8\nFarmer Jane | 5\nFarmer Rob | 9\nFarmer Joe | 6\nFarmer Allison | 3\nFarmer Tom | 4\nFarmer Susie | 7", "question": "Some farmers compared how many tractors they own. What is the range of the numbers?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of tractors owned by each farmer\ntractors_count = [8, 8, 5, 9, 6, 3, 4, 7]\n# Calculate the range\nrange_tractors = max(tractors_count) - min(tractors_count)\nanswer = range_tractors\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nvolleyball | $8.47\nbaseball glove | $9.56\nbike horn | $2.47\njump rope | $6.08", "question": "How much more does a baseball glove cost than a jump rope?", "answer": "3.48", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_baseball_glove = 9.56 \ncost_jump_rope = 6.08 \n# Calculate the difference in cost\ndifference_cost = cost_baseball_glove - cost_jump_rope\nanswer = difference_cost\n", "prediction": "3.4800000000000004\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of shelves | Number of blocks of cheese\n1 | 2\n2 | 4\n3 | ?", "question": "Each shelf has 2 blocks of cheese. How many blocks of cheese are on 3 shelves?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nblocks_per_shelf = 2 \nnumber_of_shelves = 3 \n# Calculate the total number of blocks of cheese on 3 shelves\ntotal_blocks = blocks_per_shelf * number_of_shelves\nanswer = total_blocks\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npasta with tomato sauce | $6\ncheese pizza | $5\nsteamed broccoli | $7\ngreen salad | $4\nspaghetti and meatballs | $8\npasta with white sauce | $7", "question": "How much money does Lee need to buy pasta with tomato sauce, pasta with white sauce, and spaghetti and meatballs?", "answer": "21", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the selected items\nprice_pasta_tomato_sauce = 6\nprice_pasta_white_sauce = 7\nprice_spaghetti_meatballs = 8\n\n# Calculate the total cost\ntotal_cost = price_pasta_tomato_sauce + price_pasta_white_sauce + price_spaghetti_meatballs\nanswer = total_cost\n", "prediction": "21\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$15 | 21,700 | 1,000\n$145 | 20,900 | 1,800\n$275 | 20,100 | 2,600\n$405 | 19,300 | 3,400\n$535 | 18,500 | 4,200", "question": "Look at the table. Then answer the question. At a price of $15, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "shortage", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \nquantity_demanded = 21700\nquantity_supplied = 1000\n\n# Determine if there is a shortage or surplus\nif quantity_demanded > quantity_supplied:\n    answer = 'shortage'\nelse:\n    answer = 'surplus'\n\n", "prediction": "shortage\n"}
{"context": "Read the following table regarding \"Butterscotch candies per bag\" and then answer a question.\n\nStem | Leaf \n0 | 9\n1 | \n2 | 1, 2, 4\n3 | \n4 | 7\n5 | 0, 0, 0\n6 | 9\n7 | 0, 1, 5\n8 | 0, 8\n9 | 0", "question": "At a candy factory, butterscotch candies were packaged into bags of different sizes. What is the smallest number of butterscotch candies?", "answer": "9", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The smallest number of butterscotch candies corresponds to the smallest value in the stem-and-leaf display.\nsmallest_candies = 9  # From the stem \"0 | 9\", the value is 9 candies.\nanswer = smallest_candies\n", "prediction": "9\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbox of crayons | $2.24\nsilver glitter pen | $2.88\nbox of colored pencils | $1.25\nrubber stamp | $1.51\nbox of paper clips | $1.47", "question": "How much money does Billy need to buy 5 boxes of crayons?", "answer": "11.20", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_box_of_crayons = 2.24 \nnumber_of_boxes = 5 \n# Calculate total cost for 5 boxes of crayons\ntotal_cost = price_per_box_of_crayons * number_of_boxes\nanswer = total_cost\n", "prediction": "11.200000000000001\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npair of brown pants | $21.36\npair of shorts | $16.65\npair of tennis shoes | $15.63\ndenim jacket | $22.82\nblack jacket | $12.64\npair of boots | $35.51", "question": "How much money does David need to buy 4 pairs of shorts?", "answer": "66.60", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pair_of_shorts = 16.65 \npairs_of_shorts_to_buy = 4 \ntotal_cost = price_per_pair_of_shorts * pairs_of_shorts_to_buy\nanswer = total_cost\n", "prediction": "66.6\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ngranola | $0.64/lb\ninstant oatmeal | $1.15/lb\nquick oatmeal | $1.47/lb\nold-fashioned oatmeal | $0.74/lb", "question": "How much would it cost to buy 4 pounds of quick oatmeal ?", "answer": "5.88", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_quick_oatmeal = 1.47 \npounds_bought = 4 \n# Calculate the total cost\ntotal_cost = price_per_pound_quick_oatmeal * pounds_bought\nanswer = total_cost\n", "prediction": "5.88\n"}
{"context": "Read the following table regarding \"Students receiving scholarships\" and then answer a question.\n\nYear | Students\n2012 | 44\n2013 | 45\n2014 | 48\n2015 | 28\n2016 | 45", "question": "The financial aid office at Barton University produced an internal report on the number of students receiving scholarships. According to the table, what was the rate of change between 2013 and 2014?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nstudents_2013 = 45\nstudents_2014 = 48\n\n# Calculate the rate of change\nrate_of_change = students_2014 - students_2013\nanswer = rate_of_change\n", "prediction": "3\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | Dog | Cat\nA vegetarian diet | 3 | 6\nAn omnivorous diet | 5 | 6", "question": "A health instructor surveyed all her students, and tallied the results. The first survey question asked, \"Do you adhere to a vegetarian diet or omnivorous diet?\" The second question asked, \"If you were to buy a pet today, which animal would it be?\" What is the probability that a randomly selected student adheres to a vegetarian diet and would buy a cat? Simplify any fractions.", "answer": "3/10", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total number of students adhering to a vegetarian diet\nvegetarian_cats = 6\n# Total number of students surveyed (Vegetarian + Omnivorous)\ntotal_students = 3 + 6 + 5 + 6\n# Probability calculation\nprobability = vegetarian_cats / total_students\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(vegetarian_cats, total_students).limit_denominator()\nanswer = simplified_probability\n", "prediction": "3/10\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ndishwasher | $401\nbarbecue grill | $512\nstove | $591\nwashing machine | $171", "question": "Roger has $1,485. How much money will Roger have left if he buys a washing machine and a dishwasher?", "answer": "913", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the appliances\nprice_dishwasher = 401\nprice_washing_machine = 171\n# Total cost of the appliances\ntotal_cost = price_dishwasher + price_washing_machine\n# Roger's initial amount of money\ninitial_amount = 1485\n# Money left after purchases\nmoney_left = initial_amount - total_cost\nanswer = money_left\n", "prediction": "913\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | 1 passenger | 2 passengers\nBlue | 6 | 4\nYellow | 3 | 5", "question": "At a hot air balloon festival, Harold made note of how many passengers were in each balloon and the color of each balloon. What is the probability that a randomly selected hot air balloon is blue and contains 1 passenger? Simplify any fractions.", "answer": "1/3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total balloons \ntotal_balloons = 6 + 4 + 3 + 5\n# Balloons that are blue and contain 1 passenger\nblue_one_passenger = 6\n# Calculate the probability\nprobability_blue_one = blue_one_passenger / total_balloons\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(blue_one_passenger, total_balloons).limit_denominator()\nanswer = simplified_probability\n", "prediction": "1/3\n"}
{"context": "Read the following table regarding \"Drawing a card between 4 and 9\" and then answer a question.\n\nNumber drawn | Frequency\n4 | 14\n5 | 11\n6 | 3\n7 | 9\n8 | 18\n9 | 16", "question": "A math textbook explains probability by showing a set of cards numbered 4 through 9 and showing the number of people who might draw each card. Which number was drawn the most times?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Create a dictionary for the frequency of each number drawn\nfrequency = {\n    4: 14,\n    5: 11,\n    6: 3,\n    7: 9,\n    8: 18,\n    9: 16\n}\n\n# Find the number that was drawn the most times\nmost_drawn_number = max(frequency, key=frequency.get)\nanswer = most_drawn_number\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"Peanuts per bag of trail mix\" and then answer a question.\n\nStem | Leaf \n4 | 6\n5 | 3\n6 | 3, 9\n7 | 0, 2, 2, 2, 2, 7, 8\n8 | 5, 9", "question": "Lola counted the number of peanuts in each bag of trail mix. How many bags had exactly 72 peanuts?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# From the stem-and-leaf display, we look for the stem \"7\" and the leaf \"2\"\nbags_with_72_peanuts = 1  # There is one entry for 72 peanuts.\nanswer = bags_with_72_peanuts\n", "prediction": "1\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nsailboat | $528.00\nmotorcycle | $932.00\ncanoe | $774.00\nsnowmobile | $664.00\nkayak | $308.00", "question": "Keenan has $1,482.00. Does he have enough to buy a motorcycle and a sailboat? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# Prices of the motorcycle and sailboat\nprice_motorcycle = 932.00\nprice_sailboat = 528.00\n# Total cost to buy both\ntotal_cost = price_motorcycle + price_sailboat\n# Keenan's available funds\nkeenan_funds = 1482.00\n# Determine if he has enough money\nif keenan_funds >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"Doing pull-ups\" and then answer a question.\n\nNumber of pull-ups | Frequency\n0 | 17\n1 | 15\n2 | 4\n3 | 0\n4 | 19\n5 | 12", "question": "Jackson, a fitness counselor, counted the number of pull-ups completed by each bootcamp participant. How many participants did more than 1 pull-up?", "answer": "35", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of participants for each number of pull-ups\nfrequency = {\n    0: 17,\n    1: 15,\n    2: 4,\n    3: 0,\n    4: 19,\n    5: 12\n}\n\n# Calculate the total number of participants who did more than 1 pull-up\nparticipants_more_than_one = frequency[2] + frequency[3] + frequency[4] + frequency[5]\nanswer = participants_more_than_one\n", "prediction": "35\n"}
{"context": "Read the following table regarding \"High school schedule\" and then answer a question.\n\nEvent | Begin | End\nwomen's soccer practice | 2:25 P.M. | 3:35 P.M.\nstudent government meeting | 3:10 P.M. | 4:50 P.M.\nmen's soccer practice | 4:10 P.M. | 5:35 P.M.\nwater polo practice | 5:20 P.M. | 6:10 P.M.\nmarching band practice | 6:00 P.M. | 7:30 P.M.\nchoir concert | 7:15 P.M. | 8:00 P.M.", "question": "Look at the following schedule. Which event ends at 4.50 P.M.? Choose from the the options: ['choir concert', 'marching band practice', 'student government meeting', \"men's soccer practice\"]", "answer": "student government meeting", "ques_type": "multi_choice", "choices": ["choir concert", "marching band practice", "student government meeting", "men's soccer practice"], "code": "# Python code, return answer \nevents = {\n    'women\\'s soccer practice': ('2:25 P.M.', '3:35 P.M.'),\n    'student government meeting': ('3:10 P.M.', '4:50 P.M.'),\n    'men\\'s soccer practice': ('4:10 P.M.', '5:35 P.M.'),\n    'water polo practice': ('5:20 P.M.', '6:10 P.M.'),\n    'marching band practice': ('6:00 P.M.', '7:30 P.M.'),\n    'choir concert': ('7:15 P.M.', '8:00 P.M.')\n}\n\n# Identify the event that ends at 4:50 P.M.\nevent_ends_at_450 = [event for event, times in events.items() if times[1] == '4:50 P.M.']\nanswer = event_ends_at_450[0] if event_ends_at_450 else None\n", "prediction": "student government meeting\n"}
{"context": "Read the following table regarding \"Straight-A students\" and then answer a question.\n\nYear | Students\n2017 | 13\n2018 | 5\n2019 | 10\n2020 | 13\n2021 | 21", "question": "A school administrator who was concerned about grade inflation looked over the number of straight-A students from year to year. According to the table, what was the rate of change between 2019 and 2020?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of straight-A students for the years 2019 and 2020\nstudents_2019 = 10\nstudents_2020 = 13\n\n# Rate of change calculation\nrate_of_change = students_2020 - students_2019\nanswer = rate_of_change\n", "prediction": "3\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n11 | 9\n12 | 6\n13 | 3", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "linear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the differences in y-values for constant x differences.\nx_values = [11, 12, 13]\ny_values = [9, 6, 3]\n\n# Calculate the differences in y-values\ny_differences = [y_values[i+1] - y_values[i] for i in range(len(y_values) - 1)]\n\n# Calculate the differences in x-values (constant in this case)\nx_difference = x_values[1] - x_values[0]  # This is 1 for all pairs\n\n# Check if the differences in y-values are constant\nis_linear = all(y == y_differences[0] for y in y_differences)\n\nanswer = 'linear' if is_linear else 'nonlinear'\n", "prediction": "NameError(\"name 'y_values' is not defined\")"}
{"context": "Read the following table regarding \"Distribution of plant types\" and then answer a question.\n\nType | Number of plants\nBiennials | 38\nAnnuals | 47\nPerennials | 52", "question": "A plant nursery in Oxford keeps records of how many of its plants are annuals, biennials, and perennials. What fraction of the plants are annuals? Simplify your answer.", "answer": "47/137", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total number of plants\nbiennials = 38\nannuals = 47\nperennials = 52\n\ntotal_plants = biennials + annuals + perennials\n\n# Calculate the fraction of plants that are annuals\nfraction_annuals = annuals / total_plants\n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_fraction = Fraction(annuals, total_plants).limit_denominator()\nanswer = simplified_fraction\n", "prediction": "47/137\n"}
{"context": "Read the following table regarding \"Convenience store beverage sales\" and then answer a question.\n\nBeverage | Friday | Saturday\nKrazy Kola | $7 | $2\nKickin' Coffee | $10 | $16\nFizzy Fun | $15 | $6", "question": "Kathleen, an employee at McCarthy's Convenience Store, looked at the sales of each of its soda products. How much did the convenience store make from Krazy Kola sales on Saturday?", "answer": "2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Sales of Krazy Kola on Saturday\nkrazy_kola_sales_saturday = 2 \n# To find the total revenue, we need to consider the number of sales. \n# Since the problem doesn't specify, we assume the value given is the total revenue from sales.\nanswer = krazy_kola_sales_saturday\n", "prediction": "2\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nraspberry jam | $4/lb\nblueberry jam | $4/lb\nblackberry jam | $8/lb\nmarmalade | $4/lb", "question": "Aiden went to the store and bought 2+1/2 pounds of marmalade. How much did he spend?", "answer": "10", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_marmalade = 4  # price of marmalade\npounds_bought = 2 + 1/2  # 2 and 1/2 pounds\n# Calculate total cost\ntotal_cost = price_per_pound_marmalade * pounds_bought\nanswer = total_cost\n", "prediction": "10.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of shelves | Number of purple crayons\n1 | 2\n2 | 4\n3 | 6\n4 | ?", "question": "Each shelf has 2 purple crayons. How many purple crayons are on 4 shelves?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nshelves = 4 \ncrayons_per_shelf = 2 \n# Calculate the total number of purple crayons\ntotal_crayons = shelves * crayons_per_shelf\nanswer = total_crayons\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"High school attendance\" and then answer a question.\n\nSchool | Number of students\nTruman High | 776\nOak High | 764\nHillcrest High | 746\nWatson High | 747", "question": "A city's school board compared how many students attend each high school. Which school has the most students? Choose from the the options: ['Truman High', 'Oak High', 'Hillcrest High', 'Watson High']", "answer": "Truman High", "ques_type": "multi_choice", "choices": ["Truman High", "Oak High", "Hillcrest High", "Watson High"], "code": "# Python code, return answer \nschools = {\n    'Truman High': 776,\n    'Oak High': 764,\n    'Hillcrest High': 746,\n    'Watson High': 747\n}\n# Find the school with the most students\nmost_students_school = max(schools, key=schools.get)\nanswer = most_students_school\n", "prediction": "Truman High\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n4 | 20\n5 | 11\n6 | 2", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "linear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the differences in y-values for equal differences in x-values.\nx_values = [4, 5, 6]\ny_values = [20, 11, 2]\n\n# Calculate the differences\ndifference_x = [x_values[i+1] - x_values[i] for i in range(len(x_values)-1)]\ndifference_y = [y_values[i+1] - y_values[i] for i in range(len(y_values)-1)]\n\n# Calculate slopes between points\nslopes = [difference_y[i] / difference_x[i] for i in range(len(difference_x))]\n\n# Check if all slopes are the same\nif len(set(slopes)) == 1:\n    answer = 'linear'\nelse:\n    answer = 'nonlinear'\n\n", "prediction": "NameError(\"name 'x_values' is not defined\")"}
{"context": "Read the following table regarding \"Hours worked\" and then answer a question.\n\nDay | Hours\nThursday | 10\nFriday | 10\nSaturday | 6\nSunday | 6\nMonday | 8", "question": "A waitress kept track of how many hours she worked each day. What is the mean of the numbers?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Hours worked each day\nhours_worked = [10, 10, 6, 6, 8]\n# Calculate the mean\nmean_hours = sum(hours_worked) / len(hours_worked)\nanswer = mean_hours\n", "prediction": "8.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nboa constrictor | $1,483.00\nalpaca | $3,992.00\npython | $5,924.00\nllama | $2,255.00", "question": "Krysta has $5,311.00. Does she have enough to buy a boa constrictor and an alpaca? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \nprice_boa_constrictor = 1483.00\nprice_alpaca = 3992.00\ntotal_cost = price_boa_constrictor + price_alpaca\nkrysta_money = 5311.00\n\n# Determine if Krysta has enough money\nif krysta_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"Athletes per country\" and then answer a question.\n\nStem | Leaf \n4 | 3, 9\n5 | 4, 7\n6 | 2, 3, 4, 4, 4, 9\n7 | 1, 1, 3, 5\n8 | \n9 | 0", "question": "While doing a project for P. E. class, Kendra researched the number of athletes competing in an international sporting event. How many countries have exactly 64 athletes?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# In the stem-and-leaf display, the stem '6' corresponds to values in the 60s.\n# The leaf '4' corresponds to 64 athletes.\n# We can see from the stem \"6\" and leaf \"4\" that there is exactly one occurrence of 64.\ncountries_with_64_athletes = 1  # There is one country with exactly 64 athletes.\nanswer = countries_with_64_athletes\n", "prediction": "1\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of shelves | Number of history books\n1 | 2\n2 | 4\n3 | 6\n4 | 8\n5 | 10\n6 | ?", "question": "Each shelf has 2 history books. How many history books are on 6 shelves?", "answer": "12", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nshelves = 6\nbooks_per_shelf = 2\n# Calculate the total number of history books on 6 shelves\ntotal_history_books = shelves * books_per_shelf\nanswer = total_history_books\n", "prediction": "12\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of bunches | Number of balloons\n1 | 5\n2 | 10\n3 | 15\n4 | ?", "question": "Each bunch has 5 balloons. How many balloons are in 4 bunches?", "answer": "20", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nbunches = 4 \nballoons_per_bunch = 5 \n# Calculate the total number of balloons in 4 bunches\ntotal_balloons = bunches * balloons_per_bunch\nanswer = total_balloons\n", "prediction": "20\n"}
{"context": "Read the following table regarding \"Eating bananas last week\" and then answer a question.\n\nBananas eaten | Frequency\n0 | 13\n1 | 3\n2 | 10\n3 | 6\n4 | 11", "question": "A chef kept track of the number of bananas people ate last week in her cafeteria. How many people ate at least 2 bananas last week?", "answer": "27", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of people eating 0, 1, 2, 3, and 4 bananas\nfrequency = {\n    0: 13,\n    1: 3,\n    2: 10,\n    3: 6,\n    4: 11\n}\n\n# Calculate the number of people who ate at least 2 bananas\npeople_at_least_2 = frequency[2] + frequency[3] + frequency[4]\nanswer = people_at_least_2\n", "prediction": "27\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of tables | Number of notepads\n1 | 10\n2 | 20\n3 | 30\n4 | 40\n5 | 50\n6 | ?", "question": "Each table has 10 notepads. How many notepads are on 6 tables?", "answer": "60", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ntables = 6\nnotepads_per_table = 10\n# Calculate the total number of notepads for 6 tables\ntotal_notepads = tables * notepads_per_table\nanswer = total_notepads\n", "prediction": "60\n"}
{"context": "Read the following table regarding \"Making candy necklaces\" and then answer a question.\n\nCandy necklaces made | Frequency\n0 | 1\n1 | 3\n2 | 19\n3 | 2", "question": "While working as a summer camp counselor, Cole monitored how many candy necklaces each child made. How many children did not make any candy necklaces?", "answer": "1", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of children who made 0 candy necklaces\nchildren_no_necklaces = 1\nanswer = children_no_necklaces\n", "prediction": "1\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nwhite polo shirt | $9.00\nred hat | $6.00\nwhite T-shirt | $5.00\nblue shirt | $2.00\nstriped scarf | $9.00\npair of shorts | $8.00", "question": "How much money does Ruben need to buy a white polo shirt and a white T-shirt?", "answer": "14", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_white_polo_shirt = 9.00\nprice_white_tshirt = 5.00\n# Total cost for Ruben\ntotal_cost = price_white_polo_shirt + price_white_tshirt\nanswer = total_cost\n", "prediction": "14.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nsize 4 screws | $4/kilogram\nsize 6 screws | $4/kilogram\nsize 5 screws | $4/kilogram\nsize 1 screws | $3/kilogram\nsize 3 screws | $3/kilogram", "question": "Mariana purchased 3/10 of a kilogram of size 1 screws. What was the total cost?", "answer": "0.90", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_kilogram_size_1 = 3  # Price for size 1 screws\nkilograms_purchased = 3/10  # Fraction of a kilogram purchased\n# Calculate total cost\ntotal_cost = price_per_kilogram_size_1 * kilograms_purchased\nanswer = total_cost\n", "prediction": "0.8999999999999999\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npackage of oatmeal cookies | $4.63\nfrozen pizza | $5.33\nbag of flour | $2.68\nbag of walnuts | $2.81", "question": "How much money does Quinn need to buy a package of oatmeal cookies and 4 bags of walnuts?", "answer": "15.87", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_oatmeal_cookies = 4.63 \nprice_walnuts = 2.81 \nnumber_of_walnut_bags = 4 \n\n# Total cost calculation\ntotal_cost = price_oatmeal_cookies + (price_walnuts * number_of_walnut_bags)\nanswer = total_cost\n", "prediction": "15.870000000000001\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nlow-fat yogurt | $3.39 per pound\nblueberry yogurt | $2.31 per pound\nnon-fat yogurt | $2.15 per pound\nstrawberry yogurt | $3.50 per pound\nraspberry yogurt | $3.20 per pound", "question": "If Luther buys 1 pound of raspberry yogurt and 1 pound of low-fat yogurt, how much will he spend?", "answer": "6.59", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_raspberry_yogurt = 3.20 \nprice_per_pound_low_fat_yogurt = 3.39 \n# Total cost for 1 pound of each yogurt\ntotal_cost = price_per_pound_raspberry_yogurt + price_per_pound_low_fat_yogurt\nanswer = total_cost\n", "prediction": "6.59\n"}
{"context": "Read the following table regarding \"Boxes of Girl Scout cookies sold\" and then answer a question.\n\nDay | Boxes of cookies\nMonday | 38\nTuesday | 41\nWednesday | 38\nThursday | 34\nFriday | 36", "question": "A Girl Scout troop recorded how many boxes of cookies they sold each day for a week. According to the table, what was the rate of change between Wednesday and Thursday?", "answer": "-4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Boxes sold on Wednesday and Thursday\nboxes_wednesday = 38\nboxes_thursday = 34\n\n# Calculate the rate of change\nrate_of_change = boxes_thursday - boxes_wednesday\nanswer = rate_of_change\n", "prediction": "-4\n"}
{"context": "Read the following table regarding \"Participants per race\" and then answer a question.\n\nStem | Leaf \n2 | 9\n3 | 4, 8\n4 | 2, 5, 6\n5 | 9\n6 | 5, 8\n7 | 1, 4, 7\n8 | 0, 3, 7", "question": "A volunteer for the local running club counted the number of participants at each race. How many races had at least 30 participants but fewer than 60 participants?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Extracting the number of participants from the stem-and-leaf display\nparticipants = [\n    29,    # From stem 2 | leaf 9\n    34, 38, # From stem 3 | leaves 4, 8\n    42, 45, 46, # From stem 4 | leaves 2, 5, 6\n    59,    # From stem 5 | leaf 9\n    65, 68, # From stem 6 | leaves 5, 8\n    71, 74, 77, # From stem 7 | leaves 1, 4, 7\n    80, 83, 87  # From stem 8 | leaves 0, 3, 7\n]\n\n# Counting the number of races with at least 30 and fewer than 60 participants\ncount_races = sum(1 for p in participants if 30 <= p < 60)\nanswer = count_races\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | Under age 12 | 13 to 30 years old\nTennis shoes | 4 | 5\nHigh heels | 3 | 7", "question": "Robert entered his sister into their town's Smelly Shoe Competition. Robert observed contestants of all ages proudly strutting around wearing different kinds of smelly shoes. What is the probability that a randomly selected contestant is wearing high heels and is under age 12? Simplify any fractions.", "answer": "3/19", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of contestants wearing high heels under age 12\nhigh_heels_under_12 = 3 \n# Total number of contestants\ntotal_contestants = 4 + 5 + 3 + 7 \n\n# Calculate the probability\nprobability_high_heels_under_12 = high_heels_under_12 / total_contestants\n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(high_heels_under_12, total_contestants).limit_denominator()\nanswer = simplified_probability\n", "prediction": "3/19\n"}
{"context": "Read the following table regarding \"Books read\" and then answer a question.\n\nName | Number of books\nJeanette | 30\nShivani | 49\nMartha | 35\nPaula | 41\nCara | 35\nLarry | 49\nNatalie | 36\nAlexandra | 42", "question": "Jeanette's classmates recorded how many books they read last year. What is the range of the numbers?", "answer": "19", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of books read by each student\nbooks_read = [30, 49, 35, 41, 35, 49, 36, 42]\n\n# Calculate the range\nrange_books = max(books_read) - min(books_read)\nanswer = range_books\n", "prediction": "19\n"}
{"context": "Read the following table regarding \"Cherries sold\" and then answer a question.\n\nDay | Kilograms\nSunday | 201\nMonday | 101\nTuesday | 844\nWednesday | 305", "question": "A farmer wrote down how many kilograms of cherries were sold in the past 4 days. How many more kilograms of cherries were sold on Tuesday than on Monday?", "answer": "743", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Cherries sold on each day\ncherries_monday = 101\ncherries_tuesday = 844\n# Calculate the difference\ndifference = cherries_tuesday - cherries_monday\nanswer = difference\n", "prediction": "743\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nmagazine | $4.65\nmap of the world | $9.65\nbook of piano music | $7.76\nmath book | $8.03\nbook of crossword puzzles | $2.55\nmap of Canada | $6.27", "question": "How much money does Gabe need to buy 7 books of crossword puzzles and 6 books of piano music?", "answer": "64.41", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices\nprice_crossword_puzzle = 2.55 \nprice_piano_music = 7.76 \n# Quantities\nquantity_crossword_puzzles = 7 \nquantity_piano_music = 6 \n# Total cost calculation\ntotal_cost = (price_crossword_puzzle * quantity_crossword_puzzles) + (price_piano_music * quantity_piano_music)\nanswer = total_cost\n", "prediction": "64.41\n"}
{"context": "Read the following table regarding \"Selling cookies\" and then answer a question.\n\nBoxes sold | Frequency\n1 | 3\n2 | 2\n3 | 6\n4 | 0\n5 | 20", "question": "A parent volunteer counted the number of boxes sold by each student participating in the cookie fundraiser. How many students sold at least 4 boxes of cookies?", "answer": "20", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of students selling at least 4 boxes\nstudents_sold_4_boxes = 0  # No students sold exactly 4 boxes\nstudents_sold_5_boxes = 20  # Students sold 5 boxes\ntotal_students = students_sold_4_boxes + students_sold_5_boxes\nanswer = total_students\n", "prediction": "20\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | Social worker | Doctor\nFear of snakes | 8 | 2\nFear of heights | 3 | 5", "question": "A college professor asked her Psychology students to complete a personality test. She paid special attention to her students' career goals and their greatest fears. What is the probability that a randomly selected student has a fear of heights and wants to be a social worker? Simplify any fractions.", "answer": "1/6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of students with fears\nfear_of_heights_social_worker = 3\n# Total number of students surveyed\ntotal_students = 8 + 2 + 3 + 5\n\n# Calculate the probability\nprobability_fear_heights_social_worker = fear_of_heights_social_worker / total_students\n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(fear_of_heights_social_worker, total_students).limit_denominator()\nanswer = simplified_probability\n", "prediction": "1/6\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nEmployee | Pay period |\nCarly Faber | March 18-24 |\nTotal earnings | | $427.00\nFederal income tax | $47.50 |\nOther taxes | $32.67 |\nTotal taxes | | ?\nPay after taxes | | ?", "question": "Look at Carly's pay stub. Carly lives in a state without state income tax. How much payroll tax did Carly pay in total?", "answer": "80.17", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Given values for federal income tax and other taxes\nfederal_income_tax = 47.50\nother_taxes = 32.67\n\n# Calculate total taxes\ntotal_taxes = federal_income_tax + other_taxes\nanswer = total_taxes\n", "prediction": "80.17\n"}
{"context": "Read the following table regarding \"Vacation days taken by Mandy\" and then answer a question.\n\nYear | Vacation days\n2015 | 16\n2016 | 18\n2017 | 26\n2018 | 31\n2019 | 11", "question": "To figure out how many vacation days she had left to use, Mandy looked over her old calendars to figure out how many days of vacation she had taken each year. According to the table, what was the rate of change between 2016 and 2017?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nvacation_days_2016 = 18\nvacation_days_2017 = 26\n\n# Calculate the rate of change\nrate_of_change = vacation_days_2017 - vacation_days_2016\nanswer = rate_of_change\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"Train schedule\" and then answer a question.\n\nLocation | Arrive | Depart\nPrinceton | 2:25 A.M. | 2:45 A.M.\nWestminster | 3:15 A.M. | 3:30 A.M.\nNewberg | 5:00 A.M. | 5:30 A.M.\nBelleville | 6:15 A.M. | 6:25 A.M.\nStamford | 7:30 A.M. | 7:55 A.M.\nOakland | 9:35 A.M. | 10:00 A.M.\nSalem | 11:30 A.M. | 12:00 P.M.\nOakdale | 1:00 P.M. | 1:15 P.M.\nLakeside | 2:30 P.M. | 2:45 P.M.", "question": "Look at the following schedule. Which stop does the train depart from at 2.45 A.M.? Choose from the the options: ['Newberg', 'Lakeside', 'Princeton', 'Oakland']", "answer": "Princeton", "ques_type": "multi_choice", "choices": ["Newberg", "Lakeside", "Princeton", "Oakland"], "code": "# Python code, return answer \n# The train departs from Princeton at 2:45 A.M.\ndepart_time_princeton = \"2:45 A.M.\"\nanswer = \"Princeton\"\n", "prediction": "Princeton\n"}
{"context": "Read the following table regarding \"Josie's yearly finances\" and then answer a question.\n\nEarnings from job at the ice skating rink | $19,760\nEarnings from job at the amusement park | $21,091\nIncome tax and other payroll taxes | $6,873", "question": "Josie has two part-time jobs. She works at the ice skating rink in the fall and winter, and she works at the amusement park during the spring and summer. Here are her yearly finances. What is Josie's gross income for the year?", "answer": "40,851", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Earnings from both jobs\nearnings_ice_skating_rink = 19760\nearnings_amusement_park = 21091\n# Calculate gross income\ngross_income = earnings_ice_skating_rink + earnings_amusement_park\nanswer = gross_income\n", "prediction": "40851\n"}
{"context": "Read the following table regarding \"Making picture frames\" and then answer a question.\n\nPicture frames made | Frequency\n0 | 0\n1 | 2\n2 | 11\n3 | 7", "question": "The shop teacher, Mr. Suzuki, wrote down how many picture frames the students made last week. How many students made more than 1 picture frame?", "answer": "18", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of students making more than 1 picture frame\nstudents_made_2 = 11  # Students who made 2 frames\nstudents_made_3 = 7   # Students who made 3 frames\n# Total students who made more than 1 picture frame\nstudents_more_than_1 = students_made_2 + students_made_3\nanswer = students_more_than_1\n", "prediction": "18\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n18 | 0\n19 | 10\n20 | 20", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "linear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the differences in y-values for equal differences in x-values.\ny_values = [0, 10, 20]\nx_values = [18, 19, 20]\n\n# Calculate the differences\ndifferences = [y_values[i+1] - y_values[i] for i in range(len(y_values)-1)]\n# If the differences are constant, it's linear; otherwise, it's nonlinear.\nis_linear = all(diff == differences[0] for diff in differences)\n\nanswer = 'linear' if is_linear else 'nonlinear'\n", "prediction": "NameError(\"name 'y_values' is not defined\")"}
{"context": "Read the following table regarding \"Balloons sold\" and then answer a question.\n\nDay | Number of balloons\nSaturday | 4\nSunday | 3\nMonday | 4\nTuesday | 5\nWednesday | 5\nThursday | 5", "question": "The manager of a party supply store researched how many balloons it sold in the past 6 days. What is the mode of the numbers?", "answer": "5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nfrom statistics import mode\n\n# Number of balloons sold each day\nballoons_sold = [4, 3, 4, 5, 5, 5]\n\n# Calculate the mode\nanswer = mode(balloons_sold)\n", "prediction": "5\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbright yellow highlighter | $0.29\nthick black marker | $0.72\nthin green highlighter | $0.14\nsmall box of paper clips | $0.25\nthin blue marker | $0.77", "question": "Reggie has $0.50. Does he have enough to buy a thin green highlighter and a small box of paper clips? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# Prices of the items\nprice_thin_green_highlighter = 0.14\nprice_small_box_of_paper_clips = 0.25\n\n# Total cost of items\ntotal_cost = price_thin_green_highlighter + price_small_box_of_paper_clips\n\n# Amount of money Reggie has\nreggie_money = 0.50\n\n# Determine if he has enough money\nif reggie_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nsesame seeds | $4.65 per lb\npumpkin seeds | $3.95 per lb\nsoybeans | $1.40 per lb\nlentils | $1.08 per lb", "question": "How much would it cost to buy 5 pounds of soybeans?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_soybeans = 1.40 \npounds_bought = 5 \n# Calculate the total cost\ntotal_cost = price_per_pound_soybeans * pounds_bought\nanswer = total_cost\n", "prediction": "7.0\n"}
{"context": "Read the following table regarding \"Lemon-flavored candies per bag\" and then answer a question.\n\nStem | Leaf \n1 | 2, 7\n2 | 4\n3 | 2, 3, 7\n4 | 3, 4, 5, 5, 6\n5 | 2\n6 | 9\n7 | 3, 9\n8 | 4, 4, 9\n9 | 0", "question": "A machine at the candy factory dispensed different numbers of lemon-flavored candies into various bags. How many bags had at least 54 lemon-flavored candies?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The leaf values correspond to the stem in the stem-and-leaf display.\n# We will count the number of bags with at least 54 candies.\nbags_with_candies = [12, 17, 24, 32, 33, 37, 43, 44, 45, 45, 46, 52, 69, 73, 79, 84, 84, 89, 90]  # All values derived from the stem-and-leaf display.\n\n# Count bags with at least 54 candies\nbags_at_least_54 = [bag for bag in bags_with_candies if bag >= 54]\nanswer = len(bags_at_least_54)\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$205 | 19,200 | 4,300\n$385 | 14,800 | 7,000\n$565 | 10,400 | 9,700\n$745 | 6,000 | 12,400\n$925 | 1,600 | 15,100", "question": "Look at the table. Then answer the question. At a price of $385, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "shortage", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \n# Given values at the price of $385\nquantity_demanded = 14800\nquantity_supplied = 7000\n\n# Determine if there is a shortage or surplus\nif quantity_demanded > quantity_supplied:\n    answer = 'shortage'\nelse:\n    answer = 'surplus'\n\n", "prediction": "shortage\n"}
{"context": "Read the following table regarding \"Words per page\" and then answer a question.\n\nStem | Leaf \n6 | 5, 6, 9\n7 | 1, 2, 4, 9\n8 | 3, 3, 4, 8, 8\n9 | 0", "question": "Riley counted the number of words per page in her new book. What is the smallest number of words?", "answer": "65", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The smallest number of words corresponds to the smallest value in the stem-and-leaf display.\nsmallest_words_count = 65  # From the stem \"6 | 5\", the value is 65 words.\nanswer = smallest_words_count\n", "prediction": "65\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nblue beads | $2/kg\nyellow beads | $3/kg\ngreen beads | $3/kg\nred beads | $3/kg", "question": "If Wesley buys 3 kilograms of blue beads, how much will he spend?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_kilogram_blue_beads = 2  # in dollars\nkilograms_bought = 3 \n# Calculate total cost\nanswer = price_per_kilogram_blue_beads * kilograms_bought\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"Computers in classrooms\" and then answer a question.\n\nTeacher | Number of computers\nMrs. Rossi | 18\nMr. Watson | 19\nMrs. Tan | 11\nMs. Cohen | 17", "question": "The teachers at a middle school counted how many computers they had in their classrooms. Which teacher has the most computers? Choose from the the options: ['Mrs. Rossi', 'Mr. Watson', 'Mrs. Tan', 'Ms. Cohen']", "answer": "Mr. Watson", "ques_type": "multi_choice", "choices": ["Mrs. Rossi", "Mr. Watson", "Mrs. Tan", "Ms. Cohen"], "code": "# Python code, return answer \nteachers_computers = {\n    'Mrs. Rossi': 18,\n    'Mr. Watson': 19,\n    'Mrs. Tan': 11,\n    'Ms. Cohen': 17\n}\n# Find the teacher with the most computers\nmost_computers_teacher = max(teachers_computers, key=teachers_computers.get)\nanswer = most_computers_teacher\n", "prediction": "Mr. Watson\n"}
{"context": "Read the following table regarding \"Mailing letters last week\" and then answer a question.\n\nLetters mailed | Frequency\n0 | 1\n1 | 5\n2 | 16\n3 | 20\n4 | 9", "question": "An office manager counts the number of letters sent by each of her company's employees each week. How many employees mailed at least 3 letters?", "answer": "29", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of employees mailing letters\nfrequency = {\n    0: 1,\n    1: 5,\n    2: 16,\n    3: 20,\n    4: 9\n}\n# Calculate the number of employees who mailed at least 3 letters\nemployees_mailed_at_least_3 = frequency[3] + frequency[4]\nanswer = employees_mailed_at_least_3\n", "prediction": "29\n"}
{"context": "Read the following table regarding \"Temperature at noon\" and then answer a question.\n\nDay | Temperature (\u00c2\u00b0C)\nSunday | 8\nMonday | 8\nTuesday | 7\nWednesday | 7\nThursday | 5\nFriday | 6\nSaturday | 4", "question": "Kaylee graphed the temperature at noon for 7 days. What is the range of the numbers?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ntemperatures = [8, 8, 7, 7, 5, 6, 4]\n# Calculate the range\ntemperature_range = max(temperatures) - min(temperatures)\nanswer = temperature_range\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"Newspapers collected\" and then answer a question.\n\nName | Number of newspapers\nFelipe | 67\nWyatt | 66\nClara | 68\nDalton | 72\nSamuel | 56\nOwen | 56\nTristan | 63", "question": "Felipe's class tracked how many newspapers each student collected for their recycling project. What is the mean of the numbers?", "answer": "64", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of newspapers collected by each student\nnewspapers_collected = [67, 66, 68, 72, 56, 56, 63]\n# Calculate the mean\nmean_newspapers = sum(newspapers_collected) / len(newspapers_collected)\nanswer = mean_newspapers\n", "prediction": "64.0\n"}
{"context": "Read the following table regarding \"Cups of coffee sold\" and then answer a question.\n\nDay | Number of cups\nWednesday | 71\nThursday | 57\nFriday | 69\nSaturday | 59\nSunday | 65\nMonday | 58\nTuesday | 60", "question": "A coffee shop monitored the number of cups of coffee sold each day. What is the median of the numbers?", "answer": "60", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of cups sold each day\ncups_sold = [71, 57, 69, 59, 65, 58, 60]\n\n# Sort the list to find the median\ncups_sold_sorted = sorted(cups_sold)\n\n# Calculate the median\nn = len(cups_sold_sorted)\nif n % 2 == 1:  # Odd number of elements\n    median = cups_sold_sorted[n // 2]\nelse:  # Even number of elements\n    median = (cups_sold_sorted[n // 2 - 1] + cups_sold_sorted[n // 2]) / 2\n\nanswer = median\n", "prediction": "60\n"}
{"context": "Read the following table regarding \"Bridge tolls\" and then answer a question.\n\nBridge | Truck | Car\nFort Madison | $4 | $1\nGolden Gate | $7 | $6\nSan Mateo | $6 | $4\nOakland Bay | $6 | $4", "question": "A transportation analyst compared various bridges' tolls. Which charges more for a car, the Golden Gate bridge or the Oakland Bay bridge? Choose from the the options: ['Golden Gate', 'Oakland Bay']", "answer": "Golden Gate", "ques_type": "multi_choice", "choices": ["Golden Gate", "Oakland Bay"], "code": "# Python code, return answer \ngolden_gate_toll_car = 6 \noakland_bay_toll_car = 4 \n\n# Compare the tolls for cars\nif golden_gate_toll_car > oakland_bay_toll_car:\n    answer = 'Golden Gate'\nelse:\n    answer = 'Oakland Bay'\n", "prediction": "Golden Gate\n"}
{"context": "Read the following table regarding \"Art contest entries\" and then answer a question.\n\nYear | Number of entries\n2009 | 37\n2010 | 42\n2011 | 43\n2012 | 28\n2013 | 33", "question": "Mrs. Newman hosts an annual art contest for kids, and she keeps a record of the number of entries each year. According to the table, what was the rate of change between 2012 and 2013?", "answer": "5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nentries_2012 = 28\nentries_2013 = 33\n# Calculate the rate of change\nrate_of_change = entries_2013 - entries_2012\nanswer = rate_of_change\n", "prediction": "5\n"}
{"context": "Read the following table regarding \"Ties per rack\" and then answer a question.\n\nStem | Leaf \n1 | 4, 7\n2 | 0, 5, 6, 6, 8, 8\n3 | 1, 2\n4 | 5, 6, 9", "question": "The employee at the department store counted the number of ties on each tie rack. How many racks have at least 18 ties but fewer than 46 ties?", "answer": "9", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The ranges from the stem-and-leaf display correspond to the following ties on racks:\n# 14, 17, 20, 25, 26, 26, 28, 28, 31, 32, 45, 46, 49\n\n# Extracting the number of ties from the stem-and-leaf representation:\ntie_counts = [14, 17, 20, 25, 26, 26, 28, 28, 31, 32, 45, 46, 49]\n\n# Filtering racks with ties in the range 18 to 45\nfiltered_racks = [count for count in tie_counts if 18 <= count < 46]\n\n# Counting the number of racks that meet the criteria\nnumber_of_racks = len(filtered_racks)\nanswer = number_of_racks\n", "prediction": "9\n"}
{"context": "Read the following table regarding \"Midterm exam scores\" and then answer a question.\n\nStem | Leaf \n4 | 0, 1, 3, 3, 4, 5, 5, 6, 7, 7\n5 | 1, 2, 4, 6, 6, 7\n6 | 2, 4\n7 | 9", "question": "Professor Gilmore informed his students of their scores on the midterm exam. How many students scored fewer than 80 points?", "answer": "19", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The scores are represented in a stem-and-leaf format.\n# We need to count how many scores are below 80.\n\n# From the stem-and-leaf display:\nscores = [\n    40, 41, 43, 43, 44, 45, 45, 46, 47, 47,  # 40s\n    51, 52, 54, 56, 56, 57,                  # 50s\n    62, 64,                                  # 60s\n    79                                       # 70s\n]\n\n# Count how many scores are below 80\nstudents_below_80 = sum(1 for score in scores if score < 80)\nanswer = students_below_80\n", "prediction": "19\n"}
{"context": "Read the following table regarding \"Phone calls received\" and then answer a question.\n\nDay | Number of calls\nSunday | 434\nMonday | 435\nTuesday | 459\nWednesday | 445", "question": "A technical support line tracked how many calls it received each day. On which day did the support line receive the fewest calls? Choose from the the options: ['Sunday', 'Monday', 'Tuesday', 'Wednesday']", "answer": "Sunday", "ques_type": "multi_choice", "choices": ["Sunday", "Monday", "Tuesday", "Wednesday"], "code": "# Python code, return answer \ncalls_received = {\n    'Sunday': 434,\n    'Monday': 435,\n    'Tuesday': 459,\n    'Wednesday': 445\n}\n# Find the day with the fewest calls\nfewest_calls_day = min(calls_received, key=calls_received.get)\nanswer = fewest_calls_day\n", "prediction": "Sunday\n"}
{"context": "Read the following table regarding \"Sports team membership\" and then answer a question.\n\nTeam | Number of members\nwrestling team | 27\nvolleyball team | 29\ntrack team | 21\nswimming team | 26", "question": "Shane's school reported how many members each sports team had. Which team has the most members? Choose from the the options: ['wrestling team', 'volleyball team', 'track team', 'swimming team']", "answer": "volleyball team", "ques_type": "multi_choice", "choices": ["wrestling team", "volleyball team", "track team", "swimming team"], "code": "# Python code, return answer \nteams = {\n    'wrestling team': 27,\n    'volleyball team': 29,\n    'track team': 21,\n    'swimming team': 26\n}\n# Find the team with the most members\nmost_members_team = max(teams, key=teams.get)\nanswer = most_members_team\n", "prediction": "volleyball team\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n18 | 3\n17 | 9\n14 | 12", "question": "Look at this table. Is this relation a function? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# A relation is a function if each input (x) maps to exactly one output (y).\n# Here, we check the unique x values in the table.\nx_values = [18, 17, 14]\n# Since all x values are unique, the relation is a function.\nis_function = len(x_values) == len(set(x_values))\n\nif is_function:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npair of designer shoes | $7,759.00\ndesigner coat | $5,950.00\ndesigner handbag | $8,180.00\ndesigner ball gown | $8,585.00\ndesigner watch | $3,232.00\npair of designer boots | $5,839.00", "question": "Ava has $13,906.00. Does she have enough to buy a designer handbag and a designer coat? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# Prices of the items\nprice_handbag = 8180.00\nprice_coat = 5950.00\n# Total cost for both items\ntotal_cost = price_handbag + price_coat\n# Ava's budget\nava_budget = 13906.00\n# Determine if Ava has enough money\nif ava_budget >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ngingersnap cookie dough | $8/pound\nsnickerdoodle cookie dough | $4/pound\ndouble chocolate cookie dough | $8/pound\noatmeal raisin cookie dough | $6/pound\npeanut butter cookie dough | $8/pound\nchocolate chip cookie dough | $7/pound", "question": "Emilia went to the store and bought 5 pounds of gingersnap cookie dough, 4 pounds of snickerdoodle cookie dough, and 2 pounds of chocolate chip cookie dough. How much did she spend?", "answer": "70", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices per pound\nprice_gingersnap = 8 \nprice_snickerdoodle = 4 \nprice_chocolate_chip = 7 \n\n# Pounds bought\npounds_gingersnap = 5 \npounds_snickerdoodle = 4 \npounds_chocolate_chip = 2 \n\n# Total cost calculation\ntotal_cost = (price_gingersnap * pounds_gingersnap +\n               price_snickerdoodle * pounds_snickerdoodle +\n               price_chocolate_chip * pounds_chocolate_chip)\n\nanswer = total_cost\n", "prediction": "70\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nmountain bike | $633\nwetsuit | $282\npair of skis | $648\nsurfboard | $783\nset of golf clubs | $332", "question": "How much more does a pair of skis cost than a set of golf clubs?", "answer": "316", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_pair_of_skis = 648\ncost_set_of_golf_clubs = 332\n# Calculate the difference in cost\ndifference_in_cost = cost_pair_of_skis - cost_set_of_golf_clubs\nanswer = difference_in_cost\n", "prediction": "316\n"}
{"context": "Read the following table regarding \"Comic strips read\" and then answer a question.\n\nDay | Number of comic strips\nSaturday | 5\nSunday | 1\nMonday | 8\nTuesday | 2\nWednesday | 3\nThursday | 7\nFriday | 2", "question": "Daniel paid attention to how many comic strips he read in the past 7 days. What is the mean of the numbers?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of comic strips read each day\ncomic_strips = [5, 1, 8, 2, 3, 7, 2]\n\n# Calculate the mean\nmean_comic_strips = sum(comic_strips) / len(comic_strips)\nanswer = mean_comic_strips\n", "prediction": "4.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nblueberry pancakes | $8.62\nbuttermilk pancakes | $7.24\npoached eggs | $3.49\npoppyseed muffin | $1.08", "question": "How much money does Nina need to buy 2 orders of buttermilk pancakes?", "answer": "14.48", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_order_buttermilk_pancakes = 7.24 \norders_needed = 2 \ntotal_cost = price_per_order_buttermilk_pancakes * orders_needed\nanswer = total_cost\n", "prediction": "14.48\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nticket for a South American cruise | $251.00\nticket for an Australian cruise | $257.00\nticket for a Caribbean cruise | $988.00\nticket for an Alaskan cruise | $627.00", "question": "How much money does Gabby need to buy 5 tickets for a Caribbean cruise?", "answer": "4,940", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_ticket_caribbean = 988.00 \nnumber_of_tickets = 5 \n# Calculate total cost for 5 tickets\ntotal_cost = price_per_ticket_caribbean * number_of_tickets\nanswer = total_cost\n", "prediction": "4940.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | Red beard | Grey beard\nOnly in the beard competition | 5 | 3\nAlso in the mustache competition | 5 | 2", "question": "Jennifer was the lucky journalist assigned to cover the Best Beard Competition. She recorded the contestants' beard colors in her notepad. Jennifer also noted if the contestants were signed up for the mustache competition later in the day. What is the probability that a randomly selected contestant is also in the mustache competition and has a red beard? Simplify any fractions.", "answer": "1/3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Contestants with red beards\nonly_red_beard = 5  # Only in the beard competition\nred_beard_mustache = 5  # Also in the mustache competition\n\n# Total contestants with red beards\ntotal_red_beard = only_red_beard + red_beard_mustache\n\n# Total contestants\ntotal_grey_beard = 3 + 2  # Grey beard\ntotal_contestants = total_red_beard + total_grey_beard\n\n# Probability that a randomly selected contestant is in the mustache competition and has a red beard\nprobability_red_mustache = red_beard_mustache / total_contestants\n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(red_beard_mustache, total_contestants).limit_denominator()\nanswer = simplified_probability\n", "prediction": "1/3\n"}
{"context": "Read the following table regarding \"Hotel shuttle bus schedule\" and then answer a question.\n\npark | 8:00 A.M. | 8:15 A.M. | 8:45 A.M. | 9:15 A.M. | 9:30 A.M.\nhotel | 8:30 A.M. | 8:45 A.M. | 9:15 A.M. | 9:45 A.M. | 10:00 A.M.\nbaseball stadium | 9:15 A.M. | 9:30 A.M. | 10:00 A.M. | 10:30 A.M. | 10:45 A.M.\ndowntown | 10:00 A.M. | 10:15 A.M. | 10:45 A.M. | 11:15 A.M. | 11:30 A.M.\nairport | 10:45 A.M. | 11:00 A.M. | 11:30 A.M. | 12:00 P.M. | 12:15 P.M.\nfootball stadium | 11:45 A.M. | 12:00 P.M. | 12:30 P.M. | 1:00 P.M. | 1:15 P.M.\nart museum | 12:45 P.M. | 1:00 P.M. | 1:30 P.M. | 2:00 P.M. | 2:15 P.M.\nsoftball field | 1:45 P.M. | 2:00 P.M. | 2:30 P.M. | 3:00 P.M. | 3:15 P.M.", "question": "Look at the following schedule. Jake got on the bus at the hotel at 8.45 A.M. What time will he get to the baseball stadium? Choose from the the options: ['9:15 A.M.', '1:00 P.M.', '11:00 A.M.', '9:30 A.M.']", "answer": "9:30 A.M.", "ques_type": "multi_choice", "choices": ["9:15 A.M.", "1:00 P.M.", "11:00 A.M.", "9:30 A.M."], "code": "# Python code, return answer \n# Jake gets on the bus at 8:45 A.M. at the hotel. \n# The next bus to the baseball stadium leaves from the hotel at 9:15 A.M.\n\n# The bus schedule shows:\n# From hotel to baseball stadium:\n# - 9:15 A.M. -> 9:30 A.M.\n\n# Therefore, if he gets on the bus at 9:15 A.M., he will arrive at 9:30 A.M.\nanswer = '9:30 A.M.'\n", "prediction": "9:30 A.M.\n"}
{"context": "Read the following table regarding \"Toys per bin\" and then answer a question.\n\nStem | Leaf \n2 | 2\n3 | 0, 1, 7\n4 | 0, 3, 4, 4, 5, 6, 9\n5 | \n6 | 0, 7\n7 | 0, 1, 2, 2, 4, 7\n8 | 0, 0, 6, 8, 8", "question": "A toy store employee counted the number of toys in each bin in the sale section. What is the largest number of toys?", "answer": "88", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest number of toys corresponds to the largest value in the stem-and-leaf display.\nlargest_number_of_toys = 88  # From the stem \"8 | 0, 0, 6, 8, 8\", the highest value is 88.\nanswer = largest_number_of_toys\n", "prediction": "88\n"}
{"context": "Read the following table regarding \"Sticker collections\" and then answer a question.\n\nName | Number of stickers\nDiego | 74\nTammy | 66\nNellie | 72\nWanda | 71\nZane | 69\nJared | 71\nAlexa | 69\nVicky | 68", "question": "Some friends compared the sizes of their sticker collections. What is the mean of the numbers?", "answer": "70", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nstickers = [74, 66, 72, 71, 69, 71, 69, 68]\n# Calculate the mean\nmean_stickers = sum(stickers) / len(stickers)\nanswer = mean_stickers\n", "prediction": "70.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$275 | 19,400 | 6,800\n$395 | 16,400 | 9,400\n$515 | 13,400 | 12,000\n$635 | 10,400 | 14,600\n$755 | 7,400 | 17,200", "question": "Look at the table. Then answer the question. At a price of $635, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "surplus", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \n# Given values at a price of $635\nquantity_demanded = 10400\nquantity_supplied = 14600\n\n# Determine if there is a shortage or surplus\nif quantity_demanded < quantity_supplied:\n    answer = 'surplus'\nelse:\n    answer = 'shortage'\n\n", "prediction": "surplus\n"}
{"context": "Read the following table regarding \"Toy cars\" and then answer a question.\n\nNumber of toy cars | Frequency\n0 | 15\n1 | 5\n2 | 17\n3 | 6\n4 | 19\n5 | 2\n6 | 18", "question": "In order to complete their model of a futuristic highway, students in Ms. Frank's design class find out how many toy cars each student can bring to class. How many students have more than 1 toy car?", "answer": "62", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of students with more than 1 toy car\nfrequency = {\n    0: 15,\n    1: 5,\n    2: 17,\n    3: 6,\n    4: 19,\n    5: 2,\n    6: 18\n}\n\n# Calculate students with more than 1 toy car\nstudents_with_more_than_one = sum(frequency[cars] for cars in frequency if cars > 1)\nanswer = students_with_more_than_one\n", "prediction": "NameError(\"name 'frequency' is not defined\")"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n4 | 2\n5 | 11\n6 | 20", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "linear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear or nonlinear, we can check the differences in y-values for equal increments of x.\n# Calculate the differences in y-values\ny_diff_1 = 11 - 2  # From x=4 to x=5\ny_diff_2 = 20 - 11  # From x=5 to x=6\n\n# If the differences in y-values are not constant, the function is nonlinear\nif y_diff_1 != y_diff_2:\n    answer = 'nonlinear'\nelse:\n    answer = 'linear'\n\n", "prediction": "linear\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbulldozer | $7,552.00\ncrane | $8,867.00\nrace car | $8,769.00\nhydrofoil | $8,345.00", "question": "How much more does a crane cost than a hydrofoil?", "answer": "522", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_crane = 8867.00 \ncost_hydrofoil = 8345.00 \n# Calculate the difference in cost\ndifference_cost = cost_crane - cost_hydrofoil\nanswer = difference_cost\n", "prediction": "522.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | 50 photos | 100 photos\nHorizontally | 2 | 4\nVertically | 4 | 3", "question": "Jeanette just returned from a spring break volunteer trip. She is shopping for a photo album that will showcase her photos from the trip. The albums range in photo capacity and orientation. What is the probability that a randomly selected photo album is oriented vertically and holds exactly 100 photos? Simplify any fractions.", "answer": "3/13", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total number of albums based on the table\ntotal_albums = (2 + 4) + (4 + 3)  # Horizontally and Vertically for both capacities\n# Number of albums oriented vertically that hold exactly 100 photos\nvertically_100_photos = 3\n# Calculate the probability\nprobability = vertically_100_photos / total_albums\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(vertically_100_photos, total_albums).limit_denominator()\nanswer = simplified_probability\n", "prediction": "3/13\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nGem color | Change in points\nGreen | 25\nRed | -40", "question": "Zach just downloaded the new game Gem Excavator on his phone. In the first level, Zach gains points for each green gem he finds. However, he loses points for each red gem he finds. The table shows how the gems affect Zach's points. Which color gem affects Zach's points less? Choose from the the options: ['green', 'red']", "answer": "green", "ques_type": "multi_choice", "choices": ["green", "red"], "code": "# Python code, return answer \nchange_green = 25\nchange_red = -40\n# Compare the absolute changes in points\nif abs(change_green) < abs(change_red):\n    answer = 'green'\nelse:\n    answer = 'red'\n", "prediction": "green\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nMonth | Change in water level (in.)\nApril | -6\nMay | 4", "question": "The houses in Myra's town get their water from a local reservoir. Myra and a group of engineers monitor the water level for safety and health reasons. The change in water level over two months is shown in the table. During which month did the water level change more? Choose from the the options: ['April', 'May']", "answer": "April", "ques_type": "multi_choice", "choices": ["April", "May"], "code": "# Python code, return answer \nchange_april = abs(-6)  # Water level decreased by 6 inches\nchange_may = abs(4)     # Water level increased by 4 inches\n\n# Determine which month had a greater change in water level\nif change_april > change_may:\n    answer = 'April'\nelse:\n    answer = 'May'\n", "prediction": "April\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n13 | 1\n14 | 10\n15 | 19", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "linear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the differences in y-values for equal differences in x-values.\ny_values = [1, 10, 19]\nx_values = [13, 14, 15]\n\n# Calculate the differences\ndifference_x = [x_values[i+1] - x_values[i] for i in range(len(x_values)-1)]\ndifference_y = [y_values[i+1] - y_values[i] for i in range(len(y_values)-1)]\n\n# Check if the ratio of change is constant\nis_linear = all(difference_y[i] / difference_x[i] == difference_y[0] / difference_x[0] for i in range(1, len(difference_y)))\n\nanswer = 'linear' if is_linear else 'nonlinear'\n", "prediction": "NameError(\"name 'x_values' is not defined\")"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ncatfish | $3 per kg\nhalibut | $4 per kg\ntuna | $3 per kg\ntilapia | $2 per kg\nsalmon | $3 per kg", "question": "How much would it cost to buy 1 kilogram of tuna and 2 kilograms of catfish?", "answer": "9", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_kg_tuna = 3 \nprice_per_kg_catfish = 3 \nkilograms_tuna = 1 \nkilograms_catfish = 2 \n# Calculate total cost\ntotal_cost = (price_per_kg_tuna * kilograms_tuna) + (price_per_kg_catfish * kilograms_catfish)\nanswer = total_cost\n", "prediction": "9\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$380 | 20,700 | 1,900\n$540 | 16,600 | 6,500\n$700 | 12,500 | 11,100\n$860 | 8,400 | 15,700\n$1,020 | 4,300 | 20,300", "question": "Look at the table. Then answer the question. At a price of $1,020, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "surplus", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \nquantity_demanded = 4300  # at $1,020\nquantity_supplied = 20300  # at $1,020\n\n# Determine if there is a shortage or surplus\nif quantity_demanded < quantity_supplied:\n    answer = 'surplus'\nelse:\n    answer = 'shortage'\n\n", "prediction": "surplus\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ngreen station wagon | $9,657.00\nred sports car | $8,528.00\nred two-door coupe | $6,130.00\nblack convertible | $5,471.00", "question": "Lamar has $26,720.00. How much money will Lamar have left if he buys a green station wagon and a red sports car?", "answer": "8,535", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the cars\nprice_green_station_wagon = 9657.00\nprice_red_sports_car = 8528.00\n# Total amount Lamar has\nlamar_total = 26720.00\n# Total cost of the cars\ntotal_cost = price_green_station_wagon + price_red_sports_car\n# Money left after purchasing the cars\nmoney_left = lamar_total - total_cost\nanswer = money_left\n", "prediction": "8535.0\n"}
{"context": "Read the following table regarding \"Springdale School District sports budget\" and then answer a question.\n\nYear | Per-student budget\n2011 | $21\n2012 | $25\n2013 | $27\n2014 | $28\n2015 | $21", "question": "Each year the Springdale School District publishes its annual budget, which includes information on the sports program's per-student spending. According to the table, what was the rate of change between 2012 and 2013?", "answer": "2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Per-student budget for the years in question\nbudget_2012 = 25\nbudget_2013 = 27\n\n# Calculate the rate of change\nrate_of_change = budget_2013 - budget_2012\nanswer = rate_of_change\n", "prediction": "2\n"}
{"context": "Read the following table regarding \"Bottles collected\" and then answer a question.\n\nName | Number of bottles\nMaddie | 33\nVicky | 33\nJuan | 35\nNorma | 36\nPatrick | 31\nKatie | 35\nBrenda | 32\nDwayne | 33", "question": "Maddie's class paid attention to how many bottles each student collected for their recycling project. What is the range of the numbers?", "answer": "5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of bottles collected by each student\nbottles_collected = [33, 33, 35, 36, 31, 35, 32, 33]\n# Calculate the range\nrange_bottles = max(bottles_collected) - min(bottles_collected)\nanswer = range_bottles\n", "prediction": "5\n"}
{"context": "Read the following table regarding \"Going down the slide at recess\" and then answer a question.\n\nNumber of times | Frequency\n0 | 10\n1 | 19\n2 | 1\n3 | 12\n4 | 5", "question": "A school interested in expanding its playground counted the number of times that students went down the slide during recess. How many students went down the slide more than 2 times?", "answer": "17", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of students going down the slide more than 2 times\nfrequency_more_than_2 = 12 + 5  # 12 for 3 times and 5 for 4 times\nanswer = frequency_more_than_2\n", "prediction": "17\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nticket for an Atlantic cruise | $6,795.00\nticket for a Caribbean cruise | $1,581.00\nticket for a Mexican cruise | $3,769.00\nticket for a South American cruise | $6,109.00\nticket for a Mediterranean cruise | $6,138.00", "question": "Oscar has $12,538.00. Does he have enough to buy a ticket for a Mediterranean cruise and a ticket for an Atlantic cruise? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# Prices of the tickets\nmediterranean_cruise_price = 6138.00\natlantic_cruise_price = 6795.00\n# Total cost for both tickets\ntotal_cost = mediterranean_cruise_price + atlantic_cruise_price\n# Oscar's budget\noscar_budget = 12538.00\n# Determine if Oscar has enough\nif oscar_budget >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nplastic bowl | $1.61\ncookie sheet | $9.86\nrolling pin | $8.65\nfunnel | $1.01\ncoffee mug | $4.25\nglass bowl | $7.96", "question": "How much money does Helen need to buy 4 cookie sheets and a glass bowl?", "answer": "47.40", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_cookie_sheet = 9.86 \nprice_glass_bowl = 7.96 \n\n# Total cost calculation\ntotal_cost = (4 * price_cookie_sheet) + price_glass_bowl\nanswer = total_cost\n", "prediction": "47.4\n"}
{"context": "Read the following table regarding \"Cows per farm\" and then answer a question.\n\nStem | Leaf \n2 | 0, 3, 5\n3 | 2, 7\n4 | \n5 | 7, 9\n6 | 0, 1, 2\n7 | 3, 4\n8 | 0, 4, 7, 8", "question": "A researcher recorded the number of cows on each farm in the county. What is the largest number of cows?", "answer": "88", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest number of cows corresponds to the largest value in the stem-and-leaf display.\nlargest_cows_count = 87  # From the stem \"8 | 0, 4, 7, 8\", the value is 88 cows.\nanswer = largest_cows_count\n", "prediction": "87\n"}
{"context": "Read the following table regarding \"Pies baked\" and then answer a question.\n\nDay | Number of pies\nWednesday | 0\nThursday | 2\nFriday | 10\nSaturday | 8\nSunday | 5\nMonday | 7\nTuesday | 10", "question": "A baker wrote down how many pies she made in the past 7 days. What is the mean of the numbers?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of pies baked each day\npies_baked = [0, 2, 10, 8, 5, 7, 10]\n# Calculate the mean\nmean_pies = sum(pies_baked) / len(pies_baked)\nanswer = mean_pies\n", "prediction": "6.0\n"}
{"context": "Read the following table regarding \"Zoo ticket prices\" and then answer a question.\n\nZoo | Child | Senior\nSan Francisco | $9 | $12\nCentral Florida | $7 | $9\nAtlanta | $14 | $15", "question": "Dr. Barton, a zoo director, researched ticket prices at other zoos around the country. How much more does a senior ticket cost at the San Francisco Zoo than at the Central Florida Zoo?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of senior tickets at the two zoos\nprice_san_francisco = 12 \nprice_central_florida = 9 \n# Calculate the difference\ndifference = price_san_francisco - price_central_florida\nanswer = difference\n", "prediction": "3\n"}
{"context": "Read the following table regarding \"Sweatshirts\" and then answer a question.\n\nNumber of sweatshirts | Frequency\n0 | 8\n1 | 18\n2 | 11\n3 | 19", "question": "The Springfield Middle School fundraising committee found out how many sweatshirts students already had, in order to decide whether to sell sweatshirts for a fundraiser. How many students have more than 2 sweatshirts?", "answer": "19", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of students with more than 2 sweatshirts\nstudents_with_more_than_2 = 19  # Only the students with 3 sweatshirts count\nanswer = students_with_more_than_2\n", "prediction": "19\n"}
{"context": "Read the following table regarding \"Red buttons per bag\" and then answer a question.\n\nStem | Leaf \n2 | 3, 5\n3 | \n4 | 2, 2, 3\n5 | 6, 8, 9", "question": "An employee at the craft store counted the number of red buttons in each bag of mixed buttons. What is the largest number of red buttons?", "answer": "59", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest number of red buttons corresponds to the largest value in the stem-and-leaf display.\nlargest_red_buttons = 89  # From the stem \"5 | 6, 8, 9\", the value is 59 buttons.\nanswer = largest_red_buttons\n", "prediction": "89\n"}
{"context": "Read the following table regarding \"Children's weights (lbs)\" and then answer a question.\n\nStem | Leaf \n3 | 0, 0, 0, 0, 4, 5, 7\n4 | 1, 1, 1, 3, 4, 8, 9\n5 | 4, 5, 6, 6, 8, 9, 9\n6 | 2, 5, 8", "question": "Dr. Lin, a pediatrician, weighed all the children who recently visited her office. How many children weighed exactly 30 pounds?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The weights corresponding to the stem-and-leaf display\nweights = [30, 30, 30, 30, 34, 35, 37, 41, 41, 41, 43, 44, 48, 49, 54, 55, 56, 56, 58, 59, 59, 62, 65, 68]\n\n# Count how many children weighed exactly 30 pounds\ncount_30_pounds = weights.count(30)\nanswer = count_30_pounds\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbright yellow highlighter | $0.01\nthin green highlighter | $0.06\ngreen colored pencil | $0.02\nmechanical pencil | $0.06\nsmall box of paper clips | $0.06\norange marker | $0.02", "question": "How much money does Connor need to buy a mechanical pencil and a bright yellow highlighter?", "answer": "0.07", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_mechanical_pencil = 0.06\nprice_bright_yellow_highlighter = 0.01\n# Total cost for Connor to buy both items\ntotal_cost = price_mechanical_pencil + price_bright_yellow_highlighter\nanswer = total_cost\n", "prediction": "0.06999999999999999\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n6 | 16\n7 | 6\n8 | 0", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "nonlinear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the differences in y-values for equal differences in x-values.\nx_values = [6, 7, 8]\ny_values = [16, 6, 0]\n\n# Calculate the differences\ndifferences = [y_values[i+1] - y_values[i] for i in range(len(y_values)-1)]\n# Check if the differences are constant\nis_linear = all(difference == differences[0] for difference in differences)\n\nanswer = 'linear' if is_linear else 'nonlinear'\n", "prediction": "NameError(\"name 'y_values' is not defined\")"}
{"context": "Read the following table regarding \"Average waiting time at the DMV\" and then answer a question.\n\nMonth | Waiting time (minutes)\nMarch | 13\nApril | 18\nMay | 17\nJune | 17\nJuly | 16", "question": "An administrator at the Department of Motor Vehicles (DMV) tracked the average wait time from month to month. According to the table, what was the rate of change between April and May?", "answer": "-1", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nwaiting_time_april = 18\nwaiting_time_may = 17\n\n# Calculate the rate of change between April and May\nrate_of_change = waiting_time_may - waiting_time_april\nanswer = rate_of_change\n", "prediction": "-1\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\njar of tomato sauce | $0.64\nbottle of ketchup | $0.76\nbottle of hot sauce | $0.85\nbottle of vinegar | $0.73\nbottle of soy sauce | $0.82\nbottle of mustard | $0.88", "question": "How much more does a bottle of mustard cost than a jar of tomato sauce?", "answer": "0.24", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_mustard = 0.88\ncost_tomato_sauce = 0.64\n# Calculate the difference in cost\ndifference_cost = cost_mustard - cost_tomato_sauce\nanswer = difference_cost\n", "prediction": "0.24\n"}
{"context": "Read the following table regarding \"Chocolate consumption per capita (kg)\" and then answer a question.\n\nCountry | 2002 | 2005\nAustria | 8 | 9\nAustralia | 4 | 5\nBelgium | 8 | 11\nSweden | 8 | 7\nDenmark | 9 | 8", "question": "Justin's Candies has been studying how much chocolate people have been eating in different countries. Which country consumed less chocolate per capita in 2005, Australia or Sweden? Choose from the the options: ['Sweden', 'Australia']", "answer": "Australia", "ques_type": "multi_choice", "choices": ["Sweden", "Australia"], "code": "# Python code, return answer \n# Chocolate consumption per capita in 2005 for Australia and Sweden\naustralia_consumption_2005 = 5\nsweden_consumption_2005 = 7\n\n# Determine which country consumed less chocolate\nif australia_consumption_2005 < sweden_consumption_2005:\n    answer = 'Australia'\nelse:\n    answer = 'Sweden'\n", "prediction": "Australia\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nred sweater | $11.60\nwinter jacket | $33.37\npair of tennis shoes | $43.78\npair of jeans | $39.31\npair of sweat pants | $17.18", "question": "How much more does a winter jacket cost than a pair of sweat pants?", "answer": "16.19", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_winter_jacket = 33.37 \ncost_sweat_pants = 17.18 \n# Calculate the difference in cost\ndifference_cost = cost_winter_jacket - cost_sweat_pants\nanswer = difference_cost\n", "prediction": "16.189999999999998\n"}
{"context": "Read the following table regarding \"Fish per tank\" and then answer a question.\n\nStem | Leaf \n3 | 5, 8\n4 | 0, 2, 4, 4, 6\n5 | 0, 2, 3, 4, 5, 6, 6, 8, 8\n6 | 3", "question": "A pet store owner had his staff count the number of fish in each tank. How many tanks have fewer than 70 fish?", "answer": "17", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Listing the number of fish per tank from the stem-and-leaf display\nfish_counts = [35, 38, 40, 42, 44, 44, 46, 50, 52, 53, 54, 55, 56, 56, 58, 58, 63]\n\n# Count tanks with fewer than 70 fish\ntanks_fewer_than_70 = sum(1 for count in fish_counts if count < 70)\nanswer = tanks_fewer_than_70\n", "prediction": "17\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nEmployee | Pay period |\nMargarita Perez | September 9-15 |\nTotal earnings | | $670.00\nFederal income tax | $76.70 |\nOther taxes | $51.26 |\nTotal taxes | | ?\nPay after taxes | | ?", "question": "Look at Margarita's pay stub. Margarita lives in a state without state income tax. How much did Margarita make after taxes?", "answer": "542.04", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total earnings and taxes\ntotal_earnings = 670.00\nfederal_income_tax = 76.70\nother_taxes = 51.26\n# Calculate total taxes\ntotal_taxes = federal_income_tax + other_taxes\n# Calculate pay after taxes\npay_after_taxes = total_earnings - total_taxes\nanswer = pay_after_taxes\n", "prediction": "542.04\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of desk drawers | Number of notepads\n1 | 2\n2 | 4\n3 | 6\n4 | ?", "question": "Each desk drawer has 2 notepads. How many notepads are in 4 desk drawers?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nnumber_of_drawers = 4 \nnotepads_per_drawer = 2 \n# Calculate the total number of notepads\ntotal_notepads = number_of_drawers * notepads_per_drawer\nanswer = total_notepads\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"Subway train schedule\" and then answer a question.\n\nLocation | Time\nSpruce Boulevard | 10:40 A.M.\nChurch Road | 11:30 A.M.\nMeadow Road | 12:00 P.M.\nCenter Boulevard | 12:10 P.M.\nHickory Road | 12:40 P.M.\nLee Avenue | 1:15 P.M.\nFranklin Boulevard | 2:05 P.M.", "question": "Look at the following schedule. At which stop does the train arrive at 1.15 P.M.? Choose from the the options: ['Hickory Road', 'Lee Avenue', 'Church Road', 'Center Boulevard']", "answer": "Lee Avenue", "ques_type": "multi_choice", "choices": ["Hickory Road", "Lee Avenue", "Church Road", "Center Boulevard"], "code": "# Python code, return answer \ntrain_schedule = {\n    'Spruce Boulevard': '10:40 A.M.',\n    'Church Road': '11:30 A.M.',\n    'Meadow Road': '12:00 P.M.',\n    'Center Boulevard': '12:10 P.M.',\n    'Hickory Road': '12:40 P.M.',\n    'Lee Avenue': '1:15 P.M.',\n    'Franklin Boulevard': '2:05 P.M.'\n}\n\n# Find the stop where the train arrives at 1:15 P.M.\narrival_time = '1:15 P.M.'\nstop_at_arrival = [location for location, time in train_schedule.items() if time == arrival_time]\nanswer = stop_at_arrival[0]  # Since we expect only one match\n", "prediction": "NameError(\"name 'arrival_time' is not defined\")"}
{"context": "Read the following table regarding \"Science articles read\" and then answer a question.\n\nName | Number of science articles\nGabe | 528\nDanny | 177\nJacob | 837\nHeather | 389", "question": "Heather's classmates revealed how many science articles they read. How many more science articles did Heather read than Danny?", "answer": "212", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nheather_articles = 389 \ndanny_articles = 177 \n# Calculate how many more articles Heather read than Danny\ndifference = heather_articles - danny_articles\nanswer = difference\n", "prediction": "212\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nclarinet | $717.00\nkeyboard | $593.00\ntrumpet | $969.00\nsaxophone | $870.00\npiccolo | $426.00", "question": "How much more does a trumpet cost than a piccolo?", "answer": "543", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ncost_trumpet = 969.00\ncost_piccolo = 426.00\n# Calculate the difference in cost\ndifference = cost_trumpet - cost_piccolo\nanswer = difference\n", "prediction": "543.0\n"}
{"context": "Read the following table regarding \"Bridge tolls\" and then answer a question.\n\nBridge | Truck | Car\nTacoma Narrows | $4 | $3\nHatem | $10 | $5\nGeorge Washington | $16 | $8\nSan Mateo | $6 | $4", "question": "A transportation analyst compared various bridges' tolls. On the George Washington bridge, how much more is the toll for a truck than for a car?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Toll values for the George Washington bridge\ntruck_toll_george_washington = 16 \ncar_toll_george_washington = 8 \n# Calculate the difference in tolls\ndifference_in_toll = truck_toll_george_washington - car_toll_george_washington\nanswer = difference_in_toll\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of tins | Number of muffins\n1 | 5\n2 | 10\n3 | 15\n4 | ?", "question": "Each tin has 5 muffins. How many muffins are in 4 tins?", "answer": "20", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of muffins in one tin\nmuffins_per_tin = 5 \n# Calculate the number of muffins in 4 tins\ntins = 4 \nanswer = muffins_per_tin * tins\n", "prediction": "20\n"}
{"context": "Read the following table regarding \"Weight of winning dog at a dog show\" and then answer a question.\n\nYear | Weight (kg)\n2014 | 23\n2015 | 29\n2016 | 42\n2017 | 49\n2018 | 15", "question": "A dog show enthusiast recorded the weight of the winning dog at recent dog shows. According to the table, what was the rate of change between 2017 and 2018?", "answer": "-34", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nweight_2017 = 49  # weight in kg for the year 2017\nweight_2018 = 15  # weight in kg for the year 2018\n\n# Calculate the rate of change\nrate_of_change = weight_2018 - weight_2017\nanswer = rate_of_change\n", "prediction": "-34\n"}
{"context": "Read the following table regarding \"Bears in zoos\" and then answer a question.\n\nZoo | Sun bears | Brown bears\nAtlantic Zoo | 3 | 5\nMountain Zoo | 3 | 16\nPacific Zoo | 5 | 4\nEastern Zoo | 10 | 15", "question": "Some students visited nearby zoos to record the number of bears kept there. Which zoo has the fewest bears? Choose from the the options: ['Pacific Zoo', 'Atlantic Zoo', 'Mountain Zoo', 'Eastern Zoo']", "answer": "Atlantic Zoo", "ques_type": "multi_choice", "choices": ["Pacific Zoo", "Atlantic Zoo", "Mountain Zoo", "Eastern Zoo"], "code": "# Python code, return answer \n# Number of bears in each zoo\nzoo_bears = {\n    'Atlantic Zoo': 3 + 5,\n    'Mountain Zoo': 3 + 16,\n    'Pacific Zoo': 5 + 4,\n    'Eastern Zoo': 10 + 15\n}\n\n# Find the zoo with the fewest bears\nfewest_bears_zoo = min(zoo_bears, key=zoo_bears.get)\nanswer = fewest_bears_zoo\n", "prediction": "Atlantic Zoo\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nyellow beads | $2/kilogram\nblack beads | $2/kilogram\nwhite beads | $3/kilogram\norange beads | $2/kilogram\nred beads | $2/kilogram\nblue beads | $2/kilogram\ngreen beads | $2/kilogram", "question": "If Shawn buys 4 kilograms of yellow beads and 4 kilograms of green beads, how much will he spend?", "answer": "16", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_kilogram_yellow = 2 \nprice_per_kilogram_green = 2 \nkilograms_yellow = 4 \nkilograms_green = 4 \n\n# Calculate the total cost\ntotal_cost_yellow = price_per_kilogram_yellow * kilograms_yellow\ntotal_cost_green = price_per_kilogram_green * kilograms_green\ntotal_cost = total_cost_yellow + total_cost_green\n\nanswer = total_cost\n", "prediction": "16\n"}
{"context": "Read the following table regarding \"Weight of winning dog at a dog show\" and then answer a question.\n\nYear | Weight (kg)\n2008 | 42\n2009 | 7\n2010 | 11\n2011 | 25\n2012 | 28", "question": "A dog show enthusiast recorded the weight of the winning dog at recent dog shows. According to the table, what was the rate of change between 2009 and 2010?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Weight of the winning dog in 2009 and 2010\nweight_2009 = 7\nweight_2010 = 11\n\n# Calculate the rate of change\nrate_of_change = weight_2010 - weight_2009\nanswer = rate_of_change\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"Cherries sold\" and then answer a question.\n\nDay | Kilograms\nSaturday | 5\nSunday | 7\nMonday | 9\nTuesday | 5\nWednesday | 6", "question": "A farmer wrote down how many kilograms of cherries were sold in the past 5 days. What is the median of the numbers?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of kilograms sold over the days\ncherries_sold = [5, 7, 9, 5, 6]\n\n# Sort the list to find the median\ncherries_sold.sort()\n\n# Calculate the median\nn = len(cherries_sold)\nif n % 2 == 0:\n    median = (cherries_sold[n // 2 - 1] + cherries_sold[n // 2]) / 2\nelse:\n    median = cherries_sold[n // 2]\n\nanswer = median\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"Apples picked\" and then answer a question.\n\nDay | Number of apples\nTuesday | 314\nWednesday | 331\nThursday | 341\nFriday | 313", "question": "The owner of an orchard kept records about how many apples were picked in the past 4 days. On which day were the fewest apples picked? Choose from the the options: ['Tuesday', 'Wednesday', 'Thursday', 'Friday']", "answer": "Friday", "ques_type": "multi_choice", "choices": ["Tuesday", "Wednesday", "Thursday", "Friday"], "code": "# Python code, return answer \napples_picked = {\n    'Tuesday': 314,\n    'Wednesday': 331,\n    'Thursday': 341,\n    'Friday': 313\n}\n# Find the day with the fewest apples picked\nfewest_apples_day = min(apples_picked, key=apples_picked.get)\nanswer = fewest_apples_day\n", "prediction": "Friday\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbrown rice | $1/lb\nbasmati rice | $1/lb\nwhite rice | $1/lb\njasmine rice | $3/lb\nlong grain rice | $3/lb\nArborio rice | $2/lb", "question": "Tucker buys 1/4 of a pound of jasmine rice. How much does he spend?", "answer": "0.75", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_jasmine = 3  # price for jasmine rice\npounds_bought = 0.25  # 1/4 of a pound\n# Calculate the total cost\ntotal_cost = price_per_pound_jasmine * pounds_bought\nanswer = total_cost\n", "prediction": "0.75\n"}
{"context": "Read the following table regarding \"Stop signs\" and then answer a question.\n\nStreet | Number of stop signs\nSpring Street | 5\nIrving Street | 10\nJackson Street | 6\nSmith Street | 10\nPeabody Street | 6\nWalker Street | 6\nMarshall Street | 10\nWatson Street | 10", "question": "The town council reported on how many stop signs there are on each street. What is the mode of the numbers?", "answer": "10", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of stop signs on each street\nstop_signs = [5, 10, 6, 10, 6, 6, 10, 10]\n# Finding the mode\nfrom statistics import mode\nanswer = mode(stop_signs)\n", "prediction": "10\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nplastic crab | $0.59\nsand castle magnet | $0.80\ntiny bottle of sand | $0.42\nshell necklace | $0.61\npink flamingo pen | $0.42", "question": "How much money does Hugo need to buy a tiny bottle of sand and a plastic crab?", "answer": "1.01", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_tiny_bottle_of_sand = 0.42\nprice_plastic_crab = 0.59\n# Total cost for both items\ntotal_cost = price_tiny_bottle_of_sand + price_plastic_crab\nanswer = total_cost\n", "prediction": "1.01\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of shopping bags | Number of pairs of jeans\n1 | 2\n2 | 4\n3 | 6\n4 | 8\n5 | 10\n6 | ?", "question": "Each shopping bag has 2 pairs of jeans. How many pairs of jeans are in 6 shopping bags?", "answer": "12", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Each shopping bag contains 2 pairs of jeans\npairs_per_bag = 2\nbags = 6\n# Calculate total pairs of jeans for 6 bags\ntotal_pairs_of_jeans = pairs_per_bag * bags\nanswer = total_pairs_of_jeans\n", "prediction": "12\n"}
{"context": "Read the following table regarding \"Silver beads per bracelet\" and then answer a question.\n\nStem | Leaf \n2 | 1, 2, 4, 8, 9\n3 | 4, 6, 8, 9, 9\n4 | 6, 8, 8\n5 | 1, 6\n6 | 2, 8\n7 | 0, 3, 4, 8, 8\n8 | 5", "question": "Dana counted the number of silver beads on each bracelet at Oakdale Jewelry, the store where she works. What is the largest number of silver beads?", "answer": "85", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest number of silver beads corresponds to the largest value in the stem-and-leaf display.\nlargest_bead_count = 85  # From the stem \"8 | 5\", the value is 85 beads.\nanswer = largest_bead_count\n", "prediction": "85\n"}
{"context": "Read the following table regarding \"Birds per flock\" and then answer a question.\n\nStem | Leaf \n2 | 8\n3 | 4\n4 | 6\n5 | 2, 4, 7", "question": "The bird watcher counted the number of birds in each flock that passed overhead. How many flocks had fewer than 27 birds?", "answer": "0", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The stem-and-leaf display shows the following counts of birds per flock:\n# Stem 2: 28 (1 flock)\n# Stem 3: 34 (1 flock)\n# Stem 4: 46 (1 flock)\n# Stem 5: 52, 54, 57 (3 flocks)\n# Flocks with fewer than 27 birds: only the one from stem \"2\" which corresponds to 28.\n\nflocks_with_fewer_than_27 = 0  # No flocks have fewer than 27 birds based on the given data.\nanswer = flocks_with_fewer_than_27\n", "prediction": "0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nfunnel cake stand | $6,964\nshaved ice cart | $7,649\npopsicle stand | $6,324\npeanut cart | $9,406", "question": "Ben has $17,781. Does he have enough to buy a shaved ice cart and a peanut cart? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \ncost_shaved_ice_cart = 7649 \ncost_peanut_cart = 9406 \ntotal_cost = cost_shaved_ice_cart + cost_peanut_cart \nben_budget = 17781 \n\n# Determine if Ben has enough money\nif ben_budget >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"Running miles\" and then answer a question.\n\nName | Miles\nKatie | 14\nClara | 15\nRose | 18\nLeah | 12\nJessica | 14\nWendy | 15\nEdna | 17", "question": "The members of the track team compared how many miles they ran last week. What is the mean of the numbers?", "answer": "15", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of miles run by each member\nmiles = [14, 15, 18, 12, 14, 15, 17]\n# Calculate the mean\nmean_miles = sum(miles) / len(miles)\nanswer = mean_miles\n", "prediction": "15.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n7 | 15\n8 | 16\n9 | 17", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "linear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the differences in y-values for constant x differences.\nx_values = [7, 8, 9]\ny_values = [15, 16, 17]\n\n# Calculate the differences\ndifferences = [y_values[i+1] - y_values[i] for i in range(len(y_values) - 1)]\n# If the differences are constant, it's linear\nis_linear = all(diff == differences[0] for diff in differences)\n\nanswer = 'linear' if is_linear else 'nonlinear'\n", "prediction": "NameError(\"name 'y_values' is not defined\")"}
{"context": "Read the following table regarding \"Chocolate candies in bowl\" and then answer a question.\n\nColor | Frequency\nred | 7\norange | 12\nyellow | 8\ngreen | 11\nblue | 13\nbrown | 7", "question": "Diana bought a bag of colored chocolate candies. Before putting them into a bowl, she counted the number of candies of each color in a frequency chart. Diana then puts another bag of 56 black and white chocolate candies into a second bowl. How many candies are in both bowls combined?", "answer": "114", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total chocolates of each color\ntotal_chocolates = 7 + 12 + 8 + 11 + 13 + 7\n# Additional chocolates from the second bowl\nadditional_chocolates = 56\n# Total chocolates in both bowls\ncombined_total = total_chocolates + additional_chocolates\nanswer = combined_total\n", "prediction": "114\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nEuropean vacation package | $7,668\nAfrican safari vacation package | $4,813\nJamaican vacation package | $7,039\nAustralian vacation package | $9,664\nHawaiian vacation package | $4,383", "question": "How much more does an Australian vacation package cost than a Jamaican vacation package?", "answer": "2,625", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \naustralian_vacation_cost = 9664 \njamaican_vacation_cost = 7039 \n# Calculate the difference in cost\ndifference_cost = australian_vacation_cost - jamaican_vacation_cost\nanswer = difference_cost\n", "prediction": "2625\n"}
{"context": "Read the following table regarding \"Number of books sold\" and then answer a question.\n\nMonth | Number of books\nApril | 797\nMay | 796\nJune | 769\nJuly | 776", "question": "A bookstore employee looked up how many books were sold each month. In which month did the bookstore sell the fewest books? Choose from the the options: ['April', 'May', 'June', 'July']", "answer": "June", "ques_type": "multi_choice", "choices": ["April", "May", "June", "July"], "code": "# Python code, return answer \nbooks_sold = {\n    'April': 797,\n    'May': 796,\n    'June': 769,\n    'July': 776\n}\n# Find the month with the fewest books sold\nfewest_books_month = min(books_sold, key=books_sold.get)\nanswer = fewest_books_month\n", "prediction": "June\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nchocolate pudding | $3.05/pound\nrice pudding | $4.68/pound\ntapioca pudding | $4.42/pound\nvanilla pudding | $6.92/pound\nbutterscotch pudding | $2.68/pound", "question": "Gwen wants to buy 3 pounds of tapioca pudding. How much will she spend?", "answer": "13.26", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_tapioca = 4.42  # Price of tapioca pudding\npounds_bought = 3  # Amount of pudding Gwen wants to buy\n# Calculate total cost\ntotal_cost = price_per_pound_tapioca * pounds_bought\nanswer = total_cost\n", "prediction": "13.26\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of restaurant tables | Number of salt shakers\n1 | 2\n2 | 4\n3 | ?", "question": "Each restaurant table has 2 salt shakers. How many salt shakers are on 3 restaurant tables?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \ntables = 3 \nsalt_shakers_per_table = 2 \n# Calculate total salt shakers for the given number of tables\ntotal_salt_shakers = tables * salt_shakers_per_table\nanswer = total_salt_shakers\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of shelves | Number of belts\n1 | 5\n2 | 10\n3 | ?", "question": "Each shelf has 5 belts. How many belts are on 3 shelves?", "answer": "15", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nbelts_per_shelf = 5 \nnumber_of_shelves = 3 \n# Calculate the total number of belts on 3 shelves\ntotal_belts = belts_per_shelf * number_of_shelves\nanswer = total_belts\n", "prediction": "15\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nMixture | Temperature (\u00b0C)\nBromine mixture | -4\nAcetone mixture | 5", "question": "In science class, Trisha is measuring the temperature of different chemical mixtures. The temperatures of two mixtures are shown in the table. Which mixture's temperature is closest to zero? Choose from the the options: ['bromine mixture', 'acetone mixture']", "answer": "bromine mixture", "ques_type": "multi_choice", "choices": ["bromine mixture", "acetone mixture"], "code": "# Python code, return answer \nbromine_temp = -4 \nacetone_temp = 5 \n\n# Calculate the absolute distances to zero\ndistance_bromine = abs(bromine_temp)\ndistance_acetone = abs(acetone_temp)\n\n# Determine which mixture is closest to zero\nif distance_bromine < distance_acetone:\n    answer = 'bromine mixture'\nelse:\n    answer = 'acetone mixture'\n\n", "prediction": "bromine mixture\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | Split pea | Chicken noodle\nCup | 3 | 6\nBowl | 5 | 3", "question": "Edna, a soup chef at a new restaurant, kept track of the first week's soup sales. What is the probability that a randomly selected soup was ordered in a cup and was split pea? Simplify any fractions.", "answer": "3/17", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total sales of each type of soup in cups and bowls\nsplit_pea_cup = 3\nchicken_noodle_cup = 6\nsplit_pea_bowl = 5\nchicken_noodle_bowl = 3\n\n# Total soup sales\ntotal_cups = split_pea_cup + chicken_noodle_cup\ntotal_bowls = split_pea_bowl + chicken_noodle_bowl\ntotal_soups = total_cups + total_bowls\n\n# Probability of selecting a cup of split pea soup\nprobability_split_pea_cup = split_pea_cup / total_soups\n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(split_pea_cup, total_soups).limit_denominator()\nanswer = simplified_probability\n", "prediction": "3/17\n"}
{"context": "Read the following table regarding \"Spinning a wheel numbered 0 through 5\" and then answer a question.\n\nNumber spun | Frequency\n0 | 0\n1 | 11\n2 | 3\n3 | 15\n4 | 4\n5 | 6", "question": "For a math assignment, students noted the number of times a wheel landed on the numbers 0 through 5. How many students spun 4?", "answer": "4", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The frequency of the number 4 being spun\nfrequency_spun_4 = 4\nanswer = frequency_spun_4\n", "prediction": "4\n"}
{"context": "Read the following table regarding \"Ferry schedule\" and then answer a question.\n\nBay Harbor | 7:00 A.M. | 7:15 A.M. | 7:30 A.M. | 7:45 A.M. | 8:00 A.M.\nSandy Shores | 8:30 A.M. | 8:45 A.M. | 9:00 A.M. | 9:15 A.M. | 9:30 A.M.\nSeagull Port | 10:15 A.M. | 10:30 A.M. | 10:45 A.M. | 11:00 A.M. | 11:15 A.M.\nCliff View | 12:00 P.M. | 12:15 P.M. | 12:30 P.M. | 12:45 P.M. | 1:00 P.M.\nGreen Harbor | 1:45 P.M. | 2:00 P.M. | 2:15 P.M. | 2:30 P.M. | 2:45 P.M.\nWindy Sands | 3:15 P.M. | 3:30 P.M. | 3:45 P.M. | 4:00 P.M. | 4:15 P.M.\nFoggy Port | 5:00 P.M. | 5:15 P.M. | 5:30 P.M. | 5:45 P.M. | 6:00 P.M.", "question": "Look at the following schedule. Betty got on the ferry at Windy Sands at 4.00 P.M. What time will she get to Foggy Port? Choose from the the options: ['5:00 P.M.', '8:00 A.M.', '5:15 P.M.', '5:45 P.M.']", "answer": "5:45 P.M.", "ques_type": "multi_choice", "choices": ["5:00 P.M.", "8:00 A.M.", "5:15 P.M.", "5:45 P.M."], "code": "# Python code, return answer \n# The ferry schedule shows that the departure from Windy Sands is at 4:00 P.M.\n# The next scheduled arrival at Foggy Port after this time is at 5:00 P.M.\nanswer = '5:00 P.M.'\n", "prediction": "5:00 P.M.\n"}
{"context": "Read the following table regarding \"Bull's-eyes\" and then answer a question.\n\nDay | Number of bull's-eyes\nThursday | 8\nFriday | 8\nSaturday | 3\nSunday | 9\nMonday | 6\nTuesday | 6\nWednesday | 4", "question": "An archer recalled how many times he hit the bull's-eye in the past 7 days. What is the median of the numbers?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nbull_eyes = [8, 8, 3, 9, 6, 6, 4]\n# Sort the numbers to find the median\nbull_eyes.sort()\n# Calculate the median\nn = len(bull_eyes)\nif n % 2 == 0:\n    median = (bull_eyes[n//2 - 1] + bull_eyes[n//2]) / 2\nelse:\n    median = bull_eyes[n//2]\nanswer = median\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nCavendish bananas | $0.98/kilogram\nplantains | $0.98/kilogram\npink bananas | $1.09/kilogram\nbananitos | $0.49/kilogram\nred bananas | $0.65/kilogram", "question": "Rita wants to buy 1 kilogram of Cavendish bananas, 3 kilograms of pink bananas, and 3 kilograms of red bananas. How much will she spend?", "answer": "6.20", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices per kilogram\nprice_cavendish = 0.98\nprice_pink_bananas = 1.09\nprice_red_bananas = 0.65\n\n# Quantity\nquantity_cavendish = 1\nquantity_pink_bananas = 3\nquantity_red_bananas = 3\n\n# Calculate total cost\ntotal_cost = (price_cavendish * quantity_cavendish) + \\\n              (price_pink_bananas * quantity_pink_bananas) + \\\n              (price_red_bananas * quantity_red_bananas)\n\nanswer = total_cost\n", "prediction": "6.2\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n16 | 18\n17 | 11\n18 | 8", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "nonlinear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the differences in y-values for equal intervals of x-values.\nx_values = [16, 17, 18]\ny_values = [18, 11, 8]\n\n# Calculate the differences\ndifferences = [y_values[i+1] - y_values[i] for i in range(len(y_values)-1)]\n# Check if the differences are constant\nis_linear = all(difference == differences[0] for difference in differences)\n\nanswer = 'linear' if is_linear else 'nonlinear'\n", "prediction": "NameError(\"name 'y_values' is not defined\")"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ncucumber | $1.30\npumpkin | $7.38\nwatermelon | $4.86\ngrapefruit | $1.20\nred pepper | $1.25", "question": "Ruben has $8.50. Does he have enough to buy a red pepper and a pumpkin? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# Prices of red pepper and pumpkin\nprice_red_pepper = 1.25\nprice_pumpkin = 7.38\n# Total cost for both\ntotal_cost = price_red_pepper + price_pumpkin\n# Ruben's available amount\nruben_money = 8.50\n# Determine if Ruben has enough money\nif ruben_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"Light rail train schedule\" and then answer a question.\n\nLocation | Time\nlibrary | 10:30 A.M.\nsoccer field | 10:35 A.M.\ntown square | 10:55 A.M.\nuniversity | 11:20 A.M.\ngrocery store | 11:40 A.M.\nswimming pool | 12:10 P.M.\nbaseball stadium | 12:30 P.M.\nart museum | 12:35 P.M.\nshopping mall | 12:55 P.M.\nscience museum | 1:10 P.M.", "question": "Look at the following schedule. At which stop does the train arrive at 12.30 P.M.? Choose from the the options: ['shopping mall', 'science museum', 'art museum', 'baseball stadium']", "answer": "baseball stadium", "ques_type": "multi_choice", "choices": ["shopping mall", "science museum", "art museum", "baseball stadium"], "code": "# Python code, return answer \n# Defining the schedule in a dictionary\nschedule = {\n    'library': '10:30 A.M.',\n    'soccer field': '10:35 A.M.',\n    'town square': '10:55 A.M.',\n    'university': '11:20 A.M.',\n    'grocery store': '11:40 A.M.',\n    'swimming pool': '12:10 P.M.',\n    'baseball stadium': '12:30 P.M.',\n    'art museum': '12:35 P.M.',\n    'shopping mall': '12:55 P.M.',\n    'science museum': '1:10 P.M.'\n}\n\n# Finding the location with the specified arrival time\narrival_time = '12:30 P.M.'\nfor location, time in schedule.items():\n    if time == arrival_time:\n        answer = location\n", "prediction": "baseball stadium\n"}
{"context": "Read the following table regarding \"Sweatshirts\" and then answer a question.\n\nNumber of sweatshirts | Frequency\n0 | 10\n1 | 12\n2 | 19\n3 | 11", "question": "The Cedarburg Middle School fundraising committee found out how many sweatshirts students already had, in order to decide whether to sell sweatshirts for a fundraiser. How many students have at least 2 sweatshirts?", "answer": "30", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of students with at least 2 sweatshirts\nfrequency_at_least_2 = 19 + 11  # Students with 2 or more sweatshirts\nanswer = frequency_at_least_2\n", "prediction": "30\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$25 | 20,200 | 5,700\n$55 | 16,300 | 7,600\n$85 | 12,400 | 9,500\n$115 | 8,500 | 11,400\n$145 | 4,600 | 13,300", "question": "Look at the table. Then answer the question. At a price of $55, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "shortage", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \nquantity_demanded_at_55 = 16300\nquantity_supplied_at_55 = 7600\n\n# Determine if there is a shortage or surplus\nif quantity_demanded_at_55 > quantity_supplied_at_55:\n    answer = 'shortage'\nelse:\n    answer = 'surplus'\n\n", "prediction": "shortage\n"}
{"context": "Read the following table regarding \"Going to the library last month\" and then answer a question.\n\nNumber of trips | Frequency\n1 | 20\n2 | 10\n3 | 2\n4 | 4", "question": "In considering whether to open a new branch, the city council examined the number of times some typical residents went to the library last month. How many people went to the library at least 2 times last month?", "answer": "16", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of trips to the library\nfrequency_data = {\n    1: 20,\n    2: 10,\n    3: 2,\n    4: 4\n}\n\n# Calculate the number of people who went to the library at least 2 times\npeople_at_least_2_times = frequency_data[2] + frequency_data[3] + frequency_data[4]\nanswer = people_at_least_2_times\n", "prediction": "16\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n3 | 3\n7 | 19\n10 | 18\n14 | 1", "question": "Look at this table. Is this relation a function? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# A relation is a function if each input (x value) is associated with exactly one output (y value).\n# We will check if any x values are repeated.\ndata = {\n    3: 3,\n    7: 19,\n    10: 18,\n    14: 1\n}\n# Check for duplicate keys in the data\nis_function = len(data) == len(set(data.keys()))\nanswer = 'yes' if is_function else 'no'\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of aquariums | Number of orange fish\n1 | 10\n2 | 20\n3 | 30\n4 | ?", "question": "Each aquarium has 10 orange fish. How many orange fish are in 4 aquariums?", "answer": "40", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nnumber_of_aquariums = 4 \nfish_per_aquarium = 10 \n# Calculate total number of orange fish\ntotal_orange_fish = number_of_aquariums * fish_per_aquarium\nanswer = total_orange_fish\n", "prediction": "40\n"}
{"context": "Read the following table regarding \"Miniature golf scores\" and then answer a question.\n\nName | Score\nMarshall | 150\nBarbara | 131\nDarius | 114\nErica | 128\nSandeep | 175", "question": "Some friends played miniature golf and wrote down their scores. How many more strokes did Sandeep take than Erica?", "answer": "47", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nsandeep_score = 175 \nerica_score = 128 \n# Calculate the difference in strokes\nstrokes_difference = sandeep_score - erica_score\nanswer = strokes_difference\n", "prediction": "47\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nx | y\n14 | 14\n15 | 13\n16 | 7", "question": "The table shows a function. Is the function linear or nonlinear? Choose from the the options: ['linear', 'nonlinear']", "answer": "nonlinear", "ques_type": "multi_choice", "choices": ["linear", "nonlinear"], "code": "# Python code, return answer \n# To determine if the function is linear, we can check the differences in y-values for equal differences in x-values.\nx_values = [14, 15, 16]\ny_values = [14, 13, 7]\n\n# Calculate the differences\ndifferences = [y_values[i+1] - y_values[i] for i in range(len(y_values)-1)]\n# If the differences are not constant, the function is nonlinear\nis_linear = all(diff == differences[0] for diff in differences)\n\nanswer = 'linear' if is_linear else 'nonlinear'\n", "prediction": "NameError(\"name 'y_values' is not defined\")"}
{"context": "Read the following table regarding \"People interviewed\" and then answer a question.\n\nDay | Number of people\nSunday | 19\nMonday | 12\nTuesday | 12\nWednesday | 21\nThursday | 8\nFriday | 7\nSaturday | 12", "question": "A reporter looked through her notebook to remember how many people she had interviewed in the past 7 days. What is the mean of the numbers?", "answer": "13", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of the number of people interviewed each day\npeople_interviewed = [19, 12, 12, 21, 8, 7, 12]\n# Calculate the mean\nmean_interviewed = sum(people_interviewed) / len(people_interviewed)\nanswer = mean_interviewed\n", "prediction": "13.0\n"}
{"context": "Read the following table regarding \"Shells Mona found\" and then answer a question.\n\nDay | Number of shells\nTuesday | 2\nWednesday | 0\nThursday | 3\nFriday | 6\nSaturday | 1", "question": "Mona spent a week at the beach and recorded the number of shells she found each day. According to the table, what was the rate of change between Tuesday and Wednesday?", "answer": "-2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of shells found on Tuesday and Wednesday\nshells_tuesday = 2\nshells_wednesday = 0\n\n# Calculate the rate of change\nrate_of_change = shells_wednesday - shells_tuesday\nanswer = rate_of_change\n", "prediction": "-2\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nshrimp | $8 per pound\ncrab meat | $6 per pound\noysters | $10 per pound\nscallops | $5 per pound\nlobster meat | $6 per pound\nmussels | $3 per pound", "question": "What is the total cost for 3/10 of a pound of crab meat?", "answer": "1.80", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_crab_meat = 6  # price of crab meat per pound\namount_in_pounds = 3 / 10  # amount in pounds\n# Calculate the total cost\ntotal_cost_crab_meat = price_per_pound_crab_meat * amount_in_pounds\nanswer = total_cost_crab_meat\n", "prediction": "1.7999999999999998\n"}
{"context": "Read the following table regarding \"Cows per farm\" and then answer a question.\n\nStem | Leaf \n2 | 5, 5\n3 | 3, 8, 9\n4 | \n5 | 5\n6 | 7", "question": "A researcher recorded the number of cows on each farm in the county. How many farms have exactly 25 cows?", "answer": "2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The stem-and-leaf display indicates that the number of cows on the farms is represented as follows:\n# Stem \"2\" represents 20-29 cows\n# Leaf \"5, 5\" indicates there are two farms with exactly 25 cows\n\nnumber_of_farms_with_25_cows = 2\nanswer = number_of_farms_with_25_cows\n", "prediction": "2\n"}
{"context": "Read the following table regarding \"Gymnastics meet schedule\" and then answer a question.\n\nEvent | Begin | End\nmen's parallel bars | 11:30 A.M. | 12:05 P.M.\nwomen's balance beam | 12:20 P.M. | 12:55 P.M.\nmen's floor exercise | 12:50 P.M. | 1:40 P.M.\nmen's vault | 1:45 P.M. | 2:30 P.M.\nmen's rings | 2:30 P.M. | 2:50 P.M.\nmen's pommel horse | 2:35 P.M. | 3:00 P.M.\nmen's high bar | 2:45 P.M. | 3:45 P.M.", "question": "Look at the following schedule. When does the men's vault event end? Choose from the the options: ['2:45 P.M.', '1:40 P.M.', '2:30 P.M.', '1:45 P.M.']", "answer": "2:30 P.M.", "ques_type": "multi_choice", "choices": ["2:45 P.M.", "1:40 P.M.", "2:30 P.M.", "1:45 P.M."], "code": "# Python code, return answer \n# The end time for the men's vault event as per the schedule\nend_mens_vault = '2:30 P.M.'\nanswer = end_mens_vault\n", "prediction": "2:30 P.M.\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nEuropean vacation package | $643.00\nCaribbean vacation package | $839.00\nAfrican safari vacation package | $962.00\nJamaican vacation package | $608.00", "question": "Bryant has $1,544.00. Does he have enough to buy an African safari vacation package and a Jamaican vacation package? Choose from the the options: ['yes', 'no']", "answer": "no", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# Prices of the vacation packages\nafrican_safari_price = 962.00\njamaican_price = 608.00\n# Total cost for both packages\ntotal_cost = african_safari_price + jamaican_price\n# Bryant's budget\nbryant_budget = 1544.00\n# Determine if Bryant has enough money\nif bryant_budget >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "no\n"}
{"context": "Read the following table regarding \"Making greeting cards\" and then answer a question.\n\nGreeting cards made | Frequency\n0 | 14\n1 | 12\n2 | 17\n3 | 4\n4 | 15", "question": "For a fundraiser, the children in the art club made greeting cards and kept track of how many they produced. How many children made more than 1 greeting card?", "answer": "36", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of children who made greeting cards\nfrequency = {\n    0: 14,\n    1: 12,\n    2: 17,\n    3: 4,\n    4: 15\n}\n\n# Calculate the number of children who made more than 1 greeting card\nchildren_more_than_one = frequency[2] + frequency[3] + frequency[4]\nanswer = children_more_than_one\n", "prediction": "36\n"}
{"context": "Read the following table regarding \"Track team sizes (number of members)\" and then answer a question.\n\nStem | Leaf \n2 | 0, 3, 3, 4, 6, 6\n3 | 2, 2, 5, 8\n4 | 9\n5 | 0, 4, 4\n6 | 2, 6\n7 | 0, 1, 3, 5\n8 | 3, 4", "question": "Mr. Middleton, a track coach, recorded the sizes of all the nearby track teams. How many teams have at least 27 members?", "answer": "16", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The sizes of the track teams according to the stem-and-leaf display.\nteam_sizes = [\n    20, 23, 23, 24, 26, 26,  # 20s\n    32, 32, 35, 38,          # 30s\n    49,                      # 40s\n    50, 54, 54,              # 50s\n    62, 66,                  # 60s\n    70, 71, 73, 75,          # 70s\n    83, 84                   # 80s\n]\n\n# Count teams with at least 27 members\nteams_at_least_27 = sum(1 for size in team_sizes if size >= 27)\nanswer = teams_at_least_27\n", "prediction": "16\n"}
{"context": "Read the following table regarding \"Trivia game scores\" and then answer a question.\n\nName | Score\nVijay | 46\nScott | 55\nBob | 55\nJason | 46\nHeather | 48\nCharlie | 55\nAiden | 48", "question": "Some friends played a trivia game and recorded their scores. What is the mode of the numbers?", "answer": "55", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nfrom statistics import mode\n\n# List of scores\nscores = [46, 55, 55, 46, 48, 55, 48]\n\n# Calculate the mode of the scores\nanswer = mode(scores)\n", "prediction": "55\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nOption | Change in phone price\nAdd an upgrade | $60\nBuy a used phone | -$75", "question": "Ariel is looking at the price of new cell phones online. Her favorite company, OrangeTech, has a special this weekend. Ariel can add an upgrade to a phone for an additional cost, or she can buy a used phone to get a discount. The change in price for each option is shown in the table. Which option results in a greater change in price? Choose from the the options: ['adding an upgrade', 'buying a used phone']", "answer": "buying a used phone", "ques_type": "multi_choice", "choices": ["adding an upgrade", "buying a used phone"], "code": "# Python code, return answer \nchange_upgrade = 60 \nchange_used_phone = -75 \n# Compare the changes in price (considering the discount)\nif change_upgrade > abs(change_used_phone): \n    answer = 'adding an upgrade'\nelse:\n    answer = 'buying a used phone'\n", "prediction": "buying a used phone\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$180 | 11,600 | 22,500\n$260 | 11,100 | 22,800\n$340 | 10,600 | 23,100\n$420 | 10,100 | 23,400\n$500 | 9,600 | 23,700", "question": "Look at the table. Then answer the question. At a price of $180, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "surplus", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \nquantity_demanded = 11600\nquantity_supplied = 22500\n\n# Determine if there is a shortage or surplus\nif quantity_demanded < quantity_supplied:\n    answer = 'surplus'\nelse:\n    answer = 'shortage'\n\n", "prediction": "surplus\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nNumber of branches | Number of caterpillars\n1 | 5\n2 | 10\n3 | 15\n4 | 20\n5 | ?", "question": "Each branch has 5 caterpillars. How many caterpillars are on 5 branches?", "answer": "25", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Each branch has 5 caterpillars\ncaterpillars_per_branch = 5 \n# Number of branches \nnumber_of_branches = 5 \n# Calculate the total number of caterpillars on 5 branches\ntotal_caterpillars = caterpillars_per_branch * number_of_branches\nanswer = total_caterpillars\n", "prediction": "25\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | E-readers | Paperback books\nAbout 1 hour per week | 3 | 6\nAbout 3 hours per week | 6 | 3", "question": "Lena joined a book club to spend more quality time with her cousin. At the first meeting, club members recorded how many hours a week they typically read and whether they preferred e-readers or paperback books. What is the probability that a randomly selected club member reads about 3 hours per week and prefers e-readers? Simplify any fractions.", "answer": "1/3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total number of club members\ntotal_members = 3 + 6 + 6 + 3  # (3 + 6 from about 1 hour, and 6 + 3 from about 3 hours)\n\n# Members who read about 3 hours per week and prefer e-readers\nmembers_3_hours_e_readers = 6\n\n# Calculate the probability\nprobability = members_3_hours_e_readers / total_members\n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(members_3_hours_e_readers, total_members).limit_denominator()\nanswer = simplified_probability\n", "prediction": "1/3\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\ndesigner coat | $6,487.00\ndesigner watch | $5,254.00\ndesigner ball gown | $1,830.00\ndesigner handbag | $2,288.00\npair of designer boots | $1,906.00\npair of designer shoes | $8,293.00", "question": "How much money does Laura need to buy 8 designer watches and 8 designer ball gowns?", "answer": "56,672", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_designer_watch = 5254.00\nprice_designer_ball_gown = 1830.00\n\n# Quantity of items Laura wants to buy\nquantity_watches = 8\nquantity_ball_gowns = 8\n\n# Total cost for watches and ball gowns\ntotal_cost_watches = price_designer_watch * quantity_watches\ntotal_cost_ball_gowns = price_designer_ball_gown * quantity_ball_gowns\ntotal_cost = total_cost_watches + total_cost_ball_gowns\n\nanswer = total_cost\n", "prediction": "56672.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | Mint | Fruity\nCaffeine-free | 3 | 5\nCaffeinated | 2 | 5", "question": "Savannah works at a coffee shop on weekends. Every now and then, a customer will order a hot tea and ask Savannah to surprise them with the flavor. The teas are categorized by flavor and caffeine level. What is the probability that a randomly selected tea is caffeine-free and mint? Simplify any fractions.", "answer": "1/5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total number of teas\ntotal_teas = 3 + 5 + 2 + 5\n# Number of caffeine-free mint teas\ncaffeine_free_mint = 3\n# Probability of selecting a caffeine-free mint tea\nprobability = caffeine_free_mint / total_teas\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(caffeine_free_mint, total_teas).limit_denominator()\nanswer = simplified_probability\n", "prediction": "1/5\n"}
{"context": "Read the following table regarding \"Broken tiles per shipment\" and then answer a question.\n\nStem | Leaf \n2 | 2, 6\n3 | 1, 5, 9\n4 | 6\n5 | 2, 3, 6, 6\n6 | 2, 2\n7 | 2, 3, 7\n8 | 0, 3, 8", "question": "Wildgrove Flooring tracked the number of broken tiles in each shipment it received last year. What is the smallest number of broken tiles?", "answer": "22", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The smallest number of broken tiles corresponds to the smallest value in the stem-and-leaf display.\nsmallest_broken_tiles = 22  # From the stem \"2 | 2\", the value is 22.\nanswer = smallest_broken_tiles\n", "prediction": "22\n"}
{"context": "Read the following table regarding \"Hours spent volunteering\" and then answer a question.\n\nDay | Hours\nThursday | 4\nFriday | 8\nSaturday | 6\nSunday | 2\nMonday | 10", "question": "To get credit for meeting her school's community service requirement, Lola kept a volunteering log. What is the median of the numbers?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of hours spent volunteering\nhours_volunteering = [4, 8, 6, 2, 10]\n# Sort the list to find the median\nhours_volunteering.sort()\n\n# Calculate the median\nn = len(hours_volunteering)\nif n % 2 == 0:  # If even number of elements\n    median = (hours_volunteering[n//2 - 1] + hours_volunteering[n//2]) / 2\nelse:  # If odd number of elements\n    median = hours_volunteering[n//2]\n\nanswer = median\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"Science articles read\" and then answer a question.\n\nName | Number of science articles\nIrma | 659\nRose | 635\nCarmen | 638\nHugo | 665", "question": "Irma's classmates revealed how many science articles they read. Who read the fewest science articles? Choose from the the options: ['Irma', 'Rose', 'Carmen', 'Hugo']", "answer": "Rose", "ques_type": "multi_choice", "choices": ["Irma", "Rose", "Carmen", "Hugo"], "code": "# Python code, return answer \narticles_read = {\n    'Irma': 659,\n    'Rose': 635,\n    'Carmen': 638,\n    'Hugo': 665\n}\n# Find the classmate who read the fewest articles\nfewest_articles = min(articles_read, key=articles_read.get)\nanswer = fewest_articles\n", "prediction": "Rose\n"}
{"context": "Read the following table regarding \"Drawing a card between 2 and 8\" and then answer a question.\n\nNumber drawn | Frequency\n2 | 16\n3 | 20\n4 | 19\n5 | 5\n6 | 7\n7 | 0\n8 | 11", "question": "As part of a math lab, Rosanne tracked the number of times her classmates drew a number between 2 and 8. Which number was drawn the fewest times?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency data for each number drawn\nfrequency = {\n    2: 16,\n    3: 20,\n    4: 19,\n    5: 5,\n    6: 7,\n    7: 0,\n    8: 11\n}\n# Find the number drawn the fewest times\nfewest_drawn_number = min(frequency, key=frequency.get)\nanswer = fewest_drawn_number\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"Student council committees\" and then answer a question.\n\nCommittee | Students | Teachers\nCafeteria | 13 | 7\nParty | 18 | 16\nSports | 13 | 8\nGraduation | 9 | 15", "question": "Sparrowtown High School's student council recruited teachers and students to serve on each of its committees. Are there fewer people on the party committee or the cafeteria committee? Choose from the the options: ['cafeteria', 'party']", "answer": "cafeteria", "ques_type": "multi_choice", "choices": ["cafeteria", "party"], "code": "# Python code, return answer \n# Calculate the total number of people on each committee\ncafeteria_total = 13 + 7\nparty_total = 18 + 16\n\n# Determine which committee has fewer people\nif cafeteria_total < party_total:\n    answer = 'cafeteria'\nelse:\n    answer = 'party'\n\n", "prediction": "cafeteria\n"}
{"context": "Read the following table regarding \"Billboards per city\" and then answer a question.\n\nStem | Leaf \n0 | 2, 4, 6\n1 | 4, 6, 7, 9, 9\n2 | 4\n3 | 3\n4 | 3, 5, 6\n5 | 5, 6", "question": "The advertising agency counted the number of billboards in each city in the state. What is the largest number of billboards?", "answer": "56", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# The largest number of billboards corresponds to the largest value in the stem-and-leaf display.\nlargest_billboards = 56  # From the stem \"5 | 5, 6\", the largest value is 56.\nanswer = largest_billboards\n", "prediction": "56\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npepper | $8 per lb\ncinnamon | $7 per lb\nturmeric | $6 per lb\ncumin | $8 per lb\npaprika | $4 per lb", "question": "Derek bought 1.3 pounds of pepper. How much did he spend?", "answer": "10.40", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_pepper = 8  # price of pepper per lb\npounds_bought = 1.3  # amount of pepper bought\n# Calculate total cost\ntotal_cost = price_per_pound_pepper * pounds_bought\nanswer = total_cost\n", "prediction": "10.4\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPattern A | add | 2 6 | 8 | 10 | 12\nPattern B | add | 8 22 | 30 | 38 | 46", "question": "Compare pattern A to pattern B. Which statement is true?  Choose from the the options: ['Each term in pattern B can be found by subtracting the corresponding term in pattern A from 28.', 'Each term in pattern B can be found by multiplying the corresponding term in pattern A by 4 and then subtracting 2.']", "answer": "Each term in pattern B can be found by multiplying the corresponding term in pattern A by 4 and then subtracting 2.", "ques_type": "multi_choice", "choices": ["Each term in pattern B can be found by subtracting the corresponding term in pattern A from 28.", "Each term in pattern B can be found by multiplying the corresponding term in pattern A by 4 and then subtracting 2."], "code": "# Python code, return answer \n# Values from pattern A\npattern_a = [2, 6, 8, 10, 12]\n# Values from pattern B\npattern_b = [8, 22, 30, 38, 46]\n\n# Check the first option\noption_1_true = all((28 - a == b) for a, b in zip(pattern_a, pattern_b))\n\n# Check the second option\noption_2_true = all((a * 4 - 2 == b) for a, b in zip(pattern_a, pattern_b))\n\n# Determine the correct statement\nif option_1_true:\n    answer = 'Each term in pattern B can be found by subtracting the corresponding term in pattern A from 28.'\nelif option_2_true:\n    answer = 'Each term in pattern B can be found by multiplying the corresponding term in pattern A by 4 and then subtracting 2.'\nelse:\n    answer = 'Neither statement is true.'\n\n", "prediction": "Neither statement is true.\n"}
{"context": "Read the following table regarding \"Law firm hours billed\" and then answer a question.\n\nPartner | Hours billed\nKendall | 760\nMelissa | 910\nAllie | 1,000\nBob | 930\nGordon | 820\nGina | 750", "question": "A law firm in Kensington kept track of how many hours were billed by each partner last year. What fraction of the hours were billed by Bob? Simplify your answer.", "answer": "93/517", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total hours billed by all partners\ntotal_hours = 760 + 910 + 1000 + 930 + 820 + 750\n# Hours billed by Bob\nbob_hours = 930\n# Calculate the fraction of hours billed by Bob\nfraction_bob = bob_hours / total_hours\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_fraction = Fraction(bob_hours, total_hours).limit_denominator()\nanswer = simplified_fraction\n", "prediction": "93/517\n"}
{"context": "Read the following table regarding \"Trips to the zoo last year\" and then answer a question.\n\nNumber of trips | Frequency\n0 | 13\n1 | 4\n2 | 16\n3 | 0\n4 | 3\n5 | 5", "question": "The members of the science club shared how many times they had been to the zoo last year. How many members went to the zoo more than 3 times?", "answer": "8", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of trips to the zoo more than 3 times\nfrequency_data = {\n    0: 13,\n    1: 4,\n    2: 16,\n    3: 0,\n    4: 3,\n    5: 5\n}\n\n# Calculate the number of members who went to the zoo more than 3 times\nmembers_more_than_3_trips = frequency_data[4] + frequency_data[5]\nanswer = members_more_than_3_trips\n", "prediction": "8\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\njar of pickles | $0.87\njar of olives | $0.42\ncan of mushrooms | $0.95\njar of applesauce | $0.88", "question": "How much money does Cody need to buy 5 jars of olives?", "answer": "2.10", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_jar_olives = 0.42 \njars_bought = 5 \ntotal_cost = price_per_jar_olives * jars_bought\nanswer = total_cost\n", "prediction": "2.1\n"}
{"context": "Read the following table regarding \"Stock prices\" and then answer a question.\n\nCompany | Wednesday | Thursday\nThompson Corporation | $19 | $18\nWatson and Partners | $20 | $6\nComputer Data Company | $4 | $18\nWhite and Company | $14 | $12\nHouston Sporting Goods | $14 | $13", "question": "A stock broker followed the stock prices of a certain set of companies. On Wednesday, how much more did Thompson Corporation's stock cost than Houston Sporting Goods's stock?", "answer": "5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nthompson_corporation_price_wednesday = 19 \nhouston_sporting_goods_price_wednesday = 14 \n\n# Calculate the difference\ndifference = thompson_corporation_price_wednesday - houston_sporting_goods_price_wednesday\nanswer = difference\n", "prediction": "5\n"}
{"context": "Read the following table regarding \"Writing letters\" and then answer a question.\n\nLetters written | Frequency\n0 | 3\n1 | 16\n2 | 9\n3 | 6", "question": "A researcher asked people how many letters they had written in the past year and recorded the results. How many people did not write letters?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Frequency of people who wrote 0 letters\nfrequency_zero_letters = 3\nanswer = frequency_zero_letters\n", "prediction": "3\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbook about helicopters | $2.00\nbook about reptiles | $6.00\nbook about dinosaurs | $3.00\nbook about outer space | $1.00", "question": "Miguel has $6.00. Does he have enough to buy a book about dinosaurs and a book about helicopters? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \ncost_book_helicopters = 2.00\ncost_book_dinosaurs = 3.00\ntotal_cost = cost_book_helicopters + cost_book_dinosaurs\nmiguel_budget = 6.00\n\n# Check if Miguel has enough money\nif miguel_budget >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"Chocolate preferences\" and then answer a question.\n\nType | Number of respondents\nDark chocolate | 480\nMilk chocolate | 530\nWhite chocolate | 1,000", "question": "A survey was conducted to learn people's chocolate preferences. What fraction of the respondents preferred milk chocolate? Simplify your answer.", "answer": "53/201", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total respondents\ntotal_respondents = 480 + 530 + 1000\n# Respondents who preferred milk chocolate\nmilk_chocolate_respondents = 530\n# Calculate the fraction of respondents who preferred milk chocolate\nfraction_milk_chocolate = milk_chocolate_respondents / total_respondents\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_fraction = Fraction(milk_chocolate_respondents, total_respondents).limit_denominator()\nanswer = simplified_fraction\n", "prediction": "53/201\n"}
{"context": "Read the following table regarding \"Pieces of fruit picked\" and then answer a question.\n\nFruits | Pieces of fruit\nLemons | 41\nNectarines | 100\nApples | 71\nPlums | 13\nPears | 55", "question": "Brett, who has five different fruit trees growing in his yard, kept track of how many pieces of fruit he picked this year. What fraction of the pieces of fruit picked were pears? Simplify your answer.", "answer": "11/56", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total pieces of fruit picked\ntotal_fruit = 41 + 100 + 71 + 13 + 55\n# Pieces of pears picked\npears_picked = 55\n# Calculate the fraction of pieces of fruit picked that were pears\nfraction_pears = pears_picked / total_fruit\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_fraction = Fraction(pears_picked, total_fruit).limit_denominator()\nanswer = simplified_fraction\n", "prediction": "11/56\n"}
{"context": "Read the following table regarding \"Cows per farm\" and then answer a question.\n\nStem | Leaf \n3 | 0, 2, 2, 3, 9\n4 | 2, 6\n5 | 4\n6 | 3\n7 | 8\n8 | 8\n9 | 0", "question": "A researcher recorded the number of cows on each farm in the county. How many farms have at least 70 cows but fewer than 100 cows?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Listing the number of cows based on the stem-and-leaf display\ncows_per_farm = [\n    30, 32, 32, 33, 39,  # Stem 3\n    42, 46,              # Stem 4\n    54,                  # Stem 5\n    63,                  # Stem 6\n    78,                  # Stem 7\n    88,                  # Stem 8\n    90                   # Stem 9\n]\n\n# Counting the farms with at least 70 and fewer than 100 cows\ncount_farms = sum(1 for cows in cows_per_farm if 70 <= cows < 100)\nanswer = count_farms\n", "prediction": "3\n"}
{"context": "Read the following table regarding \"Vacation days taken by Abby\" and then answer a question.\n\nYear | Vacation days\n2013 | 26\n2014 | 39\n2015 | 34\n2016 | 39\n2017 | 26", "question": "To figure out how many vacation days she had left to use, Abby looked over her old calendars to figure out how many days of vacation she had taken each year. According to the table, what was the rate of change between 2014 and 2015?", "answer": "-5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nvacation_days_2014 = 39\nvacation_days_2015 = 34\n\n# Calculate the rate of change\nrate_of_change = vacation_days_2015 - vacation_days_2014\nanswer = rate_of_change\n", "prediction": "-5\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nPrice | Quantity demanded | Quantity supplied\n$130 | 14,500 | 3,600\n$180 | 11,500 | 6,000\n$230 | 8,500 | 8,400\n$280 | 5,500 | 10,800\n$330 | 2,500 | 13,200", "question": "Look at the table. Then answer the question. At a price of $180, is there a shortage or a surplus? Choose from the the options: ['shortage', 'surplus']", "answer": "shortage", "ques_type": "multi_choice", "choices": ["shortage", "surplus"], "code": "# Python code, return answer \nquantity_demanded_at_180 = 11500 \nquantity_supplied_at_180 = 6000 \n\n# Determine if there is a shortage or surplus\nif quantity_demanded_at_180 > quantity_supplied_at_180:\n    answer = 'shortage'\nelse:\n    answer = 'surplus'\n\n", "prediction": "shortage\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\npurple clam shell | $0.07\nwhite spindle shell | $0.07\nspiral snail shell | $0.05\nscallop shell | $0.01\npink and white striped shell | $0.07", "question": "Derek has $0.13. Does he have enough to buy a spiral snail shell and a pink and white striped shell? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \nprice_spiral_snail_shell = 0.05\nprice_pink_white_striped_shell = 0.07\ntotal_cost = price_spiral_snail_shell + price_pink_white_striped_shell\nderek_money = 0.13\n\n# Check if Derek has enough money\nif derek_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"Photographs taken\" and then answer a question.\n\nDay | Number of photographs\nSaturday | 6\nSunday | 0\nMonday | 8\nTuesday | 3\nWednesday | 8", "question": "Chad looked at the dates of the digital photos on his computer to find out how many he had taken in the past 5 days. What is the mean of the numbers?", "answer": "5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of photographs taken each day\nphotographs = [6, 0, 8, 3, 8]\n# Calculate the mean\nmean_photographs = sum(photographs) / len(photographs)\nanswer = mean_photographs\n", "prediction": "5.0\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | Horizontally | Vertically\n50 photos | 8 | 5\n100 photos | 2 | 3", "question": "Natalie just returned from a spring break volunteer trip. She is shopping for a photo album that will showcase her photos from the trip. The albums range in photo capacity and orientation. What is the probability that a randomly selected photo album holds exactly 100 photos and is oriented horizontally? Simplify any fractions.", "answer": "1/9", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total options available\ntotal_albums = 2 + 3 + 8 + 5  # Total albums: (Horizontally 50 photos) + (Horizontally 100 photos) + (Vertically 50 photos) + (Vertically 100 photos)\n\n# Options for 100 photos and horizontal orientation\nalbums_100_horizontal = 2  \n\n# Probability calculation\nprobability = albums_100_horizontal / total_albums\n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(albums_100_horizontal, total_albums).limit_denominator()\nanswer = simplified_probability\n", "prediction": "1/9\n"}
{"context": "Read the following table regarding \"Pages per magazine\" and then answer a question.\n\nStem | Leaf \n2 | 6, 6, 6\n3 | \n4 | 9\n5 | 0\n6 | \n7 | 3, 4, 6", "question": "Rosa, a journalism student, counted the number of pages in several major magazines. How many magazines had exactly 26 pages?", "answer": "3", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# From the stem-and-leaf display, the leaf for stem '2' indicates the magazines with exactly 26 pages.\n# Stem '2' represents 20s, and the leaf '6' means 26 pages.\nmagazines_with_26_pages = 3  # There are three '6's under the stem '2'.\nanswer = magazines_with_26_pages\n", "prediction": "3\n"}
{"context": "Read the following table regarding \"Track meet schedule\" and then answer a question.\n\nEvent | Begin | End\njavelin throw | 11:00 A.M. | 11:15 A.M.\nsteeplechase | 11:30 A.M. | 11:45 A.M.\nmen's relay | 11:50 A.M. | 12:40 P.M.\ndiscus throw | 12:45 P.M. | 1:45 P.M.\npole vault | 1:55 P.M. | 2:25 P.M.\nlong jump | 2:40 P.M. | 3:15 P.M.", "question": "Look at the following schedule. When does the discus throw end? Choose from the the options: ['11:45 A.M.', '2:25 P.M.', '1:45 P.M.', '12:40 P.M.']", "answer": "1:45 P.M.", "ques_type": "multi_choice", "choices": ["11:45 A.M.", "2:25 P.M.", "1:45 P.M.", "12:40 P.M."], "code": "# Python code, return answer \n# The end time for the discus throw as per the schedule.\nend_time_discuss_throw = '1:45 P.M.'\nanswer = end_time_discuss_throw\n", "prediction": "1:45 P.M.\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nred sports car | $8,473.00\nblack motorcycle | $9,734.00\nred two-door coupe | $7,702.00\nblack convertible | $6,084.00\nold white van | $8,178.00\ndark blue hatchback | $5,038.00", "question": "How much money does Darnel need to buy a black motorcycle, a red two-door coupe, and a black convertible?", "answer": "23,520", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the vehicles\nblack_motorcycle_price = 9734.00\nred_two_door_coupe_price = 7702.00\nblack_convertible_price = 6084.00\n\n# Total amount needed to buy the three vehicles\ntotal_amount_needed = black_motorcycle_price + red_two_door_coupe_price + black_convertible_price\nanswer = total_amount_needed\n", "prediction": "23520.0\n"}
{"context": "Read the following table regarding \"Cookies baked\" and then answer a question.\n\nName | Number of cookies\nRiley | 71\nHannah | 75\nLayla | 78\nMadelyn | 79", "question": "The art club examined how many cookies each student baked for the bake sale. Who baked the most cookies? Choose from the the options: ['Riley', 'Hannah', 'Layla', 'Madelyn']", "answer": "Madelyn", "ques_type": "multi_choice", "choices": ["Riley", "Hannah", "Layla", "Madelyn"], "code": "# Python code, return answer \ncookies_baked = {\n    'Riley': 71,\n    'Hannah': 75,\n    'Layla': 78,\n    'Madelyn': 79\n}\n# Find the student who baked the most cookies\nmost_cookies_student = max(cookies_baked, key=cookies_baked.get)\nanswer = most_cookies_student\n", "prediction": "Madelyn\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nbag of marshmallows | $2.97\nbag of chocolate chips | $2.61\nblock of cheddar cheese | $3.47\ncan of coffee beans | $5.16\nbag of almonds | $4.05", "question": "Terrell has $14.49. How much money will Terrell have left if he buys a can of coffee beans and a block of cheddar cheese?", "answer": "5.86", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Prices of the items\nprice_coffee_beans = 5.16\nprice_cheddar_cheese = 3.47\n# Total cost of items purchased\ntotal_cost = price_coffee_beans + price_cheddar_cheese\n# Terrell's initial amount of money\nterrell_money = 14.49\n# Remaining money after purchases\nremaining_money = terrell_money - total_cost\nanswer = remaining_money\n", "prediction": "5.859999999999999\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\n | Age 8 | Age 10\nIn-line skates | 2 | 3\nRoller skates | 2 | 3", "question": "A skating rink attendant monitored the number of injuries at the rink over the past year. He tracked the ages of those injured and the kinds of skates worn during injury. What is the probability that a randomly selected injured skater was wearing in-line skates and was age 8? Simplify any fractions.", "answer": "1/5", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Total number of injuries\ninjuries_age_8_inline = 2\ninjuries_age_8_roller = 2\ninjuries_age_10_inline = 3\ninjuries_age_10_roller = 3\n\ntotal_injuries = injuries_age_8_inline + injuries_age_8_roller + injuries_age_10_inline + injuries_age_10_roller\n\n# Probability of randomly selecting an injured skater wearing in-line skates and age 8\nprobability_injured_inline_age_8 = injuries_age_8_inline / total_injuries\n\n# Simplifying the fraction\nfrom fractions import Fraction\nsimplified_probability = Fraction(injuries_age_8_inline, total_injuries).limit_denominator()\n\nanswer = simplified_probability\n", "prediction": "1/5\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nset of golf clubs | $390.00\nsnowboard | $910.00\nmountain bike | $763.00\nwetsuit | $660.00", "question": "Nolan has $1,425.00. Does he have enough to buy a wetsuit and a mountain bike? Choose from the the options: ['yes', 'no']", "answer": "yes", "ques_type": "multi_choice", "choices": ["yes", "no"], "code": "# Python code, return answer \n# Prices of the items\nwetsuit_price = 660.00\nmountain_bike_price = 763.00\n# Total cost for the wetsuit and mountain bike\ntotal_cost = wetsuit_price + mountain_bike_price\n# Amount of money Nolan has\nnolan_money = 1425.00\n# Check if Nolan has enough money\nif nolan_money >= total_cost:\n    answer = 'yes'\nelse:\n    answer = 'no'\n", "prediction": "yes\n"}
{"context": "Read the following table regarding \"None\" and then answer a question.\n\nsalami | $2 per pound\nliverwurst | $4 per pound\nlinguica | $4 per pound\npepperoni | $5 per pound\nchorizo | $2 per pound\nItalian sausage | $6 per pound\nbratwurst | $6 per pound", "question": "Reba buys 2.6 pounds of liverwurst. How much does she spend?", "answer": "10.40", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nprice_per_pound_liverwurst = 4  # $4 per pound\npounds_bought = 2.6\n# Calculate the total cost\ntotal_cost = price_per_pound_liverwurst * pounds_bought\nanswer = total_cost\n", "prediction": "10.4\n"}
{"context": "Read the following table regarding \"Computers in classrooms\" and then answer a question.\n\nTeacher | Number of computers\nMs. Rojas | 6\nMs. Cohen | 4\nMr. Lim | 5\nMrs. Rossi | 6\nMr. Morales | 9\nMr. Schmidt | 4\nMiss Murphy | 6\nMrs. Tan | 5", "question": "The teachers at a middle school counted how many computers they had in their classrooms. What is the mode of the numbers?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \nfrom statistics import mode\n\n# List of the number of computers in each classroom\ncomputers = [6, 4, 5, 6, 9, 4, 6, 5]\n\n# Calculate the mode of the numbers\nmode_computers = mode(computers)\nanswer = mode_computers\n", "prediction": "6\n"}
{"context": "Read the following table regarding \"Photographs taken\" and then answer a question.\n\nDay | Number of photographs\nSunday | 0\nMonday | 7\nTuesday | 4\nWednesday | 8\nThursday | 5\nFriday | 12\nSaturday | 6", "question": "Sally looked at the dates of the digital photos on her computer to find out how many she had taken in the past 7 days. What is the mean of the numbers?", "answer": "6", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Number of photographs taken each day\nphotographs = [0, 7, 4, 8, 5, 12, 6]\n# Calculate the mean\nmean_photographs = sum(photographs) / len(photographs)\nanswer = mean_photographs\n", "prediction": "6.0\n"}
{"context": "Read the following table regarding \"Bags of popcorn sold\" and then answer a question.\n\nDay | Number of bags of popcorn\nFriday | 1\nSaturday | 6\nSunday | 3\nMonday | 2\nTuesday | 3\nWednesday | 3\nThursday | 8", "question": "A concession stand worker at the movie theater looked up how many bags of popcorn were sold in the past 7 days. What is the range of the numbers?", "answer": "7", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# List of bags of popcorn sold each day\npopcorn_sold = [1, 6, 3, 2, 3, 3, 8]\n# Calculate the range\nrange_popcorn = max(popcorn_sold) - min(popcorn_sold)\nanswer = range_popcorn\n", "prediction": "7\n"}
{"context": "Read the following table regarding \"Stock prices\" and then answer a question.\n\nCompany | Wednesday | Thursday\nWatson and Partners | $17 | $18\nWhite and Company | $19 | $16\nJonas Incorporated | $20 | $18", "question": "A stock broker followed the stock prices of a certain set of companies. Which company's stock cost more on Wednesday, Watson and Partners or White and Company? Choose from the the options: ['White and Company', 'Watson and Partners']", "answer": "White and Company", "ques_type": "multi_choice", "choices": ["White and Company", "Watson and Partners"], "code": "# Python code, return answer \n# Stock prices on Wednesday\nwatson_price_wednesday = 17\nwhite_price_wednesday = 19\n\n# Determine which company's stock cost more on Wednesday\nif white_price_wednesday > watson_price_wednesday:\n    answer = 'White and Company'\nelse:\n    answer = 'Watson and Partners'\n    \n", "prediction": "White and Company\n"}
{"context": "Read the following table regarding \"Tour boat schedule\" and then answer a question.\n\nSea Town | 8:00 A.M. | 8:15 A.M. | 8:30 A.M. | 9:30 A.M.\nFisherman's Cove | 9:45 A.M. | 10:00 A.M. | 10:15 A.M. | 11:15 A.M.\nStarfish Point | 10:30 A.M. | 10:45 A.M. | 11:00 A.M. | 12:00 P.M.\nRocky Cliffs | 11:45 A.M. | 12:00 P.M. | 12:15 P.M. | 1:15 P.M.\nPalm Tree Island | 1:15 P.M. | 1:30 P.M. | 1:45 P.M. | 2:45 P.M.", "question": "Look at the following schedule. Linda got on the boat at Fisherman's Cove at 9.45 A.M. What time will she get to Palm Tree Island? Choose from the the options: ['1:45 P.M.', '9:45 A.M.', '10:45 A.M.', '1:15 P.M.']", "answer": "1:15 P.M.", "ques_type": "multi_choice", "choices": ["1:45 P.M.", "9:45 A.M.", "10:45 A.M.", "1:15 P.M."], "code": "# Python code, return answer \n# According to the schedule, the boat from Fisherman's Cove at 9:45 A.M. arrives at Palm Tree Island at 1:15 P.M.\narrival_time = '1:15 P.M.'\nanswer = arrival_time\n", "prediction": "1:15 P.M.\n"}
{"context": "Read the following table regarding \"Convenience store beverage sales\" and then answer a question.\n\nBeverage | Thursday | Friday\nNatural Goodness Juice | $18 | $10\nPearl's Soda | $7 | $4\nNature's Nectar | $2 | $4\nBrenner's Juices | $5 | $13", "question": "Joseph, an employee at Morrison's Convenience Store, looked at the sales of each of its soda products. How much more did the convenience store make from Nature's Nectar sales on Friday than on Thursday?", "answer": "2", "ques_type": "free_text", "choices": null, "code": "# Python code, return answer \n# Sales for Nature's Nectar on each day\nsales_thursday = 2  # Nature's Nectar sales on Thursday\nsales_friday = 4    # Nature's Nectar sales on Friday\n\n# Calculate the difference in sales between Friday and Thursday\ndifference = sales_friday - sales_thursday\nanswer = difference\n", "prediction": "2\n"}
